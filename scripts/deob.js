"use strict";
const CUSTOMWASM = "";
var hsw = function () {
    function exec(val) {
        if (void 0 === val) {
            return {};
        }
        if (val === Object(val)) {
            return val;
        }
        throw TypeError("Could not convert argument to dictionary");
    }
    function Stream(text) {
        this.tokens = [].slice.call(text);
        this.tokens.reverse();
    }
    function on(emitter, event) {
        if (emitter) {
            throw TypeError("Decoder error");
        }
        return event || 65533;
    }
    function decode(encoding, options) {
        if (!(this instanceof decode)) {
            throw TypeError("Called as a function. Did you forget 'new'?");
        }
        encoding = void 0 !== encoding ? String(encoding) : "utf-8";
        options = exec(options);
        this._encoding = null;
        this._decoder = null;
        this._ignoreBOM = false;
        this._BOMseen = false;
        this._error_mode = "replacement";
        this._do_not_flush = false;
        var value = (encoding = String(encoding).trim().toLowerCase(), Object.prototype.hasOwnProperty.call(events, encoding) ? events[encoding] : null);
        if (null === value || "replacement" === value.name) {
            throw RangeError("Unknown encoding: " + encoding);
        }
        if (!encoders[value.name]) {
            throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");
        }
        var dec = this;
        return dec._encoding = value, options.fatal && (dec._error_mode = "fatal"), options.ignoreBOM && (dec._ignoreBOM = true), Object.defineProperty || (this.encoding = dec._encoding.name.toLowerCase(), this.fatal = "fatal" === dec._error_mode, this.ignoreBOM = dec._ignoreBOM), dec;
    }
    function error(label, options) {
        if (!(this instanceof error)) {
            throw TypeError("Called as a function. Did you forget 'new'?");
        }
        options = exec(options);
        this._encoding = null;
        this._encoder = null;
        this._do_not_flush = false;
        this._fatal = options.fatal ? "fatal" : "replacement";
        enc._encoding = ("utf-8" = String("utf-8").trim().toLowerCase(), Object.prototype.hasOwnProperty.call(events, "utf-8") ? events["utf-8"] : null);
        
        return Object.defineProperty || (this.encoding = enc._encoding.name.toLowerCase()), enc;
    }
    
    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (easingMethod, reject) {
            function fulfilled(value) {
                var notObject = test;
                try {
                    step(generator[notObject(176)](value));
                } catch (ABORTING) {
                    reject(ABORTING);
                }
            }
            function rejected(value) {
                var text = test;
                try {
                    step(generator[text(299)](value));
                } catch (ABORTING) {
                    reject(ABORTING);
                }
            }
            function step(value) {
                var x;
                var getPos = test;
                if (value.done) {
                    easingMethod(value.value);
                } else {
                    (x = value[getPos(834)], x instanceof P ? x : new P(function (resolve) {
                        resolve(x);
                    })).then(fulfilled, rejected);
                }
            }
            var notObject = test;
            step((generator = generator[notObject(740)](thisArg, _arguments || []))[notObject(176)]());
        });
    }
    function send(val, actions) {
        function verb(data) {
            return function (i) {
                var value = 304;
                return function (obj) {
                    var parseInt = test;
                    if (nvalue) {
                        throw new TypeError(parseInt(736));
                    }
                    for (; g && (g = 0, obj[0] && (options = 0)), options;) {
                        try {
                            if (nvalue = 1, data && (value = 2 & obj[0] ? data[parseInt(177)] : obj[0] ? data[parseInt(299)] || ((value = data.return) && value[parseInt(314)](data), 0) : data[parseInt(176)]) && !(value = value[parseInt(314)](data, obj[1]))[parseInt(754)]) {
                                return value;
                            }
                            switch (data = 0, value && (obj = [2 & obj[0], value.value]), obj[0]) {
                                case 0:
                                case 1:
                                    value = obj;
                                    break;
                                case 4:
                                    var values = {};
                                    return values[parseInt(834)] = obj[1], values[parseInt(754)] = false, options[parseInt(304)]++, values;
                                case 5:
                                    options[parseInt(304)]++;
                                    data = obj[1];
                                    obj = [0];
                                    continue;
                                case 7:
                                    obj = options[parseInt(215)][parseInt(428)]();
                                    options[parseInt(280)].pop();
                                    continue;
                                default:
                                    if (!((value = (value = options[parseInt(280)])[parseInt(238)] > 0 && value[value.length - 1]) || 6 !== obj[0] && 2 !== obj[0])) {
                                        options = 0;
                                        continue;
                                    }
                                    if (3 === obj[0] && (!value || obj[1] > value[0] && obj[1] < value[3])) {
                                        options[parseInt(value)] = obj[1];
                                        break;
                                    }
                                    if (6 === obj[0] && options[parseInt(304)] < value[1]) {
                                        options[parseInt(304)] = value[1];
                                        value = obj;
                                        break;
                                    }
                                    if (value && options[parseInt(304)] < value[2]) {
                                        options[parseInt(304)] = value[2];
                                        options.ops[parseInt(769)](obj);
                                        break;
                                    }
                                    if (value[2]) {
                                        options[parseInt(215)][parseInt(428)]();
                                    }
                                    options[parseInt(280)][parseInt(428)]();
                                    continue;
                            }
                            obj = actions[parseInt(314)](val, options);
                        } catch (quick) {
                            obj = [6, quick];
                            data = 0;
                        } finally {
                            nvalue = value = 0;
                        }
                    }
                    if (5 & obj[0]) {
                        throw obj[1];
                    }
                    values = {};
                    return values[parseInt(834)] = obj[0] ? obj[1] : void 0, values[parseInt(754)] = true, values;
                }([data, i]);
            };
        }
        var nvalue;
        var value;
        var g;
        var makeTimeoutHandler = test;
        var options = {
            label: 0, sent: function () {
                if (1 & value[0]) {
                    throw value[1];
                }
                return value[1];
            }, trys: [], ops: []
        };
        return g = { next: verb(0), throw: verb(1), return: verb(2) }, makeTimeoutHandler(652) == typeof Symbol && (g[Symbol.iterator] = function () {
            return this;
        }), g;
    }
    function debug(data, obj, render) {
        var getKey = test;
        if (render || 2 === arguments.length) {
            var tmp;
            var key = 0;
            var result = obj[getKey(238)];
            for (; key < result; key++) {
                if (!(!tmp && key in obj)) {
                    if (!tmp) {
                        tmp = Array[getKey(257)][getKey(671)].call(obj, 0, key);
                    }
                    tmp[key] = obj[key];
                }
            }
        }
        return data[getKey(450)](tmp || Array[getKey(257)][getKey(671)][getKey(314)](obj));
    }
    function test(a, f) {
        var elem = onload();
        test = function (num, flag) {
            var e = elem[num = num - 172];
            if (void 0 === test.aGJSks) {
                test.XPamLr = function (result) {
                    var d;
                    var c;
                    var format = "";
                    var escapedString = "";
                    var q = 0;
                    var i1 = 0;
                    for (; c = result.charAt(i1++); ~c && (d = q % 4 ? 64 * d + c : c, q++ % 4) ? format = format + String.fromCharCode(255 & d >> (-2 * q & 6)) : 0) {
                        c = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=".indexOf(c);
                    }
                    var i = 0;
                    var l = format.length;
                    for (; i < l; i++) {
                        escapedString = escapedString + ("%" + ("00" + format.charCodeAt(i).toString(16)).slice(-2));
                    }
                    return decodeURIComponent(escapedString);
                };
                a = arguments;
                test.aGJSks = true;
            }
            var s = num + elem[0];
            var val = a[s];
            return val ? e = val : (e = test.XPamLr(e), a[s] = e), e;
        };
        return test(a, f);
    }
    function toPrimitive(target, value) {
        var call = test;
        var res = {};
        return res[null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed] = value, Object[null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed] ? Object[null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed](target, (null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed), res) : target.raw = value, target;
    }
    function join() {
        var notObject = test;
        return notObject(349) != typeof performance && "function" == typeof performance[notObject(301)] ? performance.now() : Date.now();
    }
    function spawn() {
        var certFile = join();
        return function () {
            return join() - certFile;
        };
    }
    function hook(name, data, element) {
        var url;
        return function (provider) {
            return url = url || function (data, string, suppressDisabledCheck) {
                var mode = test;
                var properties = { type: mode(422) };
                var path = void 0 === string ? null : string;
                var set = function (dataString, canCreateDiscussions) {
                    var key = mode;
                    var result = atob(dataString);
                    if (canCreateDiscussions) {
                        var ret = new Uint8Array(result.length);
                        var i = 0;
                        var testMeshes = result[key(238)];
                        for (; i < testMeshes; ++i) {
                            ret[i] = result.charCodeAt(i);
                        }
                        return String[key(593)][key(740)](null, new Uint16Array(ret.buffer));
                    }
                    return result;
                }(data, void 0 !== suppressDisabledCheck && suppressDisabledCheck);
                var index = set[mode(588)]("\n", 10) + 1;
                var woffFontBuffer = set.substring(index) + (path ? "//# sourceMappingURL=" + path : "");
                var moduleBlob = new Blob([woffFontBuffer], properties);
                return URL[mode(281)](moduleBlob);
            }(name, data, element), new Worker(url, provider);
        };
    }
    function require(id, callback) {
        return function (func, body, done) {
            var notObject = test;
            if (void 0 === body) {
                body = data;
            }
            if (void 0 === done) {
                done = extensions;
            }
            var promise = function (type) {
                if (type instanceof Error) {
                    func(id, type[test(768)]());
                } else {
                    func(id, "string" == typeof type ? type : null);
                }
            };
            try {
                var ret = callback(func, body, done);
                if (ret instanceof Promise) {
                    return done(ret)[notObject(592)](promise);
                }
            } catch (resolveMap) {
                promise(resolveMap);
            }
        };
    }
    function done(val, pre) {
        if (!val) {
            throw new Error(pre);
        }
    }
    function map(args, f) {
        var mode = test;
        return void 0 === f && (f = function (b, g) {
            return g(b[test(415)]);
        }), new Promise(function (width, c) {
            var mode = test;
            args[mode(555)]("message", function (A) {
                f(A, width, c);
            });
            args[mode(555)](mode(611), function (myPreferences) {
                var postFunc = myPreferences[mode(415)];
                c(postFunc);
            });
            args[mode(555)]("error", function (b) {
                var getSymbolIterator = mode;
                b[getSymbolIterator(201)]();
                b[getSymbolIterator(742)]();
                c(b.message);
            });
        })[mode(554)](function () {
            args.terminate();
        });
    }
    function collect(parent, name, value) {
        var round = current;
        if (void 0 === value) {
            value = round(264);
        }
        parent[round(362)] = round(676)[round(450)](name);
        var values = parent[round(541)](value);
        return [values[round(458)], values[round(586)], values[round(413)], values[round(470)], values[round(338)], values[round(329)], values.width];
    }
    function wrap(args, obj) {
        var fn = current;
        if (!obj) {
            return null;
        }
        obj[args[505]](0, 0, args[args[522]], args[args[364]]);
        args.width = 2;
        args[args[364]] = 2;
        var data = Math.floor(254 * Math[args[426]]()) + 1;
        return obj[args[656]] = args[268][args[450]](data, ", ")[args[450]](data, ", ").concat(data, ", 1)"), obj[args[334]](0, 0, 2, 2), [data, debug([], obj[args[320]](0, 0, 2, 2).data, true)];
    }
    function toString() {
        var path = current;
        var last_chunk_length = Math.floor(9 * Math[path(426)]()) + 7;
        var predicted_answer = String[path(593)](26 * Math[path(426)]() + 97);
        var initialMock = Math.random().toString(36).slice(-last_chunk_length)[path(724)](".", "");
        return "".concat(predicted_answer)[path(450)](initialMock);
    }
    function append(values) {
        var options = arguments;
        var unescape = current;
        var processedOptions = [];
        var name = 1;
        for (; name < arguments[unescape(238)]; name++) {
            processedOptions[name - 1] = options[name];
        }
        var a = document.createElement(unescape(545));
        if (a[unescape(583)] = values[unescape(797)](function (O, name) {
            var isElement = unescape;
            return ""[isElement(450)](O)[isElement(450)](processedOptions[name] || "");
        })[unescape(378)](""), "HTMLTemplateElement" in window) {
            return document[unescape(767)](a[unescape(858)], true);
        }
        var params = document.createDocumentFragment();
        var images = a.childNodes;
        var key = 0;
        var length = images.length;
        for (; key < length; key = key + 1) {
            params[unescape(744)](images[key][unescape(695)](true));
        }
        return params;
    }
    function checkSwiftVersion() {
        return __awaiter(this, void 0, void 0, function () {
            var TurtlTemplates;
            var _this = this;
            return send(this, function (variable) {
                var parseInt = test;
                switch (variable.label) {
                    case 0:
                        return TurtlTemplates = [], [4, Promise[parseInt(600)](arrayBufferView[parseInt(797)](function (bucket, data) {
                            return __awaiter(_this, void 0, void 0, function () {
                                return send(this, function (same) {
                                    var rel2Mstr = test;
                                    switch (same[rel2Mstr(304)]) {
                                        case 0:
                                            return same[rel2Mstr(280)][rel2Mstr(769)]([0, 2, , 3]), [4, new FontFace(bucket, rel2Mstr(664).concat(bucket, '")'))[rel2Mstr(248)]()];
                                        case 1:
                                            return same[rel2Mstr(689)](), TurtlTemplates[rel2Mstr(769)](data), [3, 3];
                                        case 2:
                                            return same[rel2Mstr(689)](), [3, 3];
                                        case 3:
                                            return [2];
                                    }
                                });
                            });
                        }))];
                    case 1:
                        return variable[parseInt(689)](), [2, TurtlTemplates];
                }
            });
        });
    }
    function message($timeout) {
        try {
            return $timeout(), null;
        } catch (controlFlowAction) {
            return controlFlowAction.message;
        }
    }
    function parse() {
        var i;
        var r;
        var write = function () {
            try {
                return 1 + write();
            } catch (A) {
                return 1;
            }
        };
        var join = function () {
            try {
                return 1 + join();
            } catch (A) {
                return 1;
            }
        };
        var w = write();
        var p = join();
        return [(i = w, r = p, i === r ? 0 : 8 * r / (i - r)), w, p];
    }
    function list(tagName) {
        var Number = current;
        if (null == tagName) {
            return null;
        }
        var dec2hex = {};
        dec2hex[Number(238)] = 13;
        var premultiplyBlendMode = Number(352) != typeof tagName ? String(tagName) : tagName;
        var digits = Array[Number(322)](dec2hex, function () {
            return String.fromCharCode(Math[current(388)](Math.random() * 26) + 65);
        })[Number(378)]("");
        var a = Math[current(388)](Math.random() * 26) + 1;
        var url = premultiplyBlendMode[Number(619)](" ")[Number(617)]()[Number(378)](" ")[Number(619)]("").reverse().map(function (value) {
            var parseInt = Number;
            if (!value[parseInt(659)](/[a-z]/i)) {
                return value;
            }
            var flipswitch_ = frontpageItems[parseInt(588)](value.toLowerCase());
            var item = frontpageItems[(flipswitch_ + a) % 26];
            return value === value[parseInt(242)]() ? item[parseInt(242)]() : item;
        })[Number(378)]("");
        var f = window.btoa(encodeURIComponent(url)).split("")[Number(617)]()[Number(378)]("");
        var sdkDir = f[Number(238)];
        var node = Math[current(388)](Math.random() * (sdkDir - 1 - 1 + 1)) + 1;
        return [(f[Number(671)](node, sdkDir) + f[Number(671)](0, node))[Number(724)](new RegExp("["[Number(450)](digits)[Number(450)](digits[Number(576)](), "]"), "g"), function (currentItems) {
            var parseInt = Number;
            return currentItems === currentItems[parseInt(242)]() ? currentItems[parseInt(576)]() : currentItems[parseInt(242)]();
        }), a[Number(768)](16), node[Number(768)](16), digits];
    }
    function processChildren() {
        var processChildren = current;
        try {
            var creative_size = myPreferences[processChildren(875)](function (val, intlConstructor) {
                var parseInt = processChildren;
                var options = {};
                return options[parseInt(655)] = parseInt(309), Intl[intlConstructor] ? debug(debug([], val, true), ["DisplayNames" === intlConstructor ? new Intl[intlConstructor](void 0, options)[parseInt(489)]()[parseInt(603)] : (new Intl[intlConstructor])[parseInt(489)]()[parseInt(603)]], false) : val;
            }, [])[processChildren(213)](function (value, index, f_arr) {
                return f_arr[processChildren(588)](value) === index;
            });
            return String(creative_size);
        } catch (A) {
            return null;
        }
    }
    function cb(obj, name) {
        var fn = current;
        var yearPrefix = true;
        var isValid = obj[args[701]](name, args);
        return null === isValid && (yearPrefix = false, isValid = obj[args[701]](name)), [isValid, yearPrefix];
    }
    function getData(gl, type) {
        var parseInt = current;
        if (!gl[parseInt(660)]) {
            return null;
        }
        var frontpageItems = gl[parseInt(660)](type, gl[parseInt(668)]);
        var info = gl.getShaderPrecisionFormat(type, gl[parseInt(273)]);
        var _controlCommandNames = gl[parseInt(660)](type, gl[parseInt(546)]);
        var parts = gl.getShaderPrecisionFormat(type, gl[parseInt(335)]);
        return [frontpageItems && [frontpageItems[parseInt(569)], frontpageItems[parseInt(643)], frontpageItems[parseInt(781)]], info && [info[parseInt(569)], info.rangeMax, info[parseInt(781)]], _controlCommandNames && [_controlCommandNames[parseInt(569)], _controlCommandNames[parseInt(643)], _controlCommandNames[parseInt(781)]], parts && [parts.precision, parts[parseInt(643)], parts[parseInt(781)]]];
    }
    function init(flightPhase) {
        var values = function (pets) {
            var dataset = test;
            var mutationsMap = null;
            if ("OffscreenCanvas" in self) {
                mutationsMap = new OffscreenCanvas(1, 1);
            } else {
                if (!(dataset(487) in self)) {
                    return null;
                }
                mutationsMap = document[dataset(497)](dataset(298));
            }
            try {
                return cb(mutationsMap, pets);
            } catch (B) {
                try {
                    return cb(mutationsMap, dataset(500)[dataset(450)](pets));
                } catch (A) {
                    return null;
                }
            }
        }(flightPhase) || [];
        var value = values[0];
        var notes_mac = values[1];
        if (!value) {
            return null;
        }
        var ctx;
        var oldCondition = function (e) {
            var dataset = test;
            try {
                if (SUPPORT_DESC && dataset(231) in Object) {
                    return [e[dataset(331)](e[dataset(182)]), e[dataset(331)](e[dataset(258)])];
                }
                var names = e[dataset(341)]("WEBGL_debug_renderer_info");
                return names ? [e[dataset(331)](names[dataset(852)]), e.getParameter(names[dataset(261)])] : null;
            } catch (A) {
                return null;
            }
        }(value);
        var M = (ctx = value)[test(393)] ? ctx.getSupportedExtensions() : null;
        var N = function (result) {
            var fn = current;
            if (!result.getParameter) {
                return null;
            }
            var d;
            var e;
            var target;
            var t = args[256] === result[args[810]].name;
            var pipelets = (d = darkThemeBackground, e = fn, target = result.constructor, Object[e(613)](target).map(function (name) {
                return target[name];
            })[e(875)](function (tooltipsGroup, g) {
                return -1 !== d[e(588)](g) && tooltipsGroup.push(g), tooltipsGroup;
            }, []));
            var DSSetupCallBacks = [];
            var collection = [];
            var cache = [];
            pipelets.forEach(function (type) {
                var value;
                var data = result.getParameter(type);
                if (data) {
                    var transform = Array[args[337]](data) || data instanceof Int32Array || data instanceof Float32Array;
                    if (transform ? (collection[args[769]].apply(collection, data), DSSetupCallBacks[args[769]](debug([], data, true))) : ("number" == typeof data && collection[args[769]](data), DSSetupCallBacks[args[769]](data)), !t) {
                        return;
                    }
                    var name = params[type];
                    if (void 0 === name) {
                        return;
                    }
                    if (!cache[name]) {
                        return void (cache[name] = transform ? debug([], data, true) : [data]);
                    }
                    if (!transform) {
                        return void cache[name][args[769]](data);
                    }
                    (value = cache[name])[args[769]][args[740]](value, data);
                }
            });
            var _this;
            var next;
            var item;
            var translate;
            var data = getData(result, 35633);
            var param = getData(result, 35632);
            var dsid = (translate = fn, (item = result).getExtension && (item.getExtension(translate(394)) || item[translate(341)](translate(871)) || item[translate(341)](translate(263))) ? item[translate(331)](34047) : null);
            var datasource = (_this = result)[(next = fn)(341)] && _this.getExtension(Math[current(388)](Math.random() * (i - 793 + 1)) + 793) ? _this[Math[current(388)](Math.random() * (i - 331 + 1)) + 331](34852) : null;
            var str_result = function (enumType) {
                if (!enumType[args[538]]) {
                    return null;
                }
                var mockAgentService = enumType[args[538]]();
                return mockAgentService && "boolean" == typeof mockAgentService[args[412]] ? mockAgentService[args[412]] : null;
            }(result);
            var callback = (data || [])[2];
            var obj = (param || [])[2];
            return callback && callback.length && collection[args[769]][args[740]](collection, callback), obj && obj[args[238]] && collection[args[769]].apply(collection, obj), collection[args[769]](dsid || 0, datasource || 0), DSSetupCallBacks[args[769]](data, param, dsid, datasource, str_result), t && (cache[8] ? cache[8].push(callback) : cache[8] = [callback], cache[1] ? cache[1][args[769]](obj) : cache[1] = [obj]), [DSSetupCallBacks, collection, cache];
        }(value) || [];
        return [[oldCondition, M, N[0]], [N[1], N[2], notes_mac]];
    }
    function extend(obj, key, selector) {
        var min = current;
        try {
            num_to_grab = false;
            var value = hOP(obj, key);
            return value && value.configurable && value[min(615)] ? [function () {
                var objectValue;
                var scope;
                var set;
                var actualTest;
                defineProperty(obj, key, (scope = key, set = selector, {
                    configurable: true, enumerable: (objectValue = value)[(actualTest = test)(442)], get: function () {
                        var notDef = actualTest;
                        return num_to_grab && (num_to_grab = false, set(scope), num_to_grab = true), objectValue[notDef(834)];
                    }, set: function (value) {
                        var s_SPLICE = actualTest;
                        if (num_to_grab) {
                            num_to_grab = false;
                            set(scope);
                            num_to_grab = true;
                        }
                        objectValue[s_SPLICE(834)] = value;
                    }
                }));
            }, function () {
                defineProperty(obj, key, value);
            }] : [function () { }, function () { }];
        } finally {
            num_to_grab = true;
        }
    }
    function resolve(obj, prop) {
        var parseInt = current;
        var values = Object[parseInt(817)](obj, prop);
        if (!values) {
            return false;
        }
        var width = values[parseInt(834)];
        var height = values[parseInt(743)];
        var data = width || height;
        if (!data) {
            return false;
        }
        try {
            var undefined = data[parseInt(768)]();
            var dataKey = sum + data[parseInt(265)] + opt;
            return "function" == typeof data && (dataKey === undefined || sum + data[parseInt(265)].replace("get ", "") + opt === undefined);
        } catch (A) {
            return false;
        }
    }
    function setup() {
        var option;
        var path;
        var options;
        var refreshBreadcrumbAndHistory;
        var constant;
        var value;
        var command;
        var attr;
        var children = current;
        var part = 0;
        var featuresCache = (option = function () {
            part = part + 1;
        }, path = test, options = extend(Function[path(257)], path(314), option), refreshBreadcrumbAndHistory = options[0], constant = options[1], value = extend(Function.prototype, path(740), option), command = value[0], attr = value[1], [function () {
            refreshBreadcrumbAndHistory();
            command();
        }, function () {
            constant();
            attr();
        }]);
        var transform3DSupported = featuresCache[0];
        var fieldIdsArePresentAndUnique = featuresCache[1];
        try {
            transform3DSupported();
            Function[children(257)][children(768)]();
        } finally {
            fieldIdsArePresentAndUnique();
        }
        return part > 0;
    }
    function load(loadFun, path) {
        var children = current;
        try {
            throw loadFun(), Error("");
        } catch (inspectObj) {
            return (inspectObj.name + inspectObj[children(457)]).length;
        } finally {
            if (path) {
                path();
            }
        }
    }
    function inject(obj, req) {
        var getSymbolIterator = current;
        if (!obj) {
            return 0;
        }
        var a = obj[getSymbolIterator(265)];
        var params = /^Screen|Navigator$/.test(a) && window[a[getSymbolIterator(576)]()];
        var target = getSymbolIterator(257) in obj ? obj[getSymbolIterator(257)] : Object[getSymbolIterator(786)](obj);
        var extraParams = ((null == req ? void 0 : req[getSymbolIterator(238)]) ? req : Object[getSymbolIterator(753)](target))[getSymbolIterator(875)](function (ie, value) {
            var object;
            var last;
            var foo;
            var obj;
            var result;
            var path;
            var key = function (obj, prop) {
                var getRefreshTokenKey = test;
                try {
                    var data = Object[getRefreshTokenKey(817)](obj, prop);
                    if (!data) {
                        return null;
                    }
                    var err = data[getRefreshTokenKey(834)];
                    var result = data.get;
                    return err || result;
                } catch (A) {
                    return null;
                }
            }(target, value);
            return key ? ie + (obj = key, result = value, path = test, ((foo = params) ? (typeof Object[path(817)](foo, result))[path(238)] : 0) + Object[path(753)](obj)[path(238)] + function (target) {
                var name = test;
                var aArray = [load(function () {
                    return target().catch(function () { });
                }), load(function () {
                    throw Error(Object.create(target));
                }), load(function () {
                    target[test(678)];
                    target.caller;
                }), load(function () {
                    var name = test;
                    target[name(768)][name(678)];
                    target[name(768)].caller;
                }), load(function () {
                    return Object[test(739)](target).toString();
                })];
                if (name(768) === target[name(265)]) {
                    var prop = Object[name(768)](target);
                    aArray.push[name(740)](aArray, [load(function () {
                        var xtype = name;
                        Object[xtype(720)](target, Object[xtype(739)](target)).toString();
                    }, function () {
                        return Object[name(720)](target, prop);
                    }), load(function () {
                        var xtype = name;
                        Reflect[xtype(720)](target, Object[xtype(739)](target));
                    }, function () {
                        return Object[name(720)](target, prop);
                    })]);
                }
                return Number(aArray[name(378)](""));
            }(key) + ((object = key)[(last = test)(768)]() + object[last(768)][last(768)]())[last(238)]) : ie;
        }, 0);
        return (params ? Object.getOwnPropertyNames(params)[getSymbolIterator(238)] : 0) + extraParams;
    }
    function mark() {
        var clone = current;
        try {
            return performance.mark(""), !(performance[clone(821)]("mark")[clone(238)] + performance.getEntries()[clone(238)]);
        } catch (A) {
            return null;
        }
    }
    function compile(compiled, template) {
        var clone = current;
        try {
            throw compiled(), Error("");
        } catch (y) {
            return "TypeError" === y[clone(265)];
        } finally {
            try {
                if (template) {
                    template();
                }
            } catch (A) { }
        }
    }
    function _initStorage() {
        var getSerializerPromise = current;
        if (!isVis || !(getSerializerPromise(234) in window)) {
            return null;
        }
        var t = toString();
        return new Promise(function (resolve) {
            var getScriptId = getSerializerPromise;
            if (!("matchAll" in String.prototype)) {
                try {
                    localStorage[getScriptId(358)](t, t);
                    localStorage[getScriptId(198)](t);
                    try {
                        if (getScriptId(508) in window) {
                            openDatabase(null, null, null, null);
                        }
                        resolve(false);
                    } catch (A) {
                        resolve(true);
                    }
                } catch (A) {
                    resolve(true);
                }
            }
            window.indexedDB[getScriptId(271)](t, 1).onupgradeneeded = function (args) {
                var frontpageItems;
                var parseInt = getScriptId;
                var db = null === (frontpageItems = args[parseInt(805)]) || void 0 === frontpageItems ? void 0 : frontpageItems[parseInt(844)];
                try {
                    var options = { fieldName: f };
                    options[parseInt(339)] = true;
                    db.createObjectStore(t, options)[parseInt(358)](new Blob);
                    resolve(false);
                } catch (A) {
                    resolve(true);
                } finally {
                    db[parseInt(485)]();
                    indexedDB[parseInt(683)](t);
                }
            };
        })[getSerializerPromise(592)](function () {
            return true;
        });
    }
    function create(parentNode) {
        var getKey = current;
        var elem = parentNode.querySelectorAll("script");
        var obj = [];
        var targetName = Math.min(elem.length, 10);
        var name = 0;
        for (; name < targetName; name = name + 1) {
            var data = elem[name];
            var url = data.src;
            var result = data[getKey(870)];
            var pkValue = data[getKey(452)];
            obj[getKey(769)]([null == url ? void 0 : url.slice(0, 192), (result || "").length, (pkValue || [])[getKey(238)]]);
        }
        return obj;
    }
    function extract(data) {
        var fabric;
        var trim = current;
        var props = data[trim(208)]("style");
        var paths = [];
        var inputsSize = Math[trim(534)](props[trim(238)], 10);
        var i = 0;
        for (; i < inputsSize; i = i + 1) {
            var data = null === (fabric = props[i][trim(590)]) || void 0 === fabric ? void 0 : fabric.cssRules;
            if (data && data[trim(238)]) {
                props = data[0];
                var descriptor = props[trim(209)];
                var currentNodeName = props[trim(825)];
                paths[trim(769)]([null == currentNodeName ? void 0 : currentNodeName[trim(671)](0, 64), (descriptor || "")[trim(238)], data[trim(238)]]);
            }
        }
        return paths;
    }
    function merge(name) {
        var min = current;
        if (0 === name[min(238)]) {
            return 0;
        }
        var tickData = debug([], name, true)[min(379)](function (b, a) {
            return b - a;
        });
        var i = Math[min(388)](tickData[min(238)] / 2);
        return tickData.length % 2 != 0 ? tickData[i] : (tickData[i - 1] + tickData[i]) / 2;
    }
    function run(args, resolve) {
        return __awaiter(this, void 0, void 0, function () {
            var obj;
            var data;
            var map;
            return send(this, function (canCreateDiscussions) {
                var parseInt = test;
                obj = args[parseInt(506)]();
                data = args.createDynamicsCompressor();
                map = args[parseInt(369)]();
                try {
                    map[parseInt(655)] = parseInt(612);
                    map[parseInt(670)][parseInt(834)] = 1e4;
                    data[parseInt(597)][parseInt(834)] = -50;
                    data[parseInt(290)][parseInt(834)] = 40;
                    data.attack[parseInt(834)] = 0;
                } catch (A) { }
                return obj[parseInt(478)](args[parseInt(445)]), data.connect(obj), data[parseInt(478)](args[parseInt(445)]), map[parseInt(478)](data), map[parseInt(190)](0), args.startRendering(), [2, resolve(new Promise(function (showCommandOneByOne) {
                    var toInt = parseInt;
                    args[toInt(529)] = function (currentItems) {
                        var dec2hex;
                        var frontpageItems;
                        var shape;
                        var isOnFirstPage;
                        var parseInt = toInt;
                        var plugin = data[parseInt(728)];
                        var pluginName = plugin[parseInt(834)] || plugin;
                        var ctrl_v = null === (frontpageItems = null === (dec2hex = null == currentItems ? void 0 : currentItems[parseInt(679)]) || void 0 === dec2hex ? void 0 : dec2hex[parseInt(203)]) || void 0 === frontpageItems ? void 0 : frontpageItems[parseInt(314)](dec2hex, 0);
                        var h = new Float32Array(obj[parseInt(637)]);
                        var b = new Float32Array(obj[parseInt(646)]);
                        return null === (shape = null == obj ? void 0 : obj[parseInt(859)]) || void 0 === shape || shape.call(obj, h), null === (isOnFirstPage = null == obj ? void 0 : obj.getFloatTimeDomainData) || void 0 === isOnFirstPage || isOnFirstPage.call(obj, b), showCommandOneByOne([pluginName, ctrl_v, h, b]);
                    };
                }), 100)[parseInt(554)](function () {
                    var String = parseInt;
                    data[String(670)]();
                    map[String(670)]();
                })];
            });
        });
    }
    function set(g, d, name, array) {
        var value = (g - 1) / d * (name || 1) || 0;
        return array ? value : Math[current(388)](value);
    }
    function start(resolve) {
        return __awaiter(this, void 0, void 0, function () {
            var g;
            var PeerConnection;
            return send(this, function (same) {
                var rel2Mstr = resolve;
                switch (same[rel2Mstr(304)]) {
                    case 0:
                        if (!(g = window[rel2Mstr(847)] || window[rel2Mstr(344)] || window[rel2Mstr(623)])) {
                            return [2, Promise[rel2Mstr(748)](null)];
                        }
                        PeerConnection = new g(void 0);
                        same[rel2Mstr(304)] = 1;
                    case 1:
                        return same[rel2Mstr(280)][rel2Mstr(195)]([1, , 4, 5]), PeerConnection.createDataChannel(""), [4, PeerConnection.createOffer().then(function (mmCoreSplitViewBlock) {
                            return PeerConnection[rel2Mstr(831)](mmCoreSplitViewBlock);
                        })];
                    case 2:
                        return same[rel2Mstr(689)](), [4, resolve(new Promise(function (userJQuery) {
                            var gotoNewOfflinePage = rel2Mstr;
                            var B = false;
                            PeerConnection[gotoNewOfflinePage(511)] = function (data) {
                                var frontpageItems;
                                var keys;
                                var object_searchCourseContent;
                                var parseInt = gotoNewOfflinePage;
                                var controller = null === (frontpageItems = data[parseInt(456)]) || void 0 === frontpageItems ? void 0 : frontpageItems[parseInt(456)];
                                if (controller && !B) {
                                    B = true;
                                    var selector = (null === (keys = data[parseInt(456)]) || void 0 === keys ? void 0 : keys[parseInt(195)]) || (null === (object_searchCourseContent = /^candidate:(\w+)\s/.exec(controller)) || void 0 === object_searchCourseContent ? void 0 : object_searchCourseContent[1]) || "";
                                    userJQuery(selector);
                                }
                            };
                        }), 300)];
                    case 3:
                        return [2, same[rel2Mstr(689)]()];
                    case 4:
                        return PeerConnection.close(), [7];
                    case 5:
                        return [2];
                }
            });
        });
    }
    function save(fn) {
        var result;
        var retval;
        var _controlCommandNames;
        var dec2hex;
        var frontpageItems;
        var file;
        var notes0to11;
        var exponentPos;
        return __awaiter(this, void 0, void 0, function () {
            var makeDocument;
            var document;
            var desc;
            var E;
            return send(this, function (values) {
                var parseInt = test;
                switch (values[parseInt(304)]) {
                    case 0:
                        if (!(makeDocument = window[parseInt(847)] || window[parseInt(344)] || window[parseInt(623)])) {
                            return [2, Promise[parseInt(748)](null)];
                        }
                        document = new makeDocument(void 0);
                        values.label = 1;
                    case 1:
                        var value = {};
                        return value[parseInt(722)] = true, value.offerToReceiveVideo = true, values[parseInt(280)].push([1, , 4, 5]), document[parseInt(808)](""), [4, args[document[parseInt(407)](value)]];
                    case 2:
                        return desc = values.sent(), [4, document.setLocalDescription(desc)];
                    case 3:
                        if (values[parseInt(689)](), !(E = desc[parseInt(285)])) {
                            throw new Error("failed session description");
                        }
                        return [2, [null === (_controlCommandNames = null === (retval = null === (result = null === window || void 0 === window ? void 0 : window[parseInt(680)]) || void 0 === result ? void 0 : result[parseInt(419)]) || void 0 === retval ? void 0 : retval[parseInt(314)](result, parseInt(313))) || void 0 === _controlCommandNames ? void 0 : _controlCommandNames[parseInt(602)], null === (file = null === (frontpageItems = null === (dec2hex = null === window || void 0 === window ? void 0 : window.RTCRtpSender) || void 0 === dec2hex ? void 0 : dec2hex[parseInt(419)]) || void 0 === frontpageItems ? void 0 : frontpageItems[parseInt(314)](dec2hex, "video")) || void 0 === file ? void 0 : file.codecs, null === (notes0to11 = /m=audio.+/.exec(E)) || void 0 === notes0to11 ? void 0 : notes0to11[0], null === (exponentPos = /m=video.+/.exec(E)) || void 0 === exponentPos ? void 0 : exponentPos[0]]];
                    case 4:
                        return document[parseInt(485)](), [7];
                    case 5:
                        return [2];
                }
            });
        });
    }
    function f(s, t) {
        var next;
        return [new Promise(function (isSlidingUp, $7) {
            next = $7;
        }), setTimeout(function () {
            return Math[current(388)](Math.random() * (i - new Error(t(s)) + 1)) + new Error(t(s));
        }, s)];
    }
    function define(fn, deps, val, m) {
        return __awaiter(this, void 0, void 0, function () {
            var renderTargets;
            var params;
            var _takingTooLongTimeout;
            return send(this, function (myPreferences) {
                var d;
                var dir;
                var node;
                var codeGeneratorFunc;
                var getPreferenceKey = test;
                switch (myPreferences[getPreferenceKey(304)]) {
                    case 0:
                        return dir = 437, node = f(d = m, function () {
                            return test(219);
                        }), codeGeneratorFunc = node[0], renderTargets = [function (canCreateDiscussions, n) {
                            var nodeModulePaths = test;
                            var frontpageItems = Promise[nodeModulePaths(580)]([canCreateDiscussions, codeGeneratorFunc]);
                            if (nodeModulePaths(525) == typeof n && n < d) {
                                var out = f(n, function (assetsOfThisType) {
                                    return nodeModulePaths(dir).concat(assetsOfThisType, "ms");
                                });
                                var Ai = out[0];
                                var t = out[1];
                                return frontpageItems[nodeModulePaths(554)](function () {
                                    return clearTimeout(t);
                                }), Promise[nodeModulePaths(580)]([frontpageItems, Ai]);
                            }
                            return frontpageItems;
                        }, node[1]], params = renderTargets[0], _takingTooLongTimeout = renderTargets[1], [4, Promise.all(deps.map(function (extend) {
                            return extend(689, val, params);
                        }))];
                    case 1:
                        return myPreferences[getPreferenceKey(689)](), clearTimeout(_takingTooLongTimeout), [2];
                }
            });
        });
    }
    function foo(name, options) {
        return __awaiter(this, void 0, void 0, function () {
            var format;
            var f;
            var promises;
            var pkill;
            return send(this, function (myPreferences) {
                var getPreferenceKey = test;
                switch (myPreferences[getPreferenceKey(304)]) {
                    case 0:
                        return "undefined" != typeof performance && getPreferenceKey(652) == typeof performance[getPreferenceKey(301)] && name(getPreferenceKey(826), performance.now()), 1 === (format = options.f) ? f = debug(debug([], files[0], true), files[1], true) : 0 === format && (f = files[0]), promises = [define(name, [m], options, 3e4)], f && (pkill = spawn(), promises[getPreferenceKey(769)](define(name, f, options, options.t).then(function () {
                            name("02f", pkill());
                        }))), [4, Promise[getPreferenceKey(600)](promises)];
                    case 1:
                        return myPreferences[getPreferenceKey(689)](), [2];
                }
            });
        });
    }
    function expect(value) {
        var result = args[value];
        return function (size) {
            if (!(size < 36)) {
                args[size] = i;
                i = size;
            }
        }(value), result;
    }
    function check(input, check, fn) {
        if (void 0 === fn) {
            var obj = parser.encode(input);
            var pos = check(obj.length);
            return (null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(pos, pos + obj.length).set(obj), bg = obj.length, pos;
        }
        var end = input.length;
        var start = check(end);
        var data = (null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed);
        var i = 0;
        for (; i < end; i++) {
            var $sendIcon = input.charCodeAt(i);
            if ($sendIcon > 127) {
                break;
            }
            data[start + i] = $sendIcon;
        }
        if (i !== end) {
            if (0 !== i) {
                input = input.slice(i);
            }
            start = args[start];
            var size = (null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(start + i, start + end);
            i = i + googleImageSize(input, size).written;
        }
        return bg = i, start;
    }
    function $(value) {
        if (i === args.length) {
            args.push(args.length + 1);
        }
        var h = i;
        return i = args[h], args[h] = value, h;
    }
    function transform(obj) {
        var type = typeof obj;
        if ("number" == type || "boolean" == type || null == obj) {
            return "" + obj;
        }
        if ("string" == type) {
            return '"' + obj + '"';
        }
        if ("symbol" == type) {
            var docs = obj.description;
            return null == docs ? "Symbol" : "Symbol(" + docs + ")";
        }
        if ("function" == type) {
            var title = obj.name;
            return "string" == typeof title && title.length > 0 ? "Function(" + title + ")" : "Function";
        }
        if (Array.isArray(obj)) {
            var length = obj.length;
            var replace = "[";
            if (length > 0) {
                replace = replace + transform(obj[0]);
            }
            var i = 1;
            for (; i < length; i++) {
                replace = replace + (", " + transform(obj[i]));
            }
            return replace = replace + "]";
        }
        var response;
        var responseArray = /\[object ([^\]]+)\]/.exec(function isInlineLet() {
            ["native code"];
        }(obj));
        if (!(responseArray.length > 1)) {
            return function isInlineLet() {
                ["native code"];
            }(obj);
        }
        if ("Object" == (response = responseArray[1])) {
            try {
                return "Object(" + JSON.stringify(obj) + ")";
            } catch (A) {
                return "Object";
            }
        }
        return obj instanceof Error ? obj.name + ": " + obj.message + "\n" + obj.stack : response;
    }
    function get(schema, entity, category, fn) {
        var e = { a: schema, b: entity, cnt: 1, dtor: category };
        var f = function () {
            var args = [];
            var i = arguments.length;
            for (; i--;) {
                args[i] = arguments[i];
            }
            e.cnt++;
            var a = e.a;
            e.a = 0;
            try {
                return fn.apply(void 0, [a, e.b].concat(args));
            } finally {
                if (0 == --e.cnt) {
                    that.__wbindgen_export_2.get(e.dtor)(a, e.b);
                } else {
                    e.a = a;
                }
            }
        };
        return f.original = e, f;
    }
    function options(f, args, callback, e) {
        that._dyn_core__ops__function__FnMut__A_B___Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7a34a6e3a13907a7(f, args, $(callback), $(e));
    }
    function self(users, email, callback) {
        that._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h3abaaf06c02a2a6c(users, email, $(callback));
    }
    function callback(value, map) {
        var sy = map(4 * value.length);
        var speeds = (null !== out32 && out32.buffer === that.memory.buffer || (out32 = new Uint32Array(that.memory.buffer)), out32);
        var i = 0;
        for (; i < value.length; i++) {
            speeds[sy / 4 + i] = $(value[i]);
        }
        return bg = value.length, sy;
    }
    function func(s, data, value, event, a) {
        var m = check(s, that.__wbindgen_malloc, that.__wbindgen_realloc);
        var cb = bg;
        return expect(that.client(m, cb, data, null == value ? 0 : $(value), $(event), $(a)));
    }
    function dispatch(action, args) {
        try {
            return action.apply(this, args);
        } catch (htmlStr) {
            that.__wbindgen_exn_store($(htmlStr));
        }
    }
    function encode(s) {
        const block = (new TextEncoder).encode(s);
        const silentUnit = that.memory.buffer;
        const pt = silentUnit.byteLength;
        const ct = pt + block.length;
        that.memory.grow(Math.ceil((ct - pt) / 65536));
        const outputByteCount = that.memory.buffer;
        const _self = new Uint8Array(outputByteCount);
        _self.set(block, pt);
        return { ptr: pt, len: block.length };
    }
    function quote(name) {
        return /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g.lastIndex = 0, /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g.test(name) ? '"' + name.replace(/[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, function (operator) {
            var index = map[operator];
            return "string" == typeof index ? index : "\\u" + ("0000" + operator.charCodeAt(0).toString(16)).slice(-4);
        }) + '"' : '"' + name + '"';
    }
    function str(key, holder) {
        var i;
        var type;
        var result;
        var stringLength;
        var partial;
        var d;
        var value = holder[key];
        switch (value instanceof Date && (d = value, value = isFinite(d.valueOf()) ? d.getUTCFullYear() + "-" + f(d.getUTCMonth() + 1) + "-" + f(d.getUTCDate()) + "T" + f(d.getUTCHours()) + ":" + f(d.getUTCMinutes()) + ":" + f(d.getUTCSeconds()) + "Z" : null), typeof value) {
            case "string":
                return quote(value);
            case "number":
                return isFinite(value) ? String(value) : "null";
            case "boolean":
            case "null":
                return String(value);
            case "object":
                if (!value) {
                    return "null";
                }
                if (partial = [], "[object Array]" === Object.prototype.toString.call(value)) {
                    stringLength = value.length;
                    i = 0;
                    for (; i < stringLength; i = i + 1) {
                        partial[i] = str(i, value) || "null";
                    }
                    return result = 0 === partial.length ? "[]" : "[" + partial.join(",") + "]";
                }
                for (type in value) {
                    if (Object.prototype.hasOwnProperty.call(value, type) && (result = str(type, value))) {
                        partial.push(quote(type) + ":" + result);
                    }
                }
                return result = 0 === partial.length ? "{}" : "{" + partial.join(",") + "}";
        }
    }
    function read(state) {
        return function (all) {
            var i = 0;
            var l = all.length;
            var end = 0;
            var signature = Math.max(32, l + (l >>> 1) + 7);
            var data = new Uint8Array(signature >>> 3 << 3);
            for (; i < l;) {
                var newBitmask = all.charCodeAt(i++);
                if (newBitmask >= 55296 && newBitmask <= 56319) {
                    if (i < l) {
                        var $sendIcon = all.charCodeAt(i);
                        if (56320 == (64512 & $sendIcon)) {
                            ++i;
                            newBitmask = ((1023 & newBitmask) << 10) + (1023 & $sendIcon) + 65536;
                        }
                    }
                    if (newBitmask >= 55296 && newBitmask <= 56319) {
                        continue;
                    }
                }
                if (end + 4 > data.length) {
                    signature = signature + 8;
                    signature = (signature = signature * (1 + i / all.length * 2)) >>> 3 << 3;
                    var result = new Uint8Array(signature);
                    result.set(data);
                    data = result;
                }
                if (0 != (4294967168 & newBitmask)) {
                    if (0 == (4294965248 & newBitmask)) {
                        data[end++] = newBitmask >>> 6 & 31 | 192;
                    } else {
                        if (0 == (4294901760 & newBitmask)) {
                            data[end++] = newBitmask >>> 12 & 15 | 224;
                            data[end++] = newBitmask >>> 6 & 63 | 128;
                        } else {
                            if (0 != (4292870144 & newBitmask)) {
                                continue;
                            }
                            data[end++] = newBitmask >>> 18 & 7 | 240;
                            data[end++] = newBitmask >>> 12 & 63 | 128;
                            data[end++] = newBitmask >>> 6 & 63 | 128;
                        }
                    }
                    data[end++] = 63 & newBitmask | 128;
                } else {
                    data[end++] = newBitmask;
                }
            }
            return data.slice ? data.slice(0, end) : data.subarray(0, end);
        }(str("", { "": state }));
    }
    var max = -1;
    Stream.prototype = {
        endOfStream: function () {
            return !this.tokens.length;
        }, read: function () {
            return this.tokens.length ? this.tokens.pop() : max;
        }, prepend: function (value) {
            if (Array.isArray(value)) {
                var deadPool = value;
                for (; deadPool.length;) {
                    this.tokens.push(deadPool.pop());
                }
            } else {
                this.tokens.push(value);
            }
        }, push: function (value) {
            if (Array.isArray(value)) {
                var assignee = value;
                for (; assignee.length;) {
                    this.tokens.unshift(assignee.shift());
                }
            } else {
                this.tokens.unshift(value);
            }
        }
    };
    var undefined = -1;
    var events = {};
    [{ encodings: [{ labels: ["unicode-1-1-utf-8", "utf-8", "utf8"], name: "UTF-8" }], heading: "The Encoding" }].forEach(function (n) {
        n.encodings.forEach(function (trelloBoard) {
            trelloBoard.labels.forEach(function (canCreateDiscussions) { });
        });
    });
    var a;
    var rejectRegexp;
    var that;
    if (Object.defineProperty) {
        Object.defineProperty(decode.prototype, "encoding", {
            get: function () {
                return this._encoding.name.toLowerCase();
            }
        });
        Object.defineProperty(decode.prototype, "fatal", {
            get: function () {
                return "fatal" === this._error_mode;
            }
        });
        Object.defineProperty(decode.prototype, "ignoreBOM", {
            get: function () {
                return this._ignoreBOM;
            }
        });
    }
    decode.prototype.decode = function (input, options) {
        var bytes;
        bytes = "object" == typeof input && input instanceof ArrayBuffer ? new Uint8Array(input) : "object" == typeof input && "buffer" in input && input.buffer instanceof ArrayBuffer ? new Uint8Array(input.buffer, input.byteOffset, input.byteLength) : new Uint8Array(0);
        options = exec(options);
        if (!this._do_not_flush) {
            this._decoder = encoders[this._encoding.name]({ fatal: "fatal" === this._error_mode });
            this._BOMseen = false;
        }
        this._do_not_flush = Boolean(options.stream);
        var result;
        var input_stream = new Stream(bytes);
        var w = [];
        for (; ;) {
            var token = input_stream.read();
            if (token === max) {
                break;
            }
            if ((result = this._decoder.handler(input_stream, token)) === undefined) {
                break;
            }
            if (null !== result) {
                if (Array.isArray(result)) {
                    w.push.apply(w, result);
                } else {
                    w.push(result);
                }
            }
        }
        if (!this._do_not_flush) {
            do {
                if ((result = this._decoder.handler(input_stream, input_stream.read())) === undefined) {
                    break;
                }
                if (null !== result) {
                    if (Array.isArray(result)) {
                        w.push.apply(w, result);
                    } else {
                        w.push(result);
                    }
                }
            } while (!input_stream.endOfStream());
            this._decoder = null;
        }
        return function (renderArr) {
            var nonIgnored;
            var file;
            return nonIgnored = ["UTF-8", "UTF-16LE", "UTF-16BE"], file = this._encoding.name, -1 === nonIgnored.indexOf(file) || this._ignoreBOM || this._BOMseen || (renderArr.length > 0 && 65279 === renderArr[0] ? (this._BOMseen = true, renderArr.shift()) : renderArr.length > 0 && (this._BOMseen = true)), function (tokens2) {
                var valueToReturn = "";
                var i = 0;
                for (; i < tokens2.length; ++i) {
                    var b = tokens2[i];
                    if (b <= 65535) {
                        valueToReturn = valueToReturn + String.fromCharCode(b);
                    } else {
                        b = b - 65536;
                        valueToReturn = valueToReturn + String.fromCharCode(55296 + (b >> 10), 56320 + (1023 & b));
                    }
                }
                return valueToReturn;
            }(renderArr);
        }.call(this, w);
    };
    if (Object.defineProperty) {
        Object.defineProperty(error.prototype, "encoding", {
            get: function () {
                return this._encoding.name.toLowerCase();
            }
        });
    }
    error.prototype.encode = function (file, options) {
        file = void 0 === file ? "" : String(file);
        options = exec(options);
        if (!this._do_not_flush) {
            this._encoder = decoders[this._encoding.name]({ fatal: "fatal" === this._fatal });
        }
        this._do_not_flush = Boolean(options.stream);
        var v;
        var input = new Stream(function (filename) {
            var content = String(filename);
            var length = content.length;
            var index = 0;
            var res = [];
            for (; index < length;) {
                var val = content.charCodeAt(index);
                if (val < 55296 || val > 57343) {
                    res.push(val);
                } else {
                    if (val >= 56320 && val <= 57343) {
                        res.push(65533);
                    } else {
                        if (val >= 55296 && val <= 56319) {
                            if (index === length - 1) {
                                res.push(65533);
                            } else {
                                var firstByte = content.charCodeAt(index + 1);
                                if (firstByte >= 56320 && firstByte <= 57343) {
                                    var new_lo = 1023 & val;
                                    var xexp = 1023 & firstByte;
                                    res.push(65536 + (new_lo << 10) + xexp);
                                    index = index + 1;
                                } else {
                                    res.push(65533);
                                }
                            }
                        }
                    }
                }
                index = index + 1;
            }
            return res;
        }(file));
        var i = [];
        for (; ;) {
            var token = input.read();
            if (token === max) {
                break;
            }
            if ((v = this._encoder.handler(input, token)) === undefined) {
                break;
            }
            if (Array.isArray(v)) {
                i.push.apply(i, v);
            } else {
                i.push(v);
            }
        }
        if (!this._do_not_flush) {
            for (; (v = this._encoder.handler(input, input.read())) !== undefined;) {
                if (Array.isArray(v)) {
                    i.push.apply(i, v);
                } else {
                    i.push(v);
                }
            }
            this._encoder = null;
        }
        return new Uint8Array(i);
    };
    if (!window.TextDecoder) {
        window.TextDecoder = decode;
    }
    if (!window.TextEncoder) {
        window.TextEncoder = error;
    }
    a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    rejectRegexp = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;
    window.btoa = window.btoa || function (text) {
        var f;
        var longNameFlag;
        var shortNameFlag;
        var h;
        var entries = "";
        var i = 0;
        var j = (text = String(text)).length % 3;
        for (; i < text.length;) {
            if ((longNameFlag = text.charCodeAt(i++)) > 255 || (shortNameFlag = text.charCodeAt(i++)) > 255 || (h = text.charCodeAt(i++)) > 255) {
                throw new TypeError("Failed to execute 'btoa' on 'Window': The string to be encoded contains characters outside of the Latin1 range.");
            }
            entries = entries + (a.charAt((f = longNameFlag << 16 | shortNameFlag << 8 | h) >> 18 & 63) + a.charAt(f >> 12 & 63) + a.charAt(f >> 6 & 63) + a.charAt(63 & f));
        }
        return j ? entries.slice(0, j - 3) + "===".substring(j) : entries;
    };
    window.atob = window.atob || function (text) {
        if (text = String(text).replace(/[\t\n\f\r ]+/g, ""), !rejectRegexp.test(text)) {
            throw new TypeError("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
        }
        var g;
        var I;
        var B;
        text = text + "==".slice(2 - (3 & text.length));
        var pix_color = "";
        var i = 0;
        for (; i < text.length;) {
            g = a.indexOf(text.charAt(i++)) << 18 | a.indexOf(text.charAt(i++)) << 12 | (I = a.indexOf(text.charAt(i++))) << 6 | (B = a.indexOf(text.charAt(i++)));
            pix_color = pix_color + (64 === I ? String.fromCharCode(g >> 16 & 255) : 64 === B ? String.fromCharCode(g >> 16 & 255, g >> 8 & 255) : String.fromCharCode(g >> 16 & 255, g >> 8 & 255, 255 & g));
        }
        return pix_color;
    };
    if (!Array.prototype.fill) {
        Object.defineProperty(Array.prototype, "fill", {
            value: function (recB) {
                if (null == this) {
                    throw new TypeError("this is null or not defined");
                }
                var O = Object(this);
                var len = O.length >>> 0;
                var relativeStart = arguments[1] >> 0;
                var i = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len);
                var type = arguments[2];
                var relativeEnd = void 0 === type ? len : type >> 0;
                var cell_amount = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);
                for (; i < cell_amount;) {
                    i++;
                }
                return O;
            }
        });
    }
    (function () {
        if ("object" != typeof globalThis || !globalThis) {
            try {
                if (Object.defineProperty(Object.prototype, "__global__", {
                    get: function () {
                        return this;
                    }, configurable: true
                }), !__global__) {
                    throw new Error("Global not found.");
                }
                __global__.globalThis = __global__;
                delete Object.prototype.__global__;
            } catch (A) {
                window.globalThis = function () {
                    return "undefined" != typeof window ? window : void 0 !== this ? this : void 0;
                }();
            }
        }
    }());
    var current = test;
    !function (onload, canCreateDiscussions) {
        var config = test;
        var _sizeAnimateTimeStamps = onload();
        for (; ;) {
            try {
                if (838842 === -parseInt(config(269)) / 1 * (parseInt(config(323)) / 2) + parseInt(config(519)) / 3 + -parseInt(config(262)) / 4 + parseInt(config(406)) / 5 + -parseInt(config(731)) / 6 * (-parseInt(config(861)) / 7) + parseInt(config(789)) / 8 * (-parseInt(config(433)) / 9) + parseInt(config(367)) / 10) {
                    break;
                }
                _sizeAnimateTimeStamps.push(_sizeAnimateTimeStamps.shift());
            } catch (A) {
                _sizeAnimateTimeStamps.push(_sizeAnimateTimeStamps.shift());
            }
        }
    }(onload);
    var _data;
    var result = hook("", null, false);
    var data = ((_data = {}).f = 0, _data.t = 2e308, _data);
    var leftBranch;
    var findMiddlePosition;
    var rightBranch;
    var e = (findMiddlePosition = test, null !== (rightBranch = (null === (leftBranch = null === document || void 0 === document ? void 0 : document[findMiddlePosition(454)](findMiddlePosition(751))) || void 0 === leftBranch ? void 0 : leftBranch[findMiddlePosition(873)](findMiddlePosition(858))) || null) && -1 !== rightBranch[findMiddlePosition(588)]("worker-src blob:;"));
    var m = require(current(850), function (has, mTargets, saveNotifs) {
        return __awaiter(void 0, void 0, void 0, function () {
            var ref;
            var name;
            var i;
            var items;
            var loadedSubwikis;
            var getResponsesAnalysisDataPrefixCacheKey;
            var currentSubwiki;
            var pkill;
            var val;
            var prefix;
            return send(this, function (key) {
                var scrollHeightObserver;
                var _takingTooLongTimeout;
                var mod = test;
                switch (key[mod(304)]) {
                    case 0:
                        return done(e, mod(172)), name = (ref = mTargets).d, done((i = ref.c) && name, mod(232)), name < 13 ? [2] : (items = new result, _takingTooLongTimeout = null, loadedSubwikis = [function (timeToFadeIn) {
                            var obj = mod;
                            if (null !== _takingTooLongTimeout) {
                                clearTimeout(_takingTooLongTimeout);
                                _takingTooLongTimeout = null;
                            }
                            if (obj(525) == typeof timeToFadeIn) {
                                _takingTooLongTimeout = setTimeout(scrollHeightObserver, timeToFadeIn);
                            }
                        }, new Promise(function (canCreateDiscussions) {
                            scrollHeightObserver = canCreateDiscussions;
                        })], currentSubwiki = loadedSubwikis[1], (getResponsesAnalysisDataPrefixCacheKey = loadedSubwikis[0])(300), items[mod(189)]([i, name]), pkill = spawn(), val = 0, [4, saveNotifs(Promise[mod(415)]([currentSubwiki[mod(520)](function () {
                            var obj = mod;
                            throw new Error(obj(675)[obj(450)](val, obj(490)));
                        }), map(items, function (types, $) {
                            var type = mod;
                            if (2 !== val) {
                                if (0 === val) {
                                    getResponsesAnalysisDataPrefixCacheKey(20);
                                } else {
                                    getResponsesAnalysisDataPrefixCacheKey();
                                }
                                val = val + 1;
                            } else {
                                $(types[type(415)]);
                            }
                        })]))[mod(554)](function () {
                            var normalizeIndex = mod;
                            getResponsesAnalysisDataPrefixCacheKey();
                            items[normalizeIndex(330)]();
                        })]);
                    case 1:
                        return prefix = key[mod(689)](), has(mod(342), prefix), has(mod(300), pkill()), [2];
                }
            });
        });
    });
    var user = current(416);
    var rpm_traffic = [current(440), current(461), current(502), current(405), current(475), current(395), current(629), current(360), "Arial"][current(797)](function (stats) {
        var min = current;
        return "'".concat(stats, min(179))[min(450)](user);
    });
    var TagHourlyStat = require(current(302), function (matchComparison) {
        var p = current;
        var start = { i: value };
        start[p(727)] = true;
        var target;
        var now;
        var buffer;
        var ctx;
        var tmp6;
        var a;
        var _context;
        var tmp7;
        var c = document[p(497)]("canvas");
        var node = c[p(701)]("2d", start);
        if (node) {
            a = c;
            tmp7 = p;
            if (_context = node) {
                a[tmp7(522)] = 20;
                a.height = 20;
                _context.clearRect(0, 0, a[tmp7(522)], a[tmp7(364)]);
                _context.font = tmp7(509);
                _context[tmp7(539)]("ðŸ˜€", 0, 15);
            }
            matchComparison(p(755), c.toDataURL());
            matchComparison(p(448), (buffer = c, tmp6 = p, (ctx = node) ? (ctx.clearRect(0, 0, buffer[tmp6(522)], buffer[tmp6(364)]), buffer[tmp6(522)] = 2, buffer[tmp6(364)] = 2, ctx[tmp6(656)] = tmp6(371), ctx[tmp6(334)](0, 0, buffer[tmp6(522)], buffer[tmp6(364)]), ctx[tmp6(656)] = tmp6(614), ctx[tmp6(334)](2, 2, 1, 1), ctx.beginPath(), ctx.arc(0, 0, 2, 0, 1, true), ctx[tmp6(552)](), ctx[tmp6(366)](), debug([], ctx.getImageData(0, 0, 2, 2)[tmp6(415)], true)) : null));
            matchComparison(p(235), collect(node, p(532), p(409)[p(450)](String[p(593)](55357, 56835))));
            matchComparison("820", [wrap(c, node), (target = node, now = current, [collect(target, user), rpm_traffic[now(797)](function (name) {
                return collect(target, name);
            })])]);
        }
    });
    var urlParams = [[55357, 56832], [9786], [55358, 56629, 8205, 9794, 65039], [9832], [9784], [9895], [8265], [8505], [55356, 57331, 65039, 8205, 9895, 65039], [55358, 56690], [9785], [9760], [55358, 56785, 8205, 55358, 56752], [55358, 56783, 8205, 9794, 65039], [9975], [55358, 56785, 8205, 55358, 56605, 8205, 55358, 56785], [9752], [9968], [9961], [9972], [9992], [9201], [9928], [9730], [9969], [9731], [9732], [9976], [9823], [9937], [9e3], [9993], [9999], [55357, 56425, 8205, 10084, 65039, 8205, 55357, 56459, 8205, 55357, 56424], [55357, 56424, 8205, 55357, 56425, 8205, 55357, 56423, 8205, 55357, 56422], [55357, 56424, 8205, 55357, 56425, 8205, 55357, 56422], [55357, 56832], [169], [174], [8482], [55357, 56385, 65039, 8205, 55357, 56808, 65039], [10002], [9986], [9935], [9874], [9876], [9881], [9939], [9879], [9904], [9905], [9888], [9762], [9763], [11014], [8599], [10145], [11013], [9883], [10017], [10013], [9766], [9654], [9197], [9199], [9167], [9792], [9794], [10006], [12336], [9877], [9884], [10004], [10035], [10055], [9724], [9642], [10083], [10084], [9996], [9757], [9997], [10052], [9878], [8618], [9775], [9770], [9774], [9745], [10036], [55356, 56688], [55356, 56703]][current(797)](function (mmCoreSplitViewBlock) {
        var findIn = current;
        return String.fromCharCode[findIn(740)](String, mmCoreSplitViewBlock);
    });
    var mappings = current(327);
    var P;
    var CheckDailyStat = require(current(488), function (fn) {
        var BASAL_TYPES;
        var frontpageItems;
        var input = 450;
        var parseInt = current;
        var int = toString();
        var type = toString();
        var i = toString();
        var value = toString();
        var data = document;
        var tokens = data[parseInt(533)];
        var probe = append(P || (P = toPrimitive([parseInt(638), '">\n      <style>\n        #', " #", parseInt(282), " .", parseInt(240), " #", ",\n        #", " #", " {\n          top: 0 !important;\n          left: 0 !important;\n        }\n        #", " #", parseInt(820), " #", parseInt(559), " #", parseInt(718), " .", parseInt(801), ';\n          font-size: 200px !important;\n          font-style: normal !important;\n          font-weight: normal !important;\n          height: auto !important;\n          letter-spacing: normal !important;\n          line-break: auto !important;\n          line-height: normal !important;\n          text-transform: none !important;\n          text-align: left !important;\n          text-decoration: none !important;\n          text-shadow: none !important;\n          white-space: normal !important;\n          width: auto !important;\n          word-break: normal !important;\n          word-spacing: normal !important;\n        }\n      </style>\n      <div id="', parseInt(207), parseInt(770), parseInt(601)], [parseInt(638), parseInt(479), " #", parseInt(282), " .", parseInt(240), " #", ",\n        #", " #", " {\n          top: 0 !important;\n          left: 0 !important;\n        }\n        #", " #", parseInt(820), " #", parseInt(559), " #", parseInt(718), " .", parseInt(801), ';\n          font-size: 200px !important;\n          font-style: normal !important;\n          font-weight: normal !important;\n          height: auto !important;\n          letter-spacing: normal !important;\n          line-break: auto !important;\n          line-height: normal !important;\n          text-transform: none !important;\n          text-align: left !important;\n          text-decoration: none !important;\n          text-shadow: none !important;\n          white-space: normal !important;\n          width: auto !important;\n          word-break: normal !important;\n          word-spacing: normal !important;\n        }\n      </style>\n      <div id="', parseInt(207), parseInt(770), parseInt(601)])), int, int, i, int, type, int, i, int, value, int, i, int, value, int, i, int, type, mappings, i, value, urlParams.map(function (mmCoreSplitViewBlock) {
            var toInt = parseInt;
            return '<div class="'.concat(type, '">')[toInt(input)](mmCoreSplitViewBlock, toInt(211));
        }).join(""));
        tokens[parseInt(744)](probe);
        try {
            var match = function (value) {
                var rel2Mstr = parseInt;
                var same = document.getElementsByClassName(value);
                var img_slide = [];
                var service_obj = [];
                var mainBuffer = [];
                var offset = 0;
                var fetchSize = same[rel2Mstr(238)];
                for (; offset < fetchSize; offset = offset + 1) {
                    var widgetArr = same[offset][rel2Mstr(835)]()[0];
                    if (widgetArr) {
                        var _maskLayer = widgetArr[rel2Mstr(522)];
                        var time = widgetArr[rel2Mstr(364)];
                        img_slide[rel2Mstr(769)](_maskLayer, time);
                        var status = ""[rel2Mstr(450)](_maskLayer, "x")[rel2Mstr(450)](time);
                        if (-1 === service_obj[rel2Mstr(588)](status)) {
                            service_obj[rel2Mstr(769)](status);
                            mainBuffer.push(offset);
                        }
                    }
                }
                return [img_slide, mainBuffer];
            }(type);
            input = match[0];
            var timeSeparator = match[1];
            if (0 !== input.length) {
                args[parseInt(423)];
            }
            var o = data.getElementById(i);
            var r = o[parseInt(835)]()[0];
            var atomToChunk = data[parseInt(687)](value)[parseInt(835)]()[0];
            var obj = tokens[parseInt(835)]()[0];
            o[parseInt(181)][parseInt(436)](parseInt(466));
            var tv = null === (BASAL_TYPES = o[parseInt(835)]()[0]) || void 0 === BASAL_TYPES ? void 0 : BASAL_TYPES[parseInt(700)];
            o[parseInt(181)].remove(parseInt(466));
            args["5f1"];
        } finally {
            input = data[parseInt(687)](int);
            tokens[parseInt(840)](input);
        }
    });
    var arrayBufferView = [current(571), "HoloLens MDL2 Assets", current(484), "Nirmala UI", current(461), "Chakra Petch", current(293), "InaiMathi Bold", current(818), current(719), current(217), current(502), current(405), current(255), current(654), "Roboto", current(629), current(819), "ZWAdobeF", current(729), current(849)];
    var EffectChain = require(current(598), function (renderDataFunc) {
        return __awaiter(void 0, void 0, void 0, function () {
            var i;
            return send(this, function (boardManager) {
                var params = test;
                switch (boardManager[params(304)]) {
                    case 0:
                        return done("FontFace" in window, params(531)), [4, checkSwiftVersion()];
                    case 1:
                        return (i = boardManager[params(689)]())[params(238)] ? (renderDataFunc("39b", i), [2]) : [2];
                }
            });
        });
    });
    var visible = function () {
        var now = current;
        try {
            return Array(-1), 0;
        } catch (rpm_traffic) {
            return (rpm_traffic[now(457)] || [])[now(238)] + Function[now(768)]()[now(238)];
        }
    }();
    var avoidLocations = 57 === visible;
    var SUPPORT_DESC = 61 === visible;
    var modifyDocumentElement = 83 === visible;
    var isVis = 91 === visible;
    var GenerateGif = require(current(693), function (fn) {
        return __awaiter(void 0, void 0, void 0, function () {
            var module;
            var nNode2;
            return send(this, function (overlaydata) {
                var jsonParse;
                var type = test;
                switch (overlaydata[type(304)]) {
                    case 0:
                        return module = [String([Math.cos(13 * Math.E), Math[type(272)](Math.PI, -100), Math[type(306)](39 * Math.E), Math[type(838)](6 * Math.LN2)]), Function[type(768)]()[type(238)], message(function () {
                            return 1[type(768)](-1);
                        }), message(function () {
                            return new Array(-1);
                        })], args[type(205)], args["1ab"], avoidLocations ? [4, (jsonParse = parse, new Promise(function (onLoad) {
                            setTimeout(function () {
                                return onLoad(jsonParse());
                            });
                        }))] : [3, 2];
                    case 1:
                        nNode2 = overlaydata.sent();
                        args[type(570)];
                        overlaydata[type(304)] = 2;
                    case 2:
                        return [2];
                }
            });
        });
    });
    var trytes = ["".concat(current(270)), ""[current(450)](current(270), ":0"), "".concat(current(839), ":rec2020"), "".concat(current(839), current(621)), ""[current(450)](current(839), current(266)), ""[current(450)]("any-hover", current(389)), ""[current(450)](current(641), current(283)), ""[current(450)](current(496), ":hover"), "".concat(current(496), current(283)), ""[current(450)](current(411), current(628)), ""[current(450)](current(411), ":coarse"), "".concat(current(411), ":none"), ""[current(450)]("pointer", current(628)), ""[current(450)](current(429), current(441)), "".concat(current(429), current(283)), ""[current(450)](current(526), current(794)), ""[current(450)](current(526), ":none"), ""[current(450)](current(384), current(368)), ""[current(450)](current(384), ":standalone"), ""[current(450)](current(384), ":minimal-ui"), "".concat(current(384), current(365)), ""[current(450)](current(726), current(283)), "".concat("forced-colors", current(733)), ""[current(450)]("prefers-color-scheme", ":light"), ""[current(450)]("prefers-color-scheme", ":dark"), ""[current(450)](current(658), current(491)), "".concat("prefers-contrast", current(791)), ""[current(450)](current(658), current(551)), ""[current(450)]("prefers-contrast", ":custom"), ""[current(450)](current(876), ":no-preference"), ""[current(450)]("prefers-reduced-motion", current(567)), "".concat(current(385), ":no-preference"), ""[current(450)](current(385), current(567))];
    var renderAssign = require("c57", function (expect) {
        var min = current;
        var c = [];
        trytes.forEach(function (mmCoreSplitViewBlock, newId) {
            var notObject = test;
            if (matchMedia("("[notObject(450)](mmCoreSplitViewBlock, ")"))[notObject(827)]) {
                c.push(newId);
            }
        });
        if (c[min(238)]) {
            expect(min(392), c);
        }
    });
    var ThoughtCollection = require("bd6", function (assert) {
        var result;
        var fn = current;
        var obj = navigator;
        var a = obj[args[523]];
        var b = obj[args[874]];
        var d = obj[args[540]];
        var g = obj.hardwareConcurrency;
        var h = obj.language;
        var f = obj[args[622]];
        var m = obj[args[599]];
        var i = obj[args[503]];
        var data = obj.connection;
        var p = obj.userAgentData;
        var redis = obj[args[492]];
        var val = obj[args[346]];
        var n = obj[args[345]];
        var lc = obj[args[783]];
        var params = p || {};
        var value = params[args[879]];
        var mobile = params.mobile;
        var k = params[args[599]];
        var object = "keyboard" in navigator && navigator[args[435]];
        assert(args[633], [a, b, d, g, h, f, m, i, (value || []).map(function (myPreferences) {
            return ""[args[450]](myPreferences[args[396]], " ")[args[450]](myPreferences[args[310]]);
        }), mobile, k, (val || []).length, (lc || [])[args[238]], n, "downlinkMax" in (data || {}), null == data ? void 0 : data.rtt, redis, null === (result = window[args[377]]) || void 0 === result ? void 0 : result[args[492]], args[308] in navigator, "object" == typeof object ? String(object) : object, args[318] in navigator, args[860] in navigator]);
    });
    var requestHelpers = require("5de", function (checkKeysFromSyncIt) {
        var prefixed = current;
        var s = window[prefixed(547)];
        var p = s[prefixed(522)];
        var u = s[prefixed(364)];
        var k = s[prefixed(226)];
        var i = s[prefixed(432)];
        var t = s[prefixed(449)];
        var m = s[prefixed(704)];
        var r = window.devicePixelRatio;
        var v = false;
        try {
            v = !!document[prefixed(542)](prefixed(661)) && prefixed(688) in window;
        } catch (A) { }
        checkKeysFromSyncIt(prefixed(639), [p, u, k, i, t, m, v, navigator[prefixed(867)], r, window[prefixed(853)], window[prefixed(782)], matchMedia("(device-width: ".concat(p, "px) and (device-height: ")[prefixed(450)](u, prefixed(851)))[prefixed(827)], matchMedia(prefixed(563).concat(r, ")"))[prefixed(827)], matchMedia(prefixed(760)[prefixed(450)](r, prefixed(714)))[prefixed(827)], matchMedia(prefixed(799).concat(r, ")"))[prefixed(827)]]);
    });
    var pipelets = [current(348), "ActiveCaption", current(634), current(708), current(289), current(386), "ButtonFace", current(737), current(243), current(878), current(762), current(401), "CaptionText", current(732), current(803), current(507), current(220), current(647), "InactiveBorder", "InactiveCaption", current(681), current(642), current(756), current(741), current(174), current(187), current(557), current(315), current(824), "ThreeDDarkShadow", current(765), "ThreeDHighlight", current(816), current(224), current(438), current(375), current(574), current(880)];
    var shortMenu = [current(785), current(274), current(530), current(832), current(645), current(185)];
    var CheckHourlyStat = require(current(230), function (expect) {
        var obj;
        var target;
        var descriptor;
        var p = current;
        var button1 = document.createElement(p(418));
        document[p(533)][p(744)](button1);
        try {
            var button1Component = function (obj) {
                var loc = p;
                var params = { r: getComputedStyle(obj)[String(707)], scope: "".concat(p, " ")[require(450)](ff) };
                var rslt = [];
                pipelets.forEach(function (assetsOfThisType) {
                    var stringToInts = test;
                    obj[stringToInts(450)](stringToInts(697), stringToInts(788).concat(assetsOfThisType, stringToInts(251)));
                });
                shortMenu[loc(326)](function (data) {
                    var prefixStyle = loc;
                    obj.setAttribute(prefixStyle(697), prefixStyle(787)[prefixStyle(450)](data, prefixStyle(251)));
                    var s = getComputedStyle(obj);
                    var x = s[prefixStyle(595)];
                    var ff = s.fontFamily;
                    rslt.push(ff);
                });
                var E = rslt.filter(function (sceneUid, canCreateDiscussions, scenes) {
                    return scenes.indexOf(sceneUid) === canCreateDiscussions;
                });
                return [params, E];
            }(button1);
            var repos3 = button1Component[0];
            var repos4 = button1Component[1];
            expect(p(699), repos3);
            expect(p(463), repos4);
            var msg = (obj = document[p(533)], target = getComputedStyle(obj), descriptor = Object[p(786)](target), debug(debug([], Object[p(753)](descriptor), true), Object[p(613)](target), true)[p(213)](function (lst) {
                return null == Number(lst) && -1 === lst.indexOf("-");
            }));
            expect(p(666), msg);
            expect(p(562), msg.length);
        } finally {
            document[p(533)].removeChild(button1);
        }
    });
    var myPreferences = [current(877), "DateTimeFormat", "DisplayNames", current(444), "NumberFormat", "PluralRules", current(317)];
    var frontpageItems = current(549);
    var _params;
    var frontEndModuleConfig = require(current(578), function (append) {
        var clone = current;
        var x = function () {
            var notObject = test;
            try {
                return Intl[notObject(854)]().resolvedOptions()[notObject(608)];
            } catch (A) {
                return null;
            }
        }();
        if (x) {
            append(clone(210), x);
        }
        var template;
        var individualMD5;
        var data;
        var x1;
        var min;
        var _ref;
        var controller;
        var _name;
        var stats;
        var startValue;
        var obj;
        var value;
        var result = new Date(clone(446));
        append(clone(822), [x, (data = result, x1 = 450, min = current, _ref = JSON[min(252)](data)[min(671)](1, 11).split("-"), controller = _ref[0], _name = _ref[1], stats = _ref[2], startValue = "".concat(_name, "/")[min(450)](stats, "/")[min(x1)](controller), obj = ""[min(450)](controller, "-")[min(x1)](_name, "-")[min(450)](stats), value = +(+new Date(startValue) - +new Date(obj)) / 6e4, Math[min(388)](value)), result[clone(863)](), [1879, 1921, 1952, 1976, 2018].reduce(function (totalWidth, val) {
            var previous = clone;
            return totalWidth + Number(new Date(previous(577)[previous(450)](val)));
        }, 0), (template = String(new Date), (null === (individualMD5 = /\((.+)\)/[current(516)](template)) || void 0 === individualMD5 ? void 0 : individualMD5[1]) || ""), processChildren()]);
        if (x) {
            append(clone(682), list(x));
        }
    });
    var dec2hex = [current(599), current(277), current(685), current(212), current(245), current(259)];
    var jsonfn = require(current(527), function (filter) {
        return __awaiter(void 0, void 0, void 0, function () {
            var frontpageItems;
            var subwikiListsCache;
            var callback;
            return send(this, function (currentItems) {
                var parseInt = test;
                switch (currentItems[parseInt(304)]) {
                    case 0:
                        return (frontpageItems = navigator[parseInt(745)]) ? [4, frontpageItems[parseInt(650)](dec2hex)] : [2];
                    case 1:
                        return (subwikiListsCache = currentItems[parseInt(689)]()) ? (callback = dec2hex[parseInt(797)](function (wikiId) {
                            return subwikiListsCache[wikiId] || null;
                        }), filter(parseInt(560), callback), [2]) : [2];
                }
            });
        });
    });
    var darkThemeBackground = [35724, 7936, 7937, 7938, 34921, 36347, 35660, 36348, 36349, 33901, 33902, 34930, 3379, 35661, 34024, 3386, 34076, 2963, 2968, 36004, 36005, 3408, 35658, 35371, 37154, 35377, 35659, 35968, 35978, 35979, 35657, 35373, 37157, 35379, 35077, 34852, 36063, 36183, 32883, 35071, 34045, 35375, 35376, 35374, 33e3, 33001, 36203];
    var params = ((_params = {})[33e3] = 0, _params[33001] = 0, _params[36203] = 0, _params[36349] = 1, _params[34930] = 1, _params[37157] = 1, _params[35657] = 1, _params[35373] = 1, _params[35077] = 1, _params[34852] = 2, _params[36063] = 2, _params[36183] = 2, _params[34024] = 2, _params[3386] = 2, _params[3408] = 3, _params[33902] = 3, _params[33901] = 3, _params[2963] = 4, _params[2968] = 4, _params[36004] = 4, _params[36005] = 4, _params[3379] = 5, _params[34076] = 5, _params[35661] = 5, _params[32883] = 5, _params[35071] = 5, _params[34045] = 5, _params[34047] = 5, _params[35978] = 6, _params[35979] = 6, _params[35968] = 6, _params[35375] = 7, _params[35376] = 7, _params[35379] = 7, _params[35374] = 7, _params[35377] = 7, _params[36348] = 8, _params[34921] = 8, _params[35660] = 8, _params[36347] = 8, _params[35658] = 8, _params[35371] = 8, _params[37154] = 8, _params[35659] = 8, _params);
    var menuOpts;
    var genBrick = require(current(636), function (fn) {
        var last = current;
        var tiledImageBRs = init(last(771)) || [];
        var portCateg = tiledImageBRs[0];
        var timecreated = tiledImageBRs[1];
        if (portCateg && (_port = portCateg[0])) {
            args[last(774)];
            args[last(221)];
        }
        var _port;
        var split = init(last(662)) || [];
        var i = split[0];
        var field = split[1];
        if (i && (_port = i[0])) {
            args[last(303)];
        }
        args[last(596)];
        var discTimecreated = timecreated || [];
        var route = discTimecreated[0];
        var mmCoreDownloaded = discTimecreated[2];
        var get = field || [];
        var reading = get[0];
        var tsid = get[1];
        var mmCoreNotDownloadable = get[2];
        if (!(void 0 === mmCoreDownloaded && void 0 === mmCoreNotDownloadable)) {
            args[last(246)];
        }
        var blocks = debug(debug([], route || [], true), reading || [], true)[last(213)](function (configurationCtrlModel, datepicker, myPreferences) {
            var getPreferenceKey = last;
            return getPreferenceKey(525) == typeof configurationCtrlModel && myPreferences[getPreferenceKey(588)](configurationCtrlModel) === datepicker;
        })[last(379)](function (b, a) {
            return b - a;
        });
        if (blocks[last(238)]) {
            args[last(710)];
        }
        if (tsid) {
            [[last(684), tsid[0]], [last(842), tsid[1]], ["e7d", tsid[2]], [last(653), tsid[3]], ["d5a", tsid[4]], ["1f9", tsid[5]], [last(340), tsid[6]], [last(267), tsid[7]], [last(772), tsid[8]]][last(326)](function (docs) {
                var elem = docs[0];
                var data = docs[1];
                return data && args[elem];
            });
        }
    });
    var num_to_grab = true;
    var hOP = Object[current(817)];
    var defineProperty = Object[current(798)];
    var sum = (menuOpts = String[current(768)]().split(String[current(265)]))[0];
    var opt = menuOpts[1];
    var genWaveBrick = require(current(319), function (callback) {
        var ref2;
        var obj;
        var data;
        var amndx;
        var matches;
        var tokens;
        var now;
        var columnsScalesMap;
        var completion;
        var rpm_traffic;
        var selected;
        var lastviewmatrix;
        var parseInt = current;
        var values = (now = test, columnsScalesMap = [], completion = Object[now(753)](window), rpm_traffic = Object[now(613)](window)[now(671)](-25), selected = completion[now(671)](-25), lastviewmatrix = completion.slice(0, -25), rpm_traffic[now(326)](function (val) {
            var toInteger = now;
            if (!(toInteger(225) === val && -1 === selected[toInteger(588)](val) || resolve(window, val) && !columnsScalesMap[toInteger(373)](val))) {
                columnsScalesMap[toInteger(769)](val);
            }
        }), selected.forEach(function (val) {
            var mat = now;
            if (-1 === columnsScalesMap[mat(588)](val)) {
                if (!(resolve(window, val) && !/[_$]/.test(val))) {
                    columnsScalesMap[mat(769)](val);
                }
            }
        }), 0 !== columnsScalesMap[now(238)] ? lastviewmatrix[now(769)][now(740)](lastviewmatrix, selected[now(213)](function (val) {
            return -1 === columnsScalesMap[now(588)](val);
        })) : lastviewmatrix[now(769)][now(740)](lastviewmatrix, selected), [lastviewmatrix, columnsScalesMap]);
        var value = values[0];
        var notes_mac = values[1];
        if (0 !== value[parseInt(238)]) {
            callback("7e0", value);
            callback(parseInt(657), value.length);
        }
        callback("68c", [Object.getOwnPropertyNames(window[parseInt(225)] || {}), null === (ref2 = window.prompt) || void 0 === ref2 ? void 0 : ref2[parseInt(768)]()[parseInt(238)], null === (obj = window[parseInt(485)]) || void 0 === obj ? void 0 : obj[parseInt(768)]()[parseInt(238)], null === (data = window.process) || void 0 === data ? void 0 : data[parseInt(655)], parseInt(674) in window, parseInt(480) in window, parseInt(462) in window, Function.toString()[parseInt(238)], parseInt(644) in [] ? parseInt(535) in window : null, parseInt(336) in window ? parseInt(414) in window : null, parseInt(311) in window, parseInt(582) in window && parseInt(610) in PerformanceObserver[parseInt(257)] ? parseInt(321) in window : null, parseInt(759) in (window[parseInt(465)] || {}) && CSS.supports(parseInt(278)), notes_mac, (tokens = [], Object[parseInt(753)](document)[parseInt(326)](function (name) {
            var toInt = parseInt;
            if (!resolve(document, name)) {
                var dir = document[name];
                if (dir) {
                    var target = Object[toInt(786)](dir) || {};
                    tokens.push([name, debug(debug([], Object[toInt(613)](dir), true), Object[toInt(613)](target), true)[toInt(671)](0, 5)]);
                } else {
                    tokens.push([name]);
                }
            }
        }), tokens[parseInt(671)](0, 5)), (amndx = window, matches = [], [[amndx, "fetch", 0], [amndx, parseInt(784), 1]][parseInt(326)](function (row) {
            var params = row[0];
            var i = row[1];
            var result = row[2];
            if (!resolve(params, i)) {
                matches.push(result);
            }
        }), setup() && matches[parseInt(769)](2), matches), parseInt(474) in window && "description" in Symbol[parseInt(257)] ? parseInt(192) in window : null]);
        var error_files = avoidLocations && "supports" in CSS ? [parseInt(758) in window, parseInt(253) in HTMLVideoElement[parseInt(257)], CSS[parseInt(759)]("color-scheme:initial"), CSS[parseInt(759)](parseInt(811)), CSS[parseInt(759)]("appearance:initial"), parseInt(706) in Intl, CSS[parseInt(759)](parseInt(776)), CSS.supports(parseInt(823)), parseInt(241) in Crypto[parseInt(257)], parseInt(462) in window, "NetworkInformation" in window && parseInt(813) in NetworkInformation[parseInt(257)], "ContactsManager" in window, parseInt(249) in Navigator.prototype, "BarcodeDetector" in window, parseInt(674) in window, parseInt(604) in window, parseInt(476) in window, "Serial" in window, parseInt(173) in window] : null;
        if (error_files) {
            callback(parseInt(609), error_files);
        }
    });
    var renderWaveLane = require(current(747), function (_$$mdAnimate_) {
        var findIn = current;
        var templateGroups = [];
        try {
            if (!(findIn(434) in window || findIn(844) in window)) {
                if (null === new Function("return "[current(450)](findIn(434)))() && new Function("return "[current(450)]("result"))()[findIn(238)]) {
                    templateGroups[findIn(769)](0);
                }
            }
        } catch (A) { }
        if (templateGroups.length) {
            _$$mdAnimate_("0cf", templateGroups);
        }
    });
    var renderArcs = require(current(624), function (format) {
        var x = current;
        var val = [inject(window[x(705)], [x(203)]), inject(window.AnalyserNode, ["getFloatFrequencyData"]), inject(window[x(802)], [x(320)]), inject(window[x(354)], ["getTimezoneOffset"]), inject(window[x(291)], [x(497)]), inject(window.Element, ["append", "getClientRects"]), inject(window.FontFace, [x(248)]), inject(window[x(499)], [x(768)]), inject(window[x(579)], [x(857), "getContext"]), inject(window[x(459)], [x(625)]), inject(window[x(830)], [x(540), x(312), x(867), x(874)]), inject(window[x(584)], [x(744)]), inject(window[x(504)], [x(522), x(704)]), inject(window[x(716)], [x(757)]), inject(window.WebGLRenderingContext, [x(331)])];
        decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray("2b7", "2b7" + val));
        decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(x(350), x(350) + [val, mark()]));
    });
    var hsba = String[current(768)]()[current(619)](String[current(265)]);
    var s = hsba[0];
    var l = hsba[1];
    var insertSVGTemplate = require("1e1", function (callback) {
        var IntlPolyfill;
        var i = current;
        if (!modifyDocumentElement) {
            var CanvasRenderingContext2D = window.CanvasRenderingContext2D;
            var polygonArray = window[i(579)];
            var ajaxPatched = window[i(830)];
            var constructeur = window[i(504)];
            var queuedPaints = [[ajaxPatched, i(622), 0], [ajaxPatched, "webdriver", 0], [window.Permissions, i(380), 0], [CanvasRenderingContext2D, "getImageData", 1], [polygonArray, i(701), 1], [polygonArray, i(857), 1], [ajaxPatched, i(312), 2], [window[i(806)], i(835), 3], [ajaxPatched, "deviceMemory", 4], [ajaxPatched, "userAgent", 5], [window.NavigatorUAData, i(650), 5], [constructeur, "width", 6], [constructeur, "pixelDepth", 6], [window[i(354)], "getTimezoneOffset", 7], [null === (IntlPolyfill = window[i(780)]) || void 0 === IntlPolyfill ? void 0 : IntlPolyfill.DateTimeFormat, i(489), 7], [ajaxPatched, i(867), 8], [window[i(425)], i(331), 9]][i(797)](function (elem) {
                var e = elem[0];
                var cur = elem[1];
                var id = elem[2];
                return e ? function (values, key, O) {
                    var parseInt = test;
                    try {
                        var obj = values[parseInt(257)];
                        var arr = Object.getOwnPropertyDescriptor(obj, key) || {};
                        var def = arr[parseInt(834)];
                        var text = arr[parseInt(743)];
                        var value = def || text;
                        if (!value) {
                            return null;
                        }
                        var historyDescriptors = parseInt(257) in value && parseInt(265) in value;
                        var number = null == obj ? void 0 : obj[parseInt(810)][parseInt(265)];
                        var ev = parseInt(830) === number;
                        var isArray = parseInt(504) === number;
                        var ColdFusion = ev && navigator[parseInt(814)](key);
                        var z = isArray && screen[parseInt(814)](key);
                        var GDL = false;
                        if (ev && "clientInformation" in window) {
                            GDL = String(navigator[key]) !== String(clientInformation[key]);
                        }
                        var target = Object[parseInt(786)](value);
                        var data = [!(!("name" in value) || parseInt(591) !== value[parseInt(265)] && (s + value[parseInt(265)] + l === value[parseInt(768)]() || s + value[parseInt(265)][parseInt(724)](parseInt(402), "") + l === value[parseInt(768)]())), GDL, ColdFusion, z, historyDescriptors, !compile(function () {
                            throw value.arguments, new TypeError;
                        }), !compile(function () {
                            return new value;
                        }), !compile(function () {
                            return Error(Object.create(value));
                        }), "Reflect" in window && !compile(function () {
                            var toInt = parseInt;
                            throw Reflect.setPrototypeOf(value, Object[toInt(739)](value)), new TypeError;
                        }, function () {
                            return Reflect[parseInt(720)](value, target);
                        })];
                        if (!data.some(function (canCreateDiscussions) {
                            return canCreateDiscussions;
                        })) {
                            return null;
                        }
                        var imageDataArr = data[parseInt(875)](function (colix, isTranslucent, howManyToRound) {
                            return isTranslucent ? colix | Math.pow(2, howManyToRound) : colix;
                        }, 0);
                        return ""[parseInt(450)](O, ":").concat(imageDataArr);
                    } catch (A) {
                        return null;
                    }
                }(e, cur, id) : null;
            }).filter(function (canCreateDiscussions) {
                return null !== canCreateDiscussions;
            });
            if (queuedPaints.length) {
                callback(i(510), queuedPaints);
            }
        }
    });
    var insertSVGTemplateAssign = require(current(305), function (append) {
        return __awaiter(void 0, void 0, void 0, function () {
            var d;
            var c;
            var b;
            var a;
            var x2;
            var _ref;
            var arr;
            var node;
            return send(this, function (n) {
                var i;
                var p;
                var e;
                var prefixed;
                var document;
                var d3_vendorSymbol = test;
                switch (n[d3_vendorSymbol(304)]) {
                    case 0:
                        return [4, Promise[d3_vendorSymbol(600)]([(prefixed = current, document = navigator.storage, document && prefixed(403) in document ? document[prefixed(403)]().then(function (ionicImgCache) {
                            return ionicImgCache.quota || null;
                        }) : null), (i = 561, p = current, e = navigator[p(631)], e && p(561) in e ? new Promise(function (processor) {
                            e[p(i)](function (isSlidingUp, options) {
                                processor(options || null);
                            });
                        }) : null), "CSS" in window && d3_vendorSymbol(759) in CSS && CSS[d3_vendorSymbol(759)](d3_vendorSymbol(473)) || !(d3_vendorSymbol(514) in window) ? null : new Promise(function (saveNotifs) {
                            webkitRequestFileSystem(0, 1, function () {
                                saveNotifs(false);
                            }, function () {
                                saveNotifs(true);
                            });
                        }), _initStorage()])];
                    case 1:
                        return d = n[d3_vendorSymbol(689)](), c = d[0], b = d[1], a = d[2], x2 = d[3], _ref = navigator.connection, arr = [c, b, a, x2, "performance" in window && "memory" in window[d3_vendorSymbol(307)] ? performance[d3_vendorSymbol(881)].jsHeapSizeLimit : null, d3_vendorSymbol(866) in window, "PushManager" in window, d3_vendorSymbol(234) in window, (null == _ref ? void 0 : _ref[d3_vendorSymbol(655)]) || null], append(d3_vendorSymbol(746), arr), (node = b || c) && append(d3_vendorSymbol(356), list(node)), [2];
                }
            });
        });
    });
    var footerAccordion = require(current(627), function (s, canCreateDiscussions, test) {
        return __awaiter(void 0, void 0, void 0, function () {
            var shouldAvoid;
            var prototype;
            return send(this, function (types) {
                var type = test;
                switch (types[type(304)]) {
                    case 0:
                        return shouldAvoid = avoidLocations && !(type(249) in navigator), type(361) in navigator && "type" in navigator[type(361)] || shouldAvoid || !(type(775) in window) ? [2] : [4, test(new Promise(function (filter) {
                            var norm = type;
                            var setOptions = function () {
                                var key = test;
                                var map = speechSynthesis.getVoices();
                                if (map && map[key(238)]) {
                                    var noParamReally = map.map(function (engineDiscovery) {
                                        var listener = key;
                                        return [engineDiscovery[listener(333)], engineDiscovery[listener(204)], engineDiscovery[listener(665)], engineDiscovery.name, engineDiscovery[listener(288)]];
                                    });
                                    filter(noParamReally);
                                }
                            };
                            setOptions();
                            speechSynthesis[norm(703)] = setOptions;
                        }), 50)];
                    case 1:
                        return (prototype = types[type(689)]()) ? (s(type(469), prototype), s(type(848), prototype[type(671)](0, 3)), [2]) : [2];
                }
            });
        });
    });
    var possibleDropActions = [current(275), current(218), current(606), current(382), current(734), "bluetooth", current(431), current(649), current(178), current(515), "device-info", current(536), current(766), current(482), current(717), current(372), current(856), current(467), current(792), current(374), "notifications", current(443), "periodic-background-sync", "persistent-storage", "push", current(594), "speaker", current(512), "system-wake-lock", current(180)];
    var mobileInit = require(current(244), function (callback) {
        return __awaiter(void 0, void 0, void 0, function () {
            var tmp;
            var promises;
            var done;
            var obj;
            return send(this, function (currentItems) {
                var parseInt = test;
                switch (currentItems[parseInt(304)]) {
                    case 0:
                        return parseInt(635) in navigator ? (tmp = "", promises = possibleDropActions[parseInt(797)](function (string) {
                            var String = parseInt;
                            var obj = {};
                            return obj.name = string, navigator[String(635)].query(obj)[String(520)](function (array) {
                                var type = String;
                                return type(585) === string && (tmp = array[type(620)]), array[type(620)];
                            }).catch(function (specialChars) {
                                return specialChars[String(265)];
                            });
                        }), [4, Promise[parseInt(600)](promises)]) : [2];
                    case 1:
                        return done = currentItems[parseInt(689)](), callback("7ec", done), callback(parseInt(692), [null === (obj = window[parseInt(607)]) || void 0 === obj ? void 0 : obj[parseInt(239)], tmp]), [2];
                }
            });
        });
    });
    var toggleFieldMask = require(current(800), function (h) {
        var j = current;
        var el = document;
        h(j(809), debug([], el[j(208)]("*"), true)[j(797)](function (myPreferences) {
            var getPreferenceKey = j;
            return [myPreferences.tagName, myPreferences[getPreferenceKey(222)]];
        }));
        h("d02", [create(el), extract(el)]);
    });
    var toggleFormInput = require("16a", function (s) {
        var String;
        var r;
        var obj;
        var js;
        var self;
        var w = current;
        if (w(307) in window) {
            if (w(544) in performance) {
                s("63e", performance[w(544)]);
            }
            var C = (String = w, r = performance.getEntries(), obj = {}, js = [], self = [], r[String(326)](function (array) {
                var toKey = String;
                if (array[toKey(565)]) {
                    var camelFind = array[toKey(265)][toKey(619)]("/")[2];
                    var k = ""[toKey(450)](array[toKey(565)], ":")[toKey(450)](camelFind);
                    if (!obj[k]) {
                        obj[k] = [[], []];
                    }
                    var option = array[toKey(233)] - array[toKey(297)];
                    var dataPlus = array[toKey(721)] - array[toKey(355)];
                    if (option > 0) {
                        obj[k][0][toKey(769)](option);
                        js.push(option);
                    }
                    if (dataPlus > 0) {
                        obj[k][1][toKey(769)](dataPlus);
                        self[toKey(769)](dataPlus);
                    }
                }
            }), [Object.keys(obj)[String(797)](function (key) {
                var info = obj[key];
                return [key, merge(info[0]), merge(info[1])];
            })[String(379)](), merge(js), merge(self)]);
            var a = C[0];
            var b = C[1];
            var e = C[2];
            if (a.length && (s(w(196), a), s(w(359), b), s(w(191), e)), avoidLocations) {
                var status = function () {
                    var now = w;
                    var x = performance.now();
                    var count = null;
                    var format = 0;
                    var j = x;
                    for (; format < 50;) {
                        count = performance[now(301)]();
                        if (count - x >= 5) {
                            break;
                        }
                        var i = count - j;
                        if (0 !== i) {
                            j = count;
                            if (count % 1 != 0) {
                                if (null === count || i < count) {
                                    format = 0;
                                    count = i;
                                } else {
                                    if (i === count) {
                                        format = format + 1;
                                    }
                                }
                            }
                        }
                    }
                    var rpm_traffic = count || 0;
                    return 0 === rpm_traffic ? null : [rpm_traffic, rpm_traffic[now(768)](2)[now(238)]];
                }();
                if (status) {
                    s(w(698), status);
                }
            }
        }
    });
    var once = require(current(206), function (CSLEDIT_Data, canCreateDiscussions, trigger) {
        return __awaiter(void 0, void 0, void 0, function () {
            var Foo;
            var C;
            var styleinfoid;
            var A;
            var elmObjsSorted;
            var dash_start;
            return send(this, function (n) {
                var d3_vendorSymbol = test;
                switch (n.label) {
                    case 0:
                        return (Foo = window[d3_vendorSymbol(616)] || window[d3_vendorSymbol(855)]) ? [4, run(new Foo(1, 5e3, 44100), trigger)] : [2];
                    case 1:
                        return C = n[d3_vendorSymbol(689)](), styleinfoid = C[0], A = C[1], elmObjsSorted = C[2], dash_start = C[3], CSLEDIT_Data(d3_vendorSymbol(343), [A && Array[d3_vendorSymbol(322)](A.slice(-500)), elmObjsSorted && Array[d3_vendorSymbol(322)](elmObjsSorted.slice(-500)), dash_start && Array[d3_vendorSymbol(322)](dash_start.slice(-500)), styleinfoid]), [2];
                }
            });
        });
    });
    var baseline = require(current(250), function (fn) {
        return __awaiter(void 0, void 0, void 0, function () {
            var expectsLength;
            var values;
            var info;
            return send(this, function (currentItems) {
                var parseInt = test;
                switch (currentItems[parseInt(304)]) {
                    case 0:
                        return [4, null === (info = null === (values = null === navigator || void 0 === navigator ? void 0 : navigator[parseInt(175)]) || void 0 === values ? void 0 : values[parseInt(691)]) || void 0 === info ? void 0 : info[parseInt(314)](values)];
                    case 1:
                        return "boolean" != typeof (expectsLength = currentItems[parseInt(689)]()) || args[parseInt(568)], [2];
                }
            });
        });
    });
    var obj = ["#FF6633", current(279), "#FF33FF", current(711), current(404), current(556), current(872), current(587), current(284), current(715), "#80B300", "#809900", current(228), current(712), current(471), "#FF99E6", current(390), "#FF1A66", current(447), current(197), current(548), current(188), "#4D8000", current(376), current(845), current(626), current(778), current(387), current(709), current(518), current(183), current(417), current(836), current(199), current(517), "#4D8066", "#809980", current(702), current(672), current(651), current(328), "#CCCC00", current(455), current(648), current(216), current(752), current(862), current(424), current(254), current(383)];
    var key;
    var target = {
        bezierCurve: function (handlers, data, payload, start) {
            var findIn = current;
            var queue = data[findIn(522)];
            var UPLOAD_ERROR = data[findIn(364)];
            handlers[findIn(513)]();
            handlers[findIn(324)](set(start(), payload, queue), set(start(), payload, UPLOAD_ERROR));
            handlers[findIn(735)](set(start(), payload, queue), set(start(), payload, UPLOAD_ERROR), set(start(), payload, queue), set(start(), payload, UPLOAD_ERROR), set(start(), payload, queue), set(start(), payload, UPLOAD_ERROR));
            handlers.stroke();
        }, circularArc: function (handlers, target, payload, from) {
            var name = current;
            var value = target[name(522)];
            var k = target.height;
            handlers[name(513)]();
            handlers[name(841)](set(from(), payload, value), set(from(), payload, k), set(from(), payload, Math[name(534)](value, k)), set(from(), payload, 2 * Math.PI, true), set(from(), payload, 2 * Math.PI, true));
            handlers.stroke();
        }, ellipticalArc: function (handlers, target, payload, provide) {
            var zid = current;
            if (zid(325) in handlers) {
                var value = target.width;
                var maxY = target.height;
                handlers[zid(513)]();
                handlers[zid(325)](set(provide(), payload, value), set(provide(), payload, maxY), set(provide(), payload, Math[zid(388)](value / 2)), set(provide(), payload, Math.floor(maxY / 2)), set(provide(), payload, 2 * Math.PI, true), set(provide(), payload, 2 * Math.PI, true), set(provide(), payload, 2 * Math.PI, true));
                handlers[zid(420)]();
            }
        }, quadraticCurve: function (handlers, context, payload, ctx) {
            var zid = current;
            var cb = context[zid(522)];
            var object = context[zid(364)];
            handlers.beginPath();
            handlers[zid(324)](set(ctx(), payload, cb), set(ctx(), payload, object));
            handlers[zid(186)](set(ctx(), payload, cb), set(ctx(), payload, object), set(ctx(), payload, cb), set(ctx(), payload, object));
            handlers[zid(420)]();
        }, outlineOfText: function (handlers, data, payload, provide) {
            var get = current;
            var queue = data[get(522)];
            var UPLOAD_ERROR = data.height;
            var target = mappings[get(724)](/!important/gm, "");
            var tok = get(409)[get(450)](String[get(593)](55357, 56835, 55357, 56446));
            handlers[get(362)] = ""[get(450)](UPLOAD_ERROR / 2.99, get(276))[get(450)](target);
            handlers[get(713)](tok, set(provide(), payload, queue), set(provide(), payload, UPLOAD_ERROR), set(provide(), payload, queue));
        }
    };
    var alphabetic = require(current(468), function (saveNotifs) {
        var pickRandom = current;
        var vForward = document.createElement(pickRandom(298));
        var saves_names = vForward[pickRandom(701)]("2d");
        if (saves_names) {
            (function (a, options) {
                var handlers;
                var part;
                var payload;
                var prop;
                var getWindow;
                var zid;
                var UPLOAD_ERROR;
                var queue;
                var grad;
                var camelCase = pickRandom;
                if (options) {
                    var segment = {};
                    segment[camelCase(522)] = 20;
                    segment[camelCase(364)] = 20;
                    var s = segment;
                    options[camelCase(505)](0, 0, a[camelCase(522)], a[camelCase(364)]);
                    a[camelCase(522)] = s[camelCase(522)];
                    a.height = s[camelCase(364)];
                    if (a[camelCase(697)]) {
                        a.style[camelCase(846)] = camelCase(553);
                    }
                    var invoke = function (addedRenderer, modulo, canCreateDiscussions) {
                        var toReturn = 500;
                        return function () {
                            return toReturn = 15e3 * toReturn % modulo;
                        };
                    }(0, 2001000001);
                    var input = Object[camelCase(613)](target)[camelCase(797)](function (name) {
                        return target[name];
                    });
                    var length = 0;
                    for (; length < 20; length = length + 1) {
                        handlers = options;
                        payload = 2001000001;
                        prop = obj;
                        getWindow = invoke;
                        zid = void 0;
                        UPLOAD_ERROR = void 0;
                        queue = void 0;
                        grad = void 0;
                        UPLOAD_ERROR = (part = s)[(zid = current)(522)];
                        queue = part[zid(364)];
                        (grad = handlers[zid(630)](set(getWindow(), payload, UPLOAD_ERROR), set(getWindow(), payload, queue), set(getWindow(), payload, UPLOAD_ERROR), set(getWindow(), payload, UPLOAD_ERROR), set(getWindow(), payload, queue), set(getWindow(), payload, UPLOAD_ERROR)))[zid(815)](0, prop[set(getWindow(), payload, prop.length)]);
                        grad.addColorStop(1, prop[set(getWindow(), payload, prop[zid(238)])]);
                        handlers[zid(656)] = grad;
                        options[camelCase(521)] = set(invoke(), 2001000001, 50, true);
                        options[camelCase(843)] = obj[set(invoke(), 2001000001, obj[camelCase(238)])];
                        (0, input[set(invoke(), 2001000001, input.length)])(options, s, 2001000001, invoke);
                        options.fill();
                    }
                }
            }(vForward, saves_names));
            saveNotifs("c36", vForward[pickRandom(857)]());
        }
    });
    var square = require("5ec", function (action) {
        return __awaiter(void 0, void 0, void 0, function () {
            var createY2Axis;
            var width;
            return send(this, function (myPreferences) {
                var getPreferenceKey = test;
                switch (myPreferences[getPreferenceKey(304)]) {
                    case 0:
                        return navigator.mediaDevices ? [4, navigator[getPreferenceKey(391)].enumerateDevices()] : [2];
                    case 1:
                        return createY2Axis = myPreferences[getPreferenceKey(689)](), width = createY2Axis[getPreferenceKey(797)](function (myPreferences) {
                            return myPreferences[getPreferenceKey(537)];
                        })[getPreferenceKey(379)](), action(getPreferenceKey(749), width), [2];
                }
            });
        });
    });
    var text_after_edge = require(current(477), function (saveNotifs) {
        var is;
        if ("performance" in window) {
            saveNotifs("862", (is = function (test) {
                var type = test;
                var name = 0;
                var Q = performance[type(301)]();
                for (; performance[type(301)]() - Q < 5;) {
                    name = name + 1;
                    test();
                }
                return name;
            })(function () { }) / is(Function));
        }
    });
    var text_before_edge = require(current(725), function (callback) {
        var method = current;
        if (!/Android [4-8][^\d]/[method(373)](navigator[method(874)])) {
            var botGridY = 0;
            var mockAgentService = Object[method(753)](window);
            var exts = String[method(768)]()[method(619)](String[method(265)]);
            var ext = exts[0];
            var path = exts[1];
            var a = [];
            mockAgentService[method(326)](function (b) {
                var name = method;
                try {
                    var args = Object[name(817)](window, b);
                    if (!args) {
                        return;
                    }
                    var id = args[name(834)];
                    var root = args[name(743)];
                    var target = id || root;
                    if (name(652) != typeof target || ext + target[name(265)] + path !== target.toString()) {
                        return;
                    }
                    var t = target ? Object[name(753)](target) : [];
                    var argument = name(257) in target ? Object[name(753)](target[name(257)]) : [];
                    botGridY = botGridY + (1 + t.length + argument[name(238)]);
                    a[name(769)](b, t, argument);
                } catch (A) { }
            });
            callback(method(677), a);
            callback("8b4", botGridY);
        }
    });
    var outputs = [current(353), "audio/mpeg", "audio/mpegurl", 'audio/wav; codecs="1"', current(193), current(287), current(294), current(296), current(332), current(439), current(750), "video/x-matroska"];
    var inherit = require("9de", function (hasEvent) {
        var prefixed = current;
        var cell = document[prefixed(497)](prefixed(605));
        var audioTest = new Audio;
        var window = outputs[prefixed(875)](function (myPreferences, type) {
            var element;
            var supported;
            var getPreferenceKey = prefixed;
            var meta = { mediaType: type, audioPlayType: null == audioTest ? void 0 : audioTest.canPlayType(type), videoPlayType: null == cell ? void 0 : cell[getPreferenceKey(202)](type), mediaSource: (null === (element = window[getPreferenceKey(427)]) || void 0 === element ? void 0 : element[getPreferenceKey(451)](type)) || false, mediaRecorder: (null === (supported = window[getPreferenceKey(481)]) || void 0 === supported ? void 0 : supported.isTypeSupported(type)) || false };
            return (meta[getPreferenceKey(229)] || meta[getPreferenceKey(589)] || meta[getPreferenceKey(868)] || meta[getPreferenceKey(295)]) && myPreferences[getPreferenceKey(769)](meta), myPreferences;
        }, []);
        hasEvent(prefixed(528), window);
    });
    var lr = require("774", function (s, canCreateDiscussions, negater) {
        return __awaiter(void 0, void 0, void 0, function () {
            var rpm_traffic;
            var e;
            return send(this, function (myPreferences) {
                var getPreferenceKey = test;
                switch (myPreferences[getPreferenceKey(304)]) {
                    case 0:
                        return getPreferenceKey(829) in navigator ? (rpm_traffic = [getPreferenceKey(690), 'audio/mp4; codecs="mp4a.40.2"', getPreferenceKey(777), getPreferenceKey(869), getPreferenceKey(332), getPreferenceKey(483), getPreferenceKey(686), getPreferenceKey(287), "video/webm; codecs=vp8"], [4, negater(Promise[getPreferenceKey(600)](rpm_traffic[getPreferenceKey(797)](function (mime) {
                            return __awaiter(void 0, void 0, void 0, function () {
                                return send(this, function (canCreateDiscussions) {
                                    var mode = test;
                                    return [2, navigator[mode(829)][mode(493)]({ type: mode(618), video: /^video/[mode(373)](mime) ? { contentType: mime, width: 1920, height: 1080, bitrate: 12e4, framerate: 60 } : void 0, audio: /^audio/[mode(373)](mime) ? { contentType: mime, channels: 2, bitrate: 3e5, samplerate: 5200 } : void 0 }).then(function (translates) {
                                        var _mode = mode;
                                        var strchoose = translates[_mode(796)];
                                        var strifoundthat = translates[_mode(223)];
                                        var updatedReverseItemControlData = translates.powerEfficient;
                                        var reverseItemData = {};
                                        return reverseItemData[_mode(773)] = mime, reverseItemData[_mode(237)] = updatedReverseItemControlData, reverseItemData[_mode(223)] = strifoundthat, reverseItemData[_mode(796)] = strchoose, reverseItemData;
                                    }).catch(function () {
                                        return null;
                                    })];
                                });
                            });
                        })), 100)]) : [2];
                    case 1:
                        return e = myPreferences[getPreferenceKey(689)](), s("d8c", e), [2];
                }
            });
        });
    });
    var rl = require(current(495), function (has, canCreateDiscussions, test) {
        return __awaiter(void 0, void 0, void 0, function () {
            var src;
            var receiver;
            var prefix;
            return send(this, function (overlaydata) {
                var data;
                var testType = test;
                switch (overlaydata[testType(304)]) {
                    case 0:
                        var content = {};
                        return content[testType(485)] = "application/javascript", testType(462) in window ? (done(e, "CSP"), data = new Blob([testType(363)], content), src = URL[testType(281)](data), receiver = new SharedWorker(src), URL[testType(247)](src), receiver[testType(316)][testType(190)](), [4, test(new Promise(function (saveNotifs, cb) {
                            var type = testType;
                            receiver.port[type(555)](type(457), function (data) {
                                var idx = type;
                                var notifications = data[idx(415)];
                                receiver.port[idx(485)]();
                                saveNotifs(notifications);
                            });
                            receiver[type(316)][type(555)](type(611), function (child) {
                                var toPythonCase = type;
                                var val = child[toPythonCase(415)];
                                receiver[toPythonCase(316)][toPythonCase(485)]();
                                cb(val);
                            });
                            receiver.addEventListener("error", function (event) {
                                event[type(201)]();
                                event.stopPropagation();
                                receiver.port.close();
                                cb(event.message);
                            });
                        }), 100)[testType(554)](function () {
                            receiver.port.close();
                        })]) : [2];
                    case 1:
                        return prefix = overlaydata.sent(), has(testType(357), prefix), [2];
                }
            });
        });
    });
    var text = require(current(236), function (h) {
        var d = current;
        var k = toString();
        var i = toString();
        var params = document;
        var map = params.body;
        var p = append(key || (key = toPrimitive([d(638), d(479), d(282), " .", d(370), " {\n          left: -9999px !important;\n          visibility: hidden !important;\n        }\n        #", " .", d(801), d(764), d(761)], [d(638), d(479), d(282), " .", " {\n          position: absolute !important;\n          height: auto !important;\n        }\n        #", d(694), " .", d(801), ";\n          font-size: 200px !important;\n        }\n      </style>\n      <svg>\n        <g>\n          ", "\n        </g>\n      </svg>\n    </div>\n  "])), i, i, i, k, i, i, k, mappings, urlParams[d(797)](function (mmCoreSplitViewBlock) {
            var className = d;
            return className(696)[className(450)](k, '">')[className(450)](mmCoreSplitViewBlock, className(194));
        }).join(""));
        map[d(744)](p);
        try {
            var color = function (base) {
                var p = d;
                var e = document[p(828)](base);
                var msg = [];
                var i = 0;
                var l = e[p(238)];
                for (; i < l; i = i + 1) {
                    var el = e[i];
                    var element = el.getExtentOfChar(0);
                    var artistTrack = [element.width, element[p(364)], el[p(460)](0, 10), el[p(757)]()];
                    msg[p(769)][p(740)](msg, artistTrack);
                }
                return msg;
            }(k);
            h(d(498), color);
        } finally {
            var item = params[d(687)](i);
            map[d(840)](item);
        }
    });
    var Date = hook("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwpmdW5jdGlvbiBfMHhkODBmKCl7dmFyIF8weDQzMGQwOT1bJ29kSzBvZG01bWd6eHZmREpBVycsJ210YTBvZHlXc2hqc3F2anQnLCdtSmJxdHU1TnNNRycsJ0J2UDFudzlLQnZMMHpLWHNEMkRxdGEnLCdCdzlLendYRkJ3NFZCdzlLendXVUFOblZCRycsJ0NodlpBYScsJ0VndkhEZVBVJywnbVpqcHplbnBCTXEnLCdvZHJYQnhMeHpLSycsJ0J4cmRtdW4yRU1YMnRoUDQnLCd5TmJNemdqTUJNVFF6d1hPQmc5U0FNdlNCMjlVend2T3pnZlN5MjFTQU1pJywnQkxQNW5nMTB5dkRWenRManEzRGVETnpoJywnQzNQYnZ3MWInLCduSnFZbXRxMG12alZ0MWpZQUcnLCd6TTlZcndmSkFhJywnbVppM25Kbk1DZUgydGdDJywnbXR1V290aTVuZmJzQ3V6YnlxJywnek1MU3p4bScsJ0EydjVDVycsJ210YVduZENabkp6a0IwSGl6aEcnLCdCd3YwQWc5SycsJ0MySFB6TnEnLCdCdlBIbTI5MHlNMTJzMHJ5RXU1UCcsJ3kyZjB5MkcnLCdCM3Jod000WURNNTJ0Z3ptcTFDJywnQzJYUHkydScsJ3l3akp6Z3ZNejJIUEFNVFNCdzVWQ2hmWUMzcjFETkQ0RXhQYnFLbmVydXpoc2VMa3MwWG50SzlxdXZqdHZmdnd2MUh6d0phWG1KbTBudHkzb2RLUmxaMCcsJ21KSzJDTmZYQXdYNicsJ0F3NUt6eEhwekcnLCd5MkhIQ0tmMCcsJ3kySFlCMjFMbHd2NERndlVDMkxWQkpPVmxXJywnbnZucnl2bk5CcScsJ0J2UDZtdXFYQUtmM3MxbScsJ0JndlV6M3JPJywnRGc5dERoalBCTUMnLCd5MjlVeTJmMCcsJ21KYmN3Tm5Md004Jywnb3R1Wm1kall3S0xxQmhpJywnemdUVUJnelRBTWZIQk16SUJnRE16Z3pMeU1IUEFNZlN6TTFPQndQUUFNOCcsJ3pOalZCdW5PeXhqZEIyckwnLCdCZ3pXek1qTnp3OVZ6Z3ZMQU0xUXpnWE1BTWpNQU1UTEJ3UFN5TVhQQU1DJ107XzB4ZDgwZj1mdW5jdGlvbigpe3JldHVybiBfMHg0MzBkMDk7fTtyZXR1cm4gXzB4ZDgwZigpO31mdW5jdGlvbiBfMHgyYTdkKF8weDUzNWFmNyxfMHgzZTAwMjcpe3ZhciBfMHhkODBmNjg9XzB4ZDgwZigpO3JldHVybiBfMHgyYTdkPWZ1bmN0aW9uKF8weDJhN2QyNCxfMHgyYzY1NTgpe18weDJhN2QyND1fMHgyYTdkMjQtMHgxZGY7dmFyIF8weDFiYzBiND1fMHhkODBmNjhbXzB4MmE3ZDI0XTtpZihfMHgyYTdkWydUbWdqbXcnXT09PXVuZGVmaW5lZCl7dmFyIF8weDI2NDk5ND1mdW5jdGlvbihfMHgyNDczYzIpe3ZhciBfMHgxYTY0Yzk9J2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVowMTIzNDU2Nzg5Ky89Jzt2YXIgXzB4MzI0MGE0PScnLF8weDU4ODliMT0nJztmb3IodmFyIF8weDFlNjAyZD0weDAsXzB4Mzc4Mzc4LF8weDEwNzU0MCxfMHg0YmFhMmQ9MHgwO18weDEwNzU0MD1fMHgyNDczYzJbJ2NoYXJBdCddKF8weDRiYWEyZCsrKTt+XzB4MTA3NTQwJiYoXzB4Mzc4Mzc4PV8weDFlNjAyZCUweDQ/XzB4Mzc4Mzc4KjB4NDArXzB4MTA3NTQwOl8weDEwNzU0MCxfMHgxZTYwMmQrKyUweDQpP18weDMyNDBhNCs9U3RyaW5nWydmcm9tQ2hhckNvZGUnXSgweGZmJl8weDM3ODM3OD4+KC0weDIqXzB4MWU2MDJkJjB4NikpOjB4MCl7XzB4MTA3NTQwPV8weDFhNjRjOVsnaW5kZXhPZiddKF8weDEwNzU0MCk7fWZvcih2YXIgXzB4NTQ3MzBhPTB4MCxfMHg1MzM4ZGM9XzB4MzI0MGE0WydsZW5ndGgnXTtfMHg1NDczMGE8XzB4NTMzOGRjO18weDU0NzMwYSsrKXtfMHg1ODg5YjErPSclJysoJzAwJytfMHgzMjQwYTRbJ2NoYXJDb2RlQXQnXShfMHg1NDczMGEpWyd0b1N0cmluZyddKDB4MTApKVsnc2xpY2UnXSgtMHgyKTt9cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChfMHg1ODg5YjEpO307XzB4MmE3ZFsnaW5RYWRrJ109XzB4MjY0OTk0LF8weDUzNWFmNz1hcmd1bWVudHMsXzB4MmE3ZFsnVG1nam13J109ISFbXTt9dmFyIF8weDVjNWQzMz1fMHhkODBmNjhbMHgwXSxfMHgxNWQ0NDI9XzB4MmE3ZDI0K18weDVjNWQzMyxfMHgxMjg0MTg9XzB4NTM1YWY3W18weDE1ZDQ0Ml07cmV0dXJuIV8weDEyODQxOD8oXzB4MWJjMGI0PV8weDJhN2RbJ2luUWFkayddKF8weDFiYzBiNCksXzB4NTM1YWY3W18weDE1ZDQ0Ml09XzB4MWJjMGI0KTpfMHgxYmMwYjQ9XzB4MTI4NDE4LF8weDFiYzBiNDt9LF8weDJhN2QoXzB4NTM1YWY3LF8weDNlMDAyNyk7fShmdW5jdGlvbihfMHg0MzdkOTAsXzB4M2E2MDZmKXt2YXIgXzB4NDJjNWM5PXtfMHgxMDI0Yjc6MHgxZTgsXzB4NTU5ZDcwOjB4MjAxLF8weDIxMzEwYzoweDFlNCxfMHg4OGUxODoweDFmMyxfMHgzZGY0MmE6MHgxZjJ9LF8weDQwYzIzOT1fMHgyYTdkLF8weDFlMzU0OT1fMHg0MzdkOTAoKTt3aGlsZSghIVtdKXt0cnl7dmFyIF8weDQxMzRjZj1wYXJzZUludChfMHg0MGMyMzkoXzB4NDJjNWM5Ll8weDEwMjRiNykpLzB4MSoocGFyc2VJbnQoXzB4NDBjMjM5KDB4MWVlKSkvMHgyKSstcGFyc2VJbnQoXzB4NDBjMjM5KF8weDQyYzVjOS5fMHg1NTlkNzApKS8weDMqKC1wYXJzZUludChfMHg0MGMyMzkoXzB4NDJjNWM5Ll8weDIxMzEwYykpLzB4NCkrLXBhcnNlSW50KF8weDQwYzIzOSgweDFmNCkpLzB4NSoocGFyc2VJbnQoXzB4NDBjMjM5KDB4MjAyKSkvMHg2KStwYXJzZUludChfMHg0MGMyMzkoXzB4NDJjNWM5Ll8weDg4ZTE4KSkvMHg3KihwYXJzZUludChfMHg0MGMyMzkoMHgxZjkpKS8weDgpKy1wYXJzZUludChfMHg0MGMyMzkoMHgyMDUpKS8weDkrcGFyc2VJbnQoXzB4NDBjMjM5KDB4MWVkKSkvMHhhKigtcGFyc2VJbnQoXzB4NDBjMjM5KF8weDQyYzVjOS5fMHgzZGY0MmEpKS8weGIpK3BhcnNlSW50KF8weDQwYzIzOSgweDFmYSkpLzB4YyoocGFyc2VJbnQoXzB4NDBjMjM5KDB4MWZmKSkvMHhkKTtpZihfMHg0MTM0Y2Y9PT1fMHgzYTYwNmYpYnJlYWs7ZWxzZSBfMHgxZTM1NDlbJ3B1c2gnXShfMHgxZTM1NDlbJ3NoaWZ0J10oKSk7fWNhdGNoKF8weDI2ZDc3ZCl7XzB4MWUzNTQ5WydwdXNoJ10oXzB4MWUzNTQ5WydzaGlmdCddKCkpO319fShfMHhkODBmLDB4YzZkOGUpLCEoZnVuY3Rpb24oKXsndXNlIHN0cmljdCc7dmFyIF8weDEyZTcwMz17XzB4MTU2MTNlOjB4MWY2LF8weDRlMjFlNDoweDFlZixfMHg4MGEwMDY6MHgxZmN9LF8weDE5ZjhhZT17XzB4MTQ4MjUyOjB4MjA3fSxfMHg0MzkyMjU9e18weDVjYWRiZDoweDFmNSxfMHg0NjYxZTE6MHgxZTksXzB4Mzc2NjcxOjB4MWZifTtmdW5jdGlvbiBfMHgxZTYwMmQoKXt2YXIgXzB4NTU4NTkwPV8weDJhN2QsXzB4MTA3NTQwPVsnbXRtWG90YkhBZUhxRUswJyxfMHg1NTg1OTAoMHgxZmQpLF8weDU1ODU5MCgweDFlMSksXzB4NTU4NTkwKF8weDQzOTIyNS5fMHg1Y2FkYmQpLF8weDU1ODU5MCgweDFkZiksXzB4NTU4NTkwKF8weDQzOTIyNS5fMHg0NjYxZTEpLCdtSmFXb3RDM21aRHlBMURkQ3hDJywnbkp1WG5KcTRud0g2QXZ6ZnJxJywnbmRLMm1kQzJBdmZnQmc1YicsXzB4NTU4NTkwKF8weDQzOTIyNS5fMHgzNzY2NzEpLCduSmI2RUt6ZXZ1eSddO3JldHVybihfMHgxZTYwMmQ9ZnVuY3Rpb24oKXtyZXR1cm4gXzB4MTA3NTQwO30pKCk7fWZ1bmN0aW9uIF8weDM3ODM3OChfMHg0YmFhMmQsXzB4NTQ3MzBhKXt2YXIgXzB4NTMzOGRjPV8weDFlNjAyZCgpO3JldHVybiBfMHgzNzgzNzg9ZnVuY3Rpb24oXzB4NGU1YTk5LF8weDMwMDY0YSl7dmFyIF8weDI2OWMzMD17XzB4MjRiZjkzOjB4MWYwLF8weDJhYTllMDoweDFlNSxfMHgzNzYxNWU6MHgxZWIsXzB4NGIwZjg1OjB4MWUyfSxfMHg1OThjM2Y9XzB4MmE3ZCxfMHg0MzUxMjE9XzB4NTMzOGRjW18weDRlNWE5OS09MHgxNTZdO3ZvaWQgMHgwPT09XzB4Mzc4Mzc4W18weDU5OGMzZigweDFmZSldJiYoXzB4Mzc4Mzc4W18weDU5OGMzZigweDFmOCldPWZ1bmN0aW9uKF8weDJkZDZjMSl7dmFyIF8weGIwMzg5Nz1fMHg1OThjM2Y7Zm9yKHZhciBfMHgxYTVkYTYsXzB4MTBlY2VhLF8weDUyZWU4Nz0nJyxfMHg0Y2NkOTA9JycsXzB4MzI2YTdkPTB4MCxfMHgyMjcyOWU9MHgwO18weDEwZWNlYT1fMHgyZGQ2YzFbXzB4YjAzODk3KDB4MWU2KV0oXzB4MjI3MjllKyspO35fMHgxMGVjZWEmJihfMHgxYTVkYTY9XzB4MzI2YTdkJTB4ND8weDQwKl8weDFhNWRhNitfMHgxMGVjZWE6XzB4MTBlY2VhLF8weDMyNmE3ZCsrJTB4NCk/XzB4NTJlZTg3Kz1TdHJpbmdbXzB4YjAzODk3KF8weDI2OWMzMC5fMHgyNGJmOTMpXSgweGZmJl8weDFhNWRhNj4+KC0weDIqXzB4MzI2YTdkJjB4NikpOjB4MClfMHgxMGVjZWE9XzB4YjAzODk3KDB4MWUzKVtfMHhiMDM4OTcoXzB4MjY5YzMwLl8weDJhYTllMCldKF8weDEwZWNlYSk7Zm9yKHZhciBfMHgyMjRiMDA9MHgwLF8weDU1MTU1ZT1fMHg1MmVlODdbXzB4YjAzODk3KDB4MWVhKV07XzB4MjI0YjAwPF8weDU1MTU1ZTtfMHgyMjRiMDArKylfMHg0Y2NkOTArPSclJysoJzAwJytfMHg1MmVlODdbJ2NoYXJDb2RlQXQnXShfMHgyMjRiMDApW18weGIwMzg5NyhfMHgyNjljMzAuXzB4Mzc2MTVlKV0oMHgxMCkpW18weGIwMzg5NyhfMHgyNjljMzAuXzB4NGIwZjg1KV0oLTB4Mik7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChfMHg0Y2NkOTApO30sXzB4NGJhYTJkPWFyZ3VtZW50cyxfMHgzNzgzNzhbXzB4NTk4YzNmKDB4MWZlKV09ITB4MCk7dmFyIF8weDU5NmIxYj1fMHg0ZTVhOTkrXzB4NTMzOGRjWzB4MF0sXzB4MTI1YjdhPV8weDRiYWEyZFtfMHg1OTZiMWJdO3JldHVybiBfMHgxMjViN2E/XzB4NDM1MTIxPV8weDEyNWI3YTooXzB4NDM1MTIxPV8weDM3ODM3OFtfMHg1OThjM2YoMHgxZjgpXShfMHg0MzUxMjEpLF8weDRiYWEyZFtfMHg1OTZiMWJdPV8weDQzNTEyMSksXzB4NDM1MTIxO30sXzB4Mzc4Mzc4KF8weDRiYWEyZCxfMHg1NDczMGEpO30hZnVuY3Rpb24oXzB4M2FkN2EwLF8weDQ3ZTc1Nil7dmFyIF8weDI3NGNhZT1fMHgyYTdkO2Zvcih2YXIgXzB4YmE5N2UyPTB4MTVmLF8weDVlNTNhYT0weDE1YSxfMHg1ODg4ZmE9MHgxNTksXzB4NWU3MTc1PTB4MTVlLF8weDkzOWMyYj1fMHgzNzgzNzgsXzB4NTRmMGUzPV8weDNhZDdhMCgpOzspdHJ5e2lmKDB4ZWM3MWM9PT1wYXJzZUludChfMHg5MzljMmIoXzB4YmE5N2UyKSkvMHgxKihwYXJzZUludChfMHg5MzljMmIoXzB4NWU1M2FhKSkvMHgyKSstcGFyc2VJbnQoXzB4OTM5YzJiKDB4MTYwKSkvMHgzKihwYXJzZUludChfMHg5MzljMmIoMHgxNTgpKS8weDQpK3BhcnNlSW50KF8weDkzOWMyYigweDE1NykpLzB4NSstcGFyc2VJbnQoXzB4OTM5YzJiKDB4MTVjKSkvMHg2K3BhcnNlSW50KF8weDkzOWMyYihfMHg1ODg4ZmEpKS8weDcqKHBhcnNlSW50KF8weDkzOWMyYihfMHg1ZTcxNzUpKS8weDgpKy1wYXJzZUludChfMHg5MzljMmIoMHgxNWQpKS8weDkqKHBhcnNlSW50KF8weDkzOWMyYigweDE1YikpLzB4YSkrcGFyc2VJbnQoXzB4OTM5YzJiKDB4MTU2KSkvMHhiKWJyZWFrO18weDU0ZjBlM1sncHVzaCddKF8weDU0ZjBlM1snc2hpZnQnXSgpKTt9Y2F0Y2goXzB4NWM5M2QxKXtfMHg1NGYwZTNbXzB4Mjc0Y2FlKDB4MWY3KV0oXzB4NTRmMGUzW18weDI3NGNhZShfMHgxOWY4YWUuXzB4MTQ4MjUyKV0oKSk7fX0oXzB4MWU2MDJkKSwoZnVuY3Rpb24oKXt2YXIgXzB4M2I4OTFhPXtfMHg0Mzk1MmI6MHgyMDYsXzB4NDRlMzBlOjB4MWVjLF8weDRhZjYxMzoweDFlMH0sXzB4MmIyN2I2PV8weDJhN2QsXzB4NDgyNzU2PXt9O18weDQ4Mjc1NlsnaWQnXT1fMHgyYjI3YjYoMHgxZjEpLF8weDQ4Mjc1NlsnZmlsZXMnXT1bXzB4MmIyN2I2KF8weDEyZTcwMy5fMHgxNTYxM2UpXTt2YXIgXzB4NjFhNTY1PXt9O18weDYxYTU2NVsnaWQnXT1fMHgyYjI3YjYoXzB4MTJlNzAzLl8weDRlMjFlNCksXzB4NjFhNTY1WydmaWxlcyddPVsndXRpbHMuanMnXTt2YXIgXzB4ZTU3NzkyPXt9O18weGU1Nzc5MlsnaWQnXT1fMHgyYjI3YjYoXzB4MTJlNzAzLl8weDgwYTAwNiksXzB4ZTU3NzkyWydmaWxlcyddPVsnbW9kZWxzL25tcy5vcnQnXTt2YXIgXzB4MmYzYmM1LF8weGIxY2E3Nz0oKF8weDJmM2JjNT17fSlbMHgwXT1fMHg0ODI3NTYsXzB4MmYzYmM1WzB4MV09XzB4NjFhNTY1LF8weDJmM2JjNVsweDJdPV8weGU1Nzc5MixfMHgyZjNiYzUpO3RyeXt2YXIgXzB4M2RiMTI0PVtdLF8weDFiYThjYT1bXTtyZXR1cm4gT2JqZWN0W18weDJiMjdiNigweDIwNCldKF8weGIxY2E3NylbXzB4MmIyN2I2KDB4MjAwKV0oZnVuY3Rpb24oXzB4MzNjZGEzKXt2YXIgXzB4NTU2YTU2PXtfMHg0ZWRjNTQ6MHgxZjd9LF8weDE3ZmJmMT1fMHgyYjI3YjYsXzB4NGM1MGZlPV8weGIxY2E3N1tfMHgzM2NkYTNdLF8weDE0OTViOT1fMHg0YzUwZmVbJ2lkJ107XzB4NGM1MGZlW18weDE3ZmJmMSgweDIwMyldW18weDE3ZmJmMSgweDIwMCldKGZ1bmN0aW9uKF8weDQzZTU4Nil7dmFyIF8weDNhOTc2MT1fMHgxN2ZiZjEsXzB4NDNmZTRmPXt9O18weDQzZmU0ZltfMHgzYTk3NjEoXzB4M2I4OTFhLl8weDQzOTUyYildPSdIRUFEJzt2YXIgXzB4MzdiNTBjPWZldGNoKF8weDNhOTc2MSgweDFlNylbJ2NvbmNhdCddKF8weDE0OTViOSwnLycpW18weDNhOTc2MShfMHgzYjg5MWEuXzB4NDRlMzBlKV0oXzB4NDNlNTg2KSxfMHg0M2ZlNGYpWyd0aGVuJ10oZnVuY3Rpb24oKXt2YXIgXzB4M2U4NGQ0PV8weDNhOTc2MTtfMHgzZGIxMjRbXzB4M2U4NGQ0KF8weDU1NmE1Ni5fMHg0ZWRjNTQpXShOdW1iZXIoXzB4MzNjZGEzKSk7fSlbXzB4M2E5NzYxKF8weDNiODkxYS5fMHg0YWY2MTMpXShmdW5jdGlvbigpe30pO18weDFiYThjYVtfMHgzYTk3NjEoMHgxZjcpXShfMHgzN2I1MGMpO30pO30pLFByb21pc2VbJ2FsbCddKF8weDFiYThjYSlbJ3RoZW4nXShmdW5jdGlvbigpe3JldHVybiBwb3N0TWVzc2FnZShfMHgzZGIxMjQpO30pO31jYXRjaChfMHg0MjAwNzQpe3JldHVybiBwb3N0TWVzc2FnZShbXSk7fX0oKSk7fSgpKSk7Cgo=", null, false);
    var table = require(current(790), function (write) {
        return __awaiter(void 0, void 0, void 0, function () {
            var num;
            return send(this, function (primaryReplicas) {
                var stringify = test;
                switch (primaryReplicas[stringify(304)]) {
                    case 0:
                        return avoidLocations && stringify(399) in window && stringify(486) in window ? (done(e, stringify(172)), [4, map(new Date)]) : [2];
                    case 1:
                        return (num = primaryReplicas[stringify(689)]()).length ? (write(stringify(640), num), [2]) : [2];
                }
            });
        });
    });
    var wait = require(current(347), function (createUntriagedCard) {
        var p = current;
        var element = document[p(497)]("canvas");
        var gl = element[p(701)](p(771)) || element[p(701)](p(837));
        if (gl) {
            !function (gl) {
                var sequence = p;
                if (gl) {
                    gl[sequence(581)](0, 0, 0, 1);
                    gl[sequence(669)](gl[sequence(558)]);
                    var idxBuffer = gl[sequence(410)]();
                    gl.bindBuffer(gl.ARRAY_BUFFER, idxBuffer);
                    var values = new Float32Array([-0.9, -0.7, 0, 0.8, -0.7, 0, 0, 0.5, 0]);
                    gl[sequence(573)](gl[sequence(730)], values, gl[sequence(543)]);
                    var shaderProgram = gl.createProgram();
                    var type = gl[sequence(807)](gl[sequence(572)]);
                    if (type && shaderProgram) {
                        gl.shaderSource(type, "\n        attribute vec2 attrVertex;\n        varying vec2 varyinTexCoordinate;\n        uniform vec2 uniformOffset;\n        void main(){\n            varyinTexCoordinate = attrVertex + uniformOffset;\n            gl_Position = vec4(attrVertex, 0, 1);\n        }\n    ");
                        gl[sequence(292)](type);
                        gl[sequence(400)](shaderProgram, type);
                        var shader = gl[sequence(807)](gl.FRAGMENT_SHADER);
                        if (shader) {
                            gl[sequence(673)](shader, sequence(398));
                            gl.compileShader(shader);
                            gl[sequence(400)](shaderProgram, shader);
                            gl.linkProgram(shaderProgram);
                            gl[sequence(804)](shaderProgram);
                            type = gl.getAttribLocation(shaderProgram, "attrVertex");
                            var errorMsg = gl[sequence(408)](shaderProgram, sequence(351));
                            gl[sequence(472)](0);
                            gl[sequence(663)](type, 3, gl[sequence(464)], false, 0, 0);
                            gl[sequence(286)](errorMsg, 1, 1);
                            gl[sequence(566)](gl[sequence(723)], 0, 3);
                        }
                    }
                }
            }(gl);
            var untriaged_card = element[p(857)]();
            var width = gl[p(795)] / 15;
            var height = gl[p(632)] / 6;
            var color = new Uint8Array(width * height * 4);
            gl.readPixels(0, 0, width, height, gl[p(227)], gl[p(381)], color);
            createUntriagedCard(p(397), [untriaged_card, debug([], color, true)]);
        }
    });
    var no_close_quote = require(current(864), function (fn, canCreateDiscussions, e) {
        return __awaiter(void 0, void 0, void 0, function () {
            var expectsLength;
            return send(this, function (types) {
                var type = test;
                switch (types[type(304)]) {
                    case 0:
                        return [4, start(e)];
                    case 1:
                        return (expectsLength = types[type(689)]()) ? (args[type(550)], [2]) : [2];
                }
            });
        });
    });
    var suggest_values;
    var all = require(current(260), function (resolve, canCreateDiscussions, where) {
        return __awaiter(void 0, void 0, void 0, function () {
            var cuddlefish_id;
            return send(this, function (types) {
                var type = test;
                switch (types[type(304)]) {
                    case 0:
                        return [4, save(where)];
                    case 1:
                        return (cuddlefish_id = types[type(689)]()) ? (resolve(type(779), cuddlefish_id), [2]) : [2];
                }
            });
        });
    });
    var h = hook(current(214), null, false);
    var lower_latin = require("552", function (fn) {
        return __awaiter(void 0, void 0, void 0, function () {
            var warnings;
            var _ref;
            var i;
            var o;
            var mValue;
            var u;
            var v;
            var points;
            var a;
            var b;
            var data;
            var match;
            var name;
            var vec;
            var module;
            return send(this, function (pSample) {
                var params = test;
                switch (pSample.label) {
                    case 0:
                        return done(e, params(172)), [4, map(new h)];
                    case 1:
                        return (warnings = pSample[params(689)]()) ? (i = (_ref = warnings || [])[0], o = _ref[1], mValue = o[0], u = o[1], v = o[2], points = _ref[2], a = points[0], b = points[1], data = _ref[3], match = _ref[4], name = _ref[5], vec = [u, mValue, navigator[params(833)], v], args[params(667)], args[params(738)], null === a && null === b || args[params(812)], data && args[params(865)], match && (module = match[0], args[params(564)], args[params(421)]), name && args[params(763)], [2]) : [2];
                }
            });
        });
    });
    var files = ((suggest_values = {})[0] = [EffectChain, GenerateGif, mobileInit, footerAccordion, insertSVGTemplateAssign, jsonfn, TagHourlyStat, insertSVGTemplate, CheckDailyStat, toggleFieldMask, renderWaveLane, renderAssign, ThoughtCollection, renderArcs, requestHelpers, CheckHourlyStat, frontEndModuleConfig, toggleFormInput, genWaveBrick, genBrick], suggest_values[1] = [once, baseline, square, lr, rl, table, no_close_quote, all, lower_latin, alphabetic, text_after_edge, text_before_edge, inherit, text, wait], suggest_values);
    var args = new Array(32).fill(void 0);
    args.push(void 0, null, true, false);
    var i = args.length;
    var bg = 0;
    var trimed = null;
    var parser = new ("undefined" == typeof TextEncoder ? (0, module.require)("util").TextEncoder : TextEncoder)("utf-8");
    var googleImageSize = "function" == typeof parser.encodeInto ? function (fixture, comment) {
        return parser.encodeInto(fixture, comment);
    } : function (file, bitmap) {
        var data = parser.encode(file);
        return bitmap.set(data), { read: file.length, written: data.length };
    };
    var positions = null;
    var decoder = new ("undefined" == typeof TextDecoder ? (0, module.require)("util").TextDecoder : TextDecoder)("utf-8", { ignoreBOM: true, fatal: true });
    decoder.decode();
    var largeArray = null;
    var out32 = null;
    let cause = 0;
    let newData = 0;
    var yI = Object.freeze({
        __proto__: null, inject: function (options, content) {
            console.log("inject", content, options);
            cause = options;
            newData = content;
            return;
            try {
                let data = JSON.parse(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(content, content + options)));
                console.log(data);
                let url = JSON.stringify({ proof_spec: { difficulty: data.proof_spec.difficulty, fingerprint_type: data.proof_spec.fingerprint_type, _type: data.proof_spec._type, data: data.proof_spec.data, _location: data.proof_spec._location, timeout_value: data.proof_spec.timeout_value }, components: { version: "1.39.0/bf600bd", navigator: { user_agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36", language: "fr-FR", languages: ["fr-FR", "fr", "en-US", "en"], platform: "Win32", max_touch_points: 0, webdriver: false, notification_query_permission: null, plugins_undefined: false }, screen: { color_depth: 24, pixel_depth: 24, width: 3440, height: 1440, avail_width: 3440, avail_height: 1392 }, device_pixel_ratio: 1, has_session_storage: true, has_local_storage: true, has_indexed_db: true, web_gl_hash: "-1", canvas_hash: "8890951801382608581", has_touch: false, notification_api_permission: "Denied", chrome: true, to_string_length: 33, err_firefox: null, r_bot_score: 0, r_bot_score_suspicious_keys: [], r_bot_score_2: 0, audio_hash: "-1", extensions: [false], parent_win_hash: "14607125553301422025", webrtc_hash: "-1", performance_hash: "2372271609278715010", unique_keys: "", inv_unique_keys: "", features: { performance_entries: true, web_audio: true, web_rtc: true, canvas_2d: true, fetch: true } }, fingerprint_events: data.fingerprint_events, messages: null, stack_data: null, fingerprint_suspicious_events: [], stamp: data.stamp, errs: { list: [] }, perf: [[1, 8], [2, 51], [3, 0]] });
                console.log(url);
                console.log(data.stamp);
                const input = encode(url);
                cause = options;
                newData = content;
            } catch (WARN_NO_READ) {
                console.log(WARN_NO_READ);
            }
        }, getPtr: function () {
            console.log("get jptr", newData);
            return newData;
        }, getLen: function () {
            console.log("get jlen", cause);
            return cause;
        }, __wbg_availHeight_5a38eff40ca35e9b: function () {
            return dispatch(function (incident) {
                return args[incident].availHeight;
            }, arguments);
        }, __wbg_availWidth_52ce20c430bfe00d: function () {
            return dispatch(function (incident) {
                return args[incident].availWidth;
            }, arguments);
        }, __wbg_beginPath_790cd831253a2637: function (incident) {
            args[incident].beginPath();
        }, __wbg_buffer_eb2155f17856c20b: function (data) {
            return $(args[data].buffer);
        }, __wbg_call_4438b4bab9ab5268: function () {
            return dispatch(function (url, d, record) {
                return $(args[url].call(args[d], args[record]));
            }, arguments);
        }, __wbg_call_9698e9b9c4668ae0: function () {
            return dispatch(function (url, d) {
                return $(args[url].call(args[d]));
            }, arguments);
        }, __wbg_call_f325895c60cbae4d: function () {
            return dispatch(function (url, exception, record, args) {
                return $(args[url].call(args[exception], args[record], args[args]));
            }, arguments);
        }, __wbg_colorDepth_2dc95ec7a52b996f: function () {
            return dispatch(function (incident) {
                return args[incident].colorDepth;
            }, arguments);
        }, __wbg_construct_8fcba71a7eab4ec1: function () {
            return dispatch(function (src, incident) {
                return $(Reflect.construct(args[src], args[incident]));
            }, arguments);
        }, __wbg_createElement_1959ce882284e011: function () {
            return dispatch(function (node, name, t) {
                return $(args[node].createElement(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(name, name + t))));
            }, arguments);
        }, __wbg_crypto_b8c92eaac23d0d80: function (incident) {
            return $(args[incident].crypto);
        }, __wbg_data_94533a8c9648f5a1: function (url) {
            return $(args[url].data);
        }, __wbg_defineProperty_c324da7a0b2d7d18: function () {
            return dispatch(function (name, key, val) {
                return Reflect.defineProperty(args[name], args[key], args[val]);
            }, arguments);
        }, __wbg_documentElement_3932e3004b15af7f: function (data) {
            var target = args[data].documentElement;
            return null == target ? 0 : $(target);
        }, __wbg_document_6d5890b86bbf5b96: function (key) {
            var selector = args[key].document;
            return null == selector ? 0 : $(selector);
        }, __wbg_errors_cf2f48b8817772d8: function (plaintextBuffer, password) {
            var item = args[password].errors;
            var B = null == item ? 0 : callback(item, that.__wbindgen_malloc);
            var ndo = bg;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[plaintextBuffer / 4 + 1] = ndo;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[plaintextBuffer / 4 + 0] = B;
        }, __wbg_fillStyle_3d31d929bbe8a2f5: function (font) {
            return $(args[font].fillStyle);
        }, __wbg_fillText_fdd6d14e79f143f3: function () {
            return dispatch(function (incident, date, j, a, avg_y) {
                args[incident].fillText(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(date, date + j)), a, avg_y);
            }, arguments);
        }, __wbg_getContext_c91489f5e0f738d8: function () {
            return dispatch(function (name, next, type) {
                var selector = args[name].getContext(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(next, next + type)));
                return null == selector ? 0 : $(selector);
            }, arguments);
        }, __wbg_getElementById_f059b7401a23ee7c: function (root, a, s) {
            var selector = args[root].getElementById(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(a, a + s)));
            return null == selector ? 0 : $(selector);
        }, __wbg_getEntriesByType_505aabfe19f2425b: function (url, next, id) {
            return $(args[url].getEntriesByType(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(next, next + id))));
        }, __wbg_getOwnPropertyDescriptor_24aa7e693dd9e2da: function () {
            return dispatch(function (target, incident) {
                return $(Reflect.getOwnPropertyDescriptor(args[target], args[incident]));
            }, arguments);
        }, __wbg_getRandomValues_dd27e6b0652b3236: function (incident) {
            return $(args[incident].getRandomValues);
        }, __wbg_getRandomValues_e57c9b75ddead065: function (text, attributes) {
            args[text].getRandomValues(args[attributes]);
        }, __wbg_get_75d36ef8b2e1d918: function () {
            return dispatch(function (res, name) {
                return $(Reflect.get(args[res], args[name]));
            }, arguments);
        }, __wbg_get_a4f61a2fb16987bc: function (selector, convertToImages) {
            return $(args[selector][convertToImages >>> 0]);
        }, __wbg_get_e7022d8fa5682598: function (l, n, messageId) {
            var selector = args[l][decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(n, n + messageId))];
            return null == selector ? 0 : $(selector);
        }, __wbg_globalThis_787cfd4f25a35141: function () {
            return dispatch(function () {
                return $(globalThis.globalThis);
            }, arguments);
        }, __wbg_global_af2eb7b1369372ed: function () {
            return dispatch(function () {
                return $(global.global);
            }, arguments);
        }, __wbg_hasAttribute_c831cb47fd0a093a: function (node, name, missingParams) {
            return args[node].hasAttribute(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(name, name + missingParams)));
        }, __wbg_has_d87073f723676bd5: function () {
            return dispatch(function (text, key) {
                return Reflect.has(args[text], args[key]);
            }, arguments);
        }, __wbg_height_ec1147d0b6442a92: function () {
            return dispatch(function (data) {
                return args[data].height;
            }, arguments);
        }, __wbg_indexedDB_acff057640f0088f: function () {
            return dispatch(function (incident) {
                var selector = args[incident].indexedDB;
                return null == selector ? 0 : $(selector);
            }, arguments);
        }, __wbg_initiatorType_b076fd08af0e9a48: function (dragListGroup, event) {
            var isWindows = check(args[event].initiatorType, that.__wbindgen_malloc, that.__wbindgen_realloc);
            var ndo = bg;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[dragListGroup / 4 + 1] = ndo;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[dragListGroup / 4 + 0] = isWindows;
        }, __wbg_instanceof_CanvasRenderingContext2d_cf60543e642e5a93: function (incident) {
            return args[incident] instanceof CanvasRenderingContext2D;
        }, __wbg_instanceof_Error_ac0db369f0645066: function (args) {
            return args[args] instanceof Error;
        }, __wbg_instanceof_HtmlCanvasElement_a2acc34cc0a30700: function (incident) {
            return args[incident] instanceof HTMLCanvasElement;
        }, __wbg_instanceof_PerformanceResourceTiming_08731e9d5b731334: function (incident) {
            return args[incident] instanceof PerformanceResourceTiming;
        }, __wbg_instanceof_Uint8Array_2ef9531f7c172ac9: function (src) {
            return args[src] instanceof Uint8Array;
        }, __wbg_instanceof_Window_b99429ec408dcb8d: function (incident) {
            return args[incident] instanceof Window;
        }, __wbg_keys_8f13118772d7b32c: function (metric) {
            return $(Object.keys(args[metric]));
        }, __wbg_language_f050e03d2e52b258: function (apmString, key) {
            var value = args[key].language;
            var B = null == value ? 0 : check(value, that.__wbindgen_malloc, that.__wbindgen_realloc);
            var ndo = bg;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[apmString / 4 + 1] = ndo;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[apmString / 4 + 0] = B;
        }, __wbg_length_0b194abde938d0c6: function (url) {
            return args[url].length;
        }, __wbg_length_f86925e8c69110ea: function (url) {
            return args[url].length;
        }, __wbg_loadTimes_4e24ad5f8e3d2884: function () {
            return dispatch(function () {
                window.chrome.loadTimes();
            }, arguments);
        }, __wbg_localStorage_fbbeeb3a3dfd5be3: function () {
            return dispatch(function (incident) {
                var selector = args[incident].localStorage;
                return null == selector ? 0 : $(selector);
            }, arguments);
        }, __wbg_messages_44a8919b69fcd299: function (textPromise, text) {
            var event = args[text].messages;
            var B = null == event ? 0 : callback(event, that.__wbindgen_malloc);
            var ndo = bg;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[textPromise / 4 + 1] = ndo;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[textPromise / 4 + 0] = B;
        }, __wbg_msCrypto_9ad6677321a08dd8: function (incident) {
            return $(args[incident].msCrypto);
        }, __wbg_name_0b33b0c5c78f20db: function (proxy, text) {
            var isWindows = check(args[text].name, that.__wbindgen_malloc, that.__wbindgen_realloc);
            var ndo = bg;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[proxy / 4 + 1] = ndo;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[proxy / 4 + 0] = isWindows;
        }, __wbg_navigator_bc0b459c4b6dbe01: function (incident) {
            return $(args[incident].navigator);
        }, __wbg_new_ae366b99da42660b: function (p1, p2) {
            try {
                var A = { a: p1, b: p2 };
                var delayedPromise = new Promise(function (___j, dragTd) {
                    var undefined = A.a;
                    A.a = 0;
                    try {
                        return function (key, totalAggregates, i, td) {
                            that.wasm_bindgen__convert__closures__invoke2_mut__h676e1c56b2ccb8ff(key, totalAggregates, $(i), $(td));
                        }(undefined, A.b, ___j, dragTd);
                    } finally {
                        A.a = undefined;
                    }
                });
                return $(delayedPromise);
            } finally {
                A.a = A.b = 0;
            }
        }, __wbg_new_d4a8512c351e5299: function () {
            return dispatch(function (canvas, key) {
                return $(new Proxy(args[canvas], args[key]));
            }, arguments);
        }, __wbg_new_ff8b26f7b2d7e2fb: function (data) {
            return $(new Uint8Array(args[data]));
        }, __wbg_new_ffb8fbe0ad5d4d2f: function () {
            return $(new Object);
        }, __wbg_newnoargs_68424965d85fcb08: function (b, s) {
            return $(new Function(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(b, b + s))));
        }, __wbg_newwithlength_a49b32b2030b93c3: function (canCreateDiscussions) {
            return $(new Uint8Array(canCreateDiscussions >>> 0));
        }, __wbg_now_0f688205547f47a2: function () {
            return Date.now();
        }, __wbg_origin_566065d052266ba1: function (preventPushState, id) {
            var isWindows = check(args[id].origin, that.__wbindgen_malloc, that.__wbindgen_realloc);
            var ndo = bg;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[preventPushState / 4 + 1] = ndo;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[preventPushState / 4 + 0] = isWindows;
        }, __wbg_ownKeys_df13b91d66111202: function () {
            return dispatch(function (target) {
                return $(Reflect.ownKeys(args[target]));
            }, arguments);
        }, __wbg_performance_b21afb8a0a7e3e9a: function (state) {
            var selector = args[state].performance;
            return null == selector ? 0 : $(selector);
        }, __wbg_pixelDepth_c6ae77d65aa9cf0a: function () {
            return dispatch(function (incident) {
                return args[incident].pixelDepth;
            }, arguments);
        }, __wbg_platform_1e434a0f557294e0: function () {
            return dispatch(function (canCreateDiscussions, name) {
                var isWindows = check(args[name].platform, that.__wbindgen_malloc, that.__wbindgen_realloc);
                var ndo = bg;
                (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[canCreateDiscussions / 4 + 1] = ndo;
                (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[canCreateDiscussions / 4 + 0] = isWindows;
            }, arguments);
        }, __wbg_plugins_320bace199ef9abf: function () {
            return dispatch(function (config) {
                return $(args[config].plugins);
            }, arguments);
        }, __wbg_randomFillSync_d2ba53160aec6aba: function (text, keyword, hideIfEmpty) {
            var bufptr;
            var datalen;
            args[text].randomFillSync((bufptr = keyword, datalen = hideIfEmpty, (null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(bufptr / 1, bufptr / 1 + datalen)));
        }, __wbg_require_f5521a5b85ad2542: function (opts, key, pt) {
            return $(args[opts].require(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(key, key + pt))));
        }, __wbg_resolve_84f06d050082a771: function (record) {
            return $(Promise.resolve(args[record]));
        }, __wbg_screen_563041f109418bcc: function () {
            return dispatch(function (settings) {
                return $(args[settings].screen);
            }, arguments);
        }, __wbg_self_3df7c33e222cd53b: function () {
            return dispatch(function () {
                return $(self.self);
            }, arguments);
        }, __wbg_self_86b4b13392c7af56: function () {
            return dispatch(function () {
                return $(self.self);
            }, arguments);
        }, __wbg_sessionStorage_305af71f8a4df982: function () {
            return dispatch(function (incident) {
                var selector = args[incident].sessionStorage;
                return null == selector ? 0 : $(selector);
            }, arguments);
        }, __wbg_set_67cdd115b9cb141f: function (app, v, needcopy) {
            args[app].set(args[v], needcopy >>> 0);
        }, __wbg_set_c7fc8735d70ceb11: function () {
            return dispatch(function (src, record, val) {
                return Reflect.set(args[src], args[record], args[val]);
            }, arguments);
        }, __wbg_slice_b091b14e7766c812: function (data, linkedEntities, force) {
            return $(args[data].slice(linkedEntities >>> 0, force >>> 0));
        }, __wbg_static_accessor_MODULE_452b4680e8614c81: function () {
            return $(module);
        }, __wbg_stringify_bc3c2afd0dba3362: function () {
            return dispatch(function (url) {
                return $(JSON.stringify(args[url]));
            }, arguments);
        }, __wbg_stroke_cd9ee78b96e12894: function (elements) {
            args[elements].stroke();
        }, __wbg_subarray_1bb315d30e0c968c: function (s, data, urlPartConfig) {
            return $(args[s].subarray(data >>> 0, urlPartConfig >>> 0));
        }, __wbg_then_c919ca41618a24c2: function (t, err, args) {
            return $(args[t].then(args[err], args[args]));
        }, __wbg_then_fd35af33296a58d7: function (url, result) {
            return $(args[url].then(args[result]));
        }, __wbg_toDataURL_fe2ebea8b463e5de: function () {
            return dispatch(function (canCreateDiscussions, data) {
                var isWindows = check(args[data].toDataURL(), that.__wbindgen_malloc, that.__wbindgen_realloc);
                var ndo = bg;
                (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[canCreateDiscussions / 4 + 1] = ndo;
                (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[canCreateDiscussions / 4 + 0] = isWindows;
            }, arguments);
        }, __wbg_toString_b2da48ab6ca0c44d: function (url) {
            return $(args[url].toString());
        }, __wbg_toString_f0c7462ac29ba762: function () {
            return dispatch(function (canCreateDiscussions) {
                var isWindows = check(eval.toString(), that.__wbindgen_malloc, that.__wbindgen_realloc);
                var ndo = bg;
                (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[canCreateDiscussions / 4 + 1] = ndo;
                (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[canCreateDiscussions / 4 + 0] = isWindows;
            }, arguments);
        }, __wbg_userAgent_9206fc4778d7ddbf: function () {
            return dispatch(function (canCreateDiscussions, incident) {
                var isWindows = check(args[incident].userAgent, that.__wbindgen_malloc, that.__wbindgen_realloc);
                var ndo = bg;
                (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[canCreateDiscussions / 4 + 1] = ndo;
                (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[canCreateDiscussions / 4 + 0] = isWindows;
            }, arguments);
        }, __wbg_width_85d397e0585a43f5: function () {
            return dispatch(function (url) {
                return args[url].width;
            }, arguments);
        }, __wbg_window_0f90182e6c405ff2: function () {
            return dispatch(function () {
                return $(window.window);
            }, arguments);
        }, __wbindgen_cb_drop: function (address) {
            var result = expect(address).original;
            return 1 == result.cnt-- && (result.a = 0, true);
        }, __wbindgen_closure_wrapper153: function (view, left, src) {
            return $(get(view, left, 4, options));
        }, __wbindgen_closure_wrapper155: function (view, left, src) {
            return $(get(view, left, 4, index));
        }, __wbindgen_closure_wrapper373: function (view, left, src) {
            return $(get(view, left, 72, self));
        }, __wbindgen_debug_string: function (zazloptimizer, app) {
            var isWindows = check(transform(args[app]), that.__wbindgen_malloc, that.__wbindgen_realloc);
            var ndo = bg;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[zazloptimizer / 4 + 1] = ndo;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[zazloptimizer / 4 + 0] = isWindows;
        }, __wbindgen_is_function: function (incident) {
            return "function" == typeof args[incident];
        }, __wbindgen_is_object: function (url) {
            var a = args[url];
            return "object" == typeof a && null !== a;
        }, __wbindgen_is_undefined: function (incident) {
            return void 0 === args[incident];
        }, __wbindgen_json_parse: function (f, data) {
            return $(JSON.parse(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(f, f + data))));
        }, __wbindgen_json_serialize: function (dragListGroup, event) {
            var val = args[event];
            var isWindows = check(JSON.stringify(void 0 === val ? null : val), that.__wbindgen_malloc, that.__wbindgen_realloc);
            var ndo = bg;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[dragListGroup / 4 + 1] = ndo;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[dragListGroup / 4 + 0] = isWindows;
        }, __wbindgen_jsval_eq: function (friend, args) {
            return args[friend] === args[args];
        }, __wbindgen_memory: function () {
            return $(that.memory);
        }, __wbindgen_number_get: function (dragListGroup, event) {
            var options = args[event];
            var o = "number" == typeof options ? options : void 0;
            (null !== largeArray && largeArray.buffer === that.memory.buffer || (largeArray = new Float64Array(that.memory.buffer)), largeArray)[dragListGroup / 8 + 1] = null == o ? 0 : o;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[dragListGroup / 4 + 0] = !(null == o);
        }, __wbindgen_object_clone_ref: function (record) {
            return $(args[record]);
        }, __wbindgen_object_drop_ref: function (channelSpark) {
            expect(channelSpark);
        }, __wbindgen_rethrow: function (channelSpark) {
            throw expect(channelSpark);
        }, __wbindgen_string_get: function (collectorId, params) {
            var item = args[params];
            var value = "string" == typeof item ? item : void 0;
            var Q = null == value ? 0 : check(value, that.__wbindgen_malloc, that.__wbindgen_realloc);
            var ndo = bg;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[collectorId / 4 + 1] = ndo;
            (null !== positions && positions.buffer === that.memory.buffer || (positions = new Int32Array(that.memory.buffer)), positions)[collectorId / 4 + 0] = Q;
        }, __wbindgen_string_new: function (r, g) {
            return $(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(r, r + g)));
        }, __wbindgen_throw: function (args, lvl) {
            throw new Error(decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(args, args + lvl)));
        }, client: func
    });
    var testSuitePromise;
    var importRegexps;
    var sI = false;
    var exerslideConfig = (testSuitePromise = function (addedRenderer, a, s, importObj) {
        function render(template, data, type) {
            var parser = type ? WebAssembly.instantiateStreaming : WebAssembly.instantiate;
            var format = type ? WebAssembly.compileStreaming : WebAssembly.compile;
            return data ? parser(template, data) : decoder.decode((null !== trimed && trimed.buffer === that.memory.buffer || (trimed = new Uint8Array(that.memory.buffer)), trimed).subarray(template, template + num));
        }
        var buffer = null;
        if (a) {
            return render(fetch(a), importObj, true);
        }
        var decoded = globalThis.atob(s);
        var rawLength = decoded.length;
        buffer = new Uint8Array(new ArrayBuffer(rawLength));
        var i = 0;
        for (; i < rawLength; i++) {
            buffer[i] = decoded.charCodeAt(i);
        }
        if (addedRenderer) {
            var module = new WebAssembly.Module(buffer);
            return importObj ? new WebAssembly.Instance(module, importObj) : module;
        }
        return render(buffer, importObj, false);
    }(0, null, CUSTOMWASM, importRegexps), new Promise(function (saveNotifs, obtainGETData) {
        testSuitePromise.then(function (raw_len) {
            return function (bytes, importObject) {
                return new Promise(function (cb, saveNotifs) {
                    WebAssembly.instantiate(bytes, importObject).then(function (value) {
                        if (value instanceof WebAssembly.Instance) {
                            cb({ instance: value, module: bytes });
                        } else {
                            cb(value);
                        }
                    }).catch(function (notifications) {
                        return saveNotifs(notifications);
                    });
                });
            }(raw_len, { "./client_bg.js": yI });
        }).then(function (invocation) {
            var args = invocation.instance;
            that = args.exports;
            saveNotifs();
        }).catch(function (val) {
            return obtainGETData(val);
        });
    }));
    var JI = function (cb) {
        return function (newServerInfo, fee) {
            var request = function (clusterShardData) {
                try {
                    var parts = clusterShardData.split(".");
                    return { header: JSON.parse(atob(parts[0])), payload: JSON.parse(atob(parts[1])), signature: atob(parts[2].replace(/_/g, "/").replace(/-/g, "+")), raw: { header: parts[0], payload: parts[1], signature: parts[2] } };
                } catch (A) {
                    throw new Error("Token is invalid.");
                }
            }(newServerInfo);
            var addresses = request.payload;
            var body = Math.round(Date.now() / 1e3);
            return cb(JSON.stringify(addresses), body, fee);
        };
    }(function (url, data, options) {
        return new Promise(function (when, saveNotifs) {
            if (sI) {
                when(func(url, data, options, read, foo));
            } else {
                exerslideConfig.then(function () {
                    sI = true;
                    when(func(url, data, options, read, foo));
                }).catch(function (notifications) {
                    return saveNotifs(notifications);
                });
            }
        });
    });
    return JI;
}();
