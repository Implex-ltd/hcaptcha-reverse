const { JSDOM, ResourceLoader } = require("jsdom");
const fs = require('fs');

const hswBindScript = fs.readFileSync(__dirname + "/hsw_bind.js", "utf-8");

const { window } = new JSDOM(``, {
    runScripts: "dangerously",
});

window.eval(hswBindScript);

/*
(async () => {


    const durations = [];

    for (let i = 0; i < 30; i++) {
        const startTime = performance.now();
        const result = await window.hsw("eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJmIjowLCJzIjoyLCJ0IjoidyIsImQiOiJndjlVdDFSdFVFNHV6QXhmQ2cyWFh3NG5VbnpJU1Zrck5iUmFYbVVjYXJGNk9BZnMvY1JFdW9VcnlTMzVZTHVZSEltWXRScldGcUJOSXFtd3hrRklWT09nTlBkQk8xSWF0WXUxdEkyRU9QQmhLZzYwSzhpRmJWcWY4L0M4RU4ySmx2eEhWeUdnRTltQStaVDFzdVRRU3FzZ1ordG9oaDVsSFJINVJRN3BHWVlWRnlJK3lOczN1SWFaYWc9PTIrUUVjYy9YaUdCaDRqODAiLCJsIjoiaHR0cHM6Ly9uZXdhc3NldHMuaGNhcHRjaGEuY29tL2MvYmY2MDBiZCIsImkiOiJzaGEyNTYtTmxDelZxSlVqYnFaWUxoYXRJKzZUVStDVzBOb3BUbVh6bGdmL21oMjk1Zz0iLCJlIjoxNjk2MTg2MTQzLCJuIjoiaHN3IiwiYyI6MTAwMH0.i80vHmX_YpeKWXPgO5DIHV9OoRDPlbu5pVHI6cLH45aH6_Op3prmNiZy0M2zVd359YhUugc_jgV4COR6Q50BM76YH26fgHmw-pCvyhuDYPSy8iH1Ku8yIutleM9pu0oujjZD7jHWuSrH9CwiraBEkvPx3uD-FShX7P4iPbwoLmM", "eyJjb21wb25lbnRzIjogeyJ2ZXJzaW9uIjogIjEuMzkuMC9iZjYwMGJkIiwgIm5hdmlnYXRvciI6IHsidXNlcl9hZ2VudCI6ICJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuMC4wIFNhZmFyaS81MzcuMzYiLCAibGFuZ3VhZ2UiOiAiZnItRlIiLCAibGFuZ3VhZ2VzIjogWyJmci1GUiIsICJmciIsICJlbi1VUyIsICJlbiJdLCAicGxhdGZvcm0iOiAiV2luMzIiLCAibWF4X3RvdWNoX3BvaW50cyI6IDAsICJ3ZWJkcml2ZXIiOiBmYWxzZSwgIm5vdGlmaWNhdGlvbl9xdWVyeV9wZXJtaXNzaW9uIjogbnVsbCwgInBsdWdpbnNfdW5kZWZpbmVkIjogZmFsc2V9LCAic2NyZWVuIjogeyJjb2xvcl9kZXB0aCI6IDI0LCAicGl4ZWxfZGVwdGgiOiAyNCwgIndpZHRoIjogMjU5OCwgImhlaWdodCI6IDE5NDgsICJhdmFpbF93aWR0aCI6IDI1OTgsICJhdmFpbF9oZWlnaHQiOiAxOTQ4fSwgImRldmljZV9waXhlbF9yYXRpbyI6IDEsICJoYXNfc2Vzc2lvbl9zdG9yYWdlIjogdHJ1ZSwgImhhc19sb2NhbF9zdG9yYWdlIjogdHJ1ZSwgImhhc19pbmRleGVkX2RiIjogdHJ1ZSwgIndlYl9nbF9oYXNoIjogIi0xIiwgImNhbnZhc19oYXNoIjogIjMxNzQ4OTAyMzg5NTA5NzUyNjEiLCAiaGFzX3RvdWNoIjogZmFsc2UsICJub3RpZmljYXRpb25fYXBpX3Blcm1pc3Npb24iOiAiRGVmYXVsdCIsICJjaHJvbWUiOiB0cnVlLCAidG9fc3RyaW5nX2xlbmd0aCI6IDMzLCAiZXJyX2ZpcmVmb3giOiBudWxsLCAicl9ib3Rfc2NvcmUiOiAwLCAicl9ib3Rfc2NvcmVfc3VzcGljaW91c19rZXlzIjogW10sICJyX2JvdF9zY29yZV8yIjogMCwgImF1ZGlvX2hhc2giOiAiLTEiLCAiZXh0ZW5zaW9ucyI6IFtmYWxzZV0sICJwYXJlbnRfd2luX2hhc2giOiAiMTc0Mjc0OTIyNzg3MDc4Nzg3OTMiLCAid2VicnRjX2hhc2giOiAiLTEiLCAicGVyZm9ybWFuY2VfaGFzaCI6ICIxMTQ1NDg0MTc3NDM4NTgwMzI0NSIsICJ1bmlxdWVfa2V5cyI6ICJfLHJlZ2VuZXJhdG9yUnVudGltZSxfX3NlbnRyeV9pbnN0cnVtZW50YXRpb25faGFuZGxlcnNfXywxLEdMT0JBTF9FTlYsX19CSUxMSU5HX1NUQU5EQUxPTkVfXyx3ZWJwYWNrQ2h1bmtkaXNjb3JkX2FwcCxfX2xvY2FsZURhdGFfXyxoY2FwdGNoYSwwLF9fT1ZFUkxBWV9fLERpc2NvcmRFcnJvcnMsY2xlYXJJbW1lZGlhdGUsZ3JlY2FwdGNoYSxEaXNjb3JkU2VudHJ5LF9fdGltaW5nRnVuY3Rpb24saGNhcHRjaGFPbkxvYWQsSW50bFBvbHlmaWxsLF9fU0VOVFJZX18sX19ESVNDT1JEX1dJTkRPV19JRCxzZXRJbW1lZGlhdGUsX19TRUNSRVRfRU1PVElPTl9fLHBsYXRmb3JtIiwgImludl91bmlxdWVfa2V5cyI6ICJsb2NhbFN0b3JhZ2UsX3NoYXJlZExpYnMsaHN3LF9fd2RhdGEsc2Vzc2lvblN0b3JhZ2UiLCAiZmVhdHVyZXMiOiB7InBlcmZvcm1hbmNlX2VudHJpZXMiOiB0cnVlLCAid2ViX2F1ZGlvIjogdHJ1ZSwgIndlYl9ydGMiOiB0cnVlLCAiY2FudmFzXzJkIjogdHJ1ZSwgImZldGNoIjogdHJ1ZX19LCAiZmluZ2VycHJpbnRfZXZlbnRzIjogW1szLCAiMjI5LjI5OTk5OTk5NzAxOTc3Il0sIFsxOTAyLCAiNTciXSwgWzE5MDEsICIxNTMwNzM0NTc5MDEyNTAwMzU3NiJdLCBbMTEwMSwgIjE1MDA0NDQ4OTkzOTgyODQyNDgyIl0sIFsxMTAzLCAiNDkzMjM4MzIxMTQ5NzM2MDUwNyJdLCBbMTEwNSwgIjE3MTU3NDc2MjQxMDIxNjk0MzQ2Il0sIFsxMTA3LCAiW1sxMjQsWzEyNCwxMjQsMTI0LDI1NSwxMjQsMTI0LDEyNCwyNTUsMTI0LDEyNCwxMjQsMjU1LDEyNCwxMjQsMTI0LDI1NV1dLFtbMTEsMCwwLDk1Ljk2ODc1LDE1LDQsOTYuNzY1NjI1XSxbWzEyLDAsLTEsMTEzLjEyNSwxNyw0LDExM10sWzExLDAsMCwxMTEsMTIsNCwxMTFdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMiwwLDAsMTA5LjY0MDYyNSwxNCwzLDExMC4xOTUzMTI1XV1dXSJdLCBbMjAxLCAiMTMxMjI0MjI4Nzg5MTgxMTMwMzQiXSwgWzM0MDEsICIxMDEwMzExNjQ4NjY0MDI2ODQ4NiJdLCBbMzQwMywgIltbW1wiaHR0cHM6Ly9uZXdhc3NldHMuaGNhcHRjaGEuY29tL2NhcHRjaGEvdjEvMGM4NDRmMy9oY2FwdGNoYS5qc1wiLDAsNV1dLFtbXCIqXCIsODQsOV1dXSJdLCBbODAzLCAiWzEsNCw1LDcsOSwxMiwyMCwyMSwyNCwyNSwyOV0iXSwgWzYwNCwgIltcIjUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuMC4wIFNhZmFyaS81MzcuMzZcIixcIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC4wLjAgU2FmYXJpLzUzNy4zNlwiLDgsMTYsXCJmci1CRVwiLFtcImZyLUJFXCIsXCJmclwiLFwiZW4tVVNcIixcImVuXCJdLFwiV2luMzJcIixudWxsLFtcIkdvb2dsZSBDaHJvbWUgMTE2XCIsXCJOb3Q7QT1CcmFuZCA4XCIsXCJDaHJvbWl1bSAxMTZcIl0sZmFsc2UsXCJXaW5kb3dzXCIsMiw1LHRydWUsZmFsc2UsMTAwLGZhbHNlLGZhbHNlLHRydWUsXCJbb2JqZWN0IEtleWJvYXJkXVwiLGZhbHNlLGZhbHNlXSJdLCBbMjgwMSwgIjQ2MzEyMjkwODgwNzI1ODQyMTciXSwgWzI4MDUsICJbWzI3NzExNDMxNDQ1MywyNzcxMTQzMTQ0NjAsMjc3MTE0MzE0NDUxLDM1NzExNDMxNDQ1NiwyNzcxMTQzMTQ0NTIsNTU0MjI4NjI4ODk4LDU3MTE0MzE0NDQzLDcxNzExNDMxNDM3MTM5MSw1NTQyMjg2Mjg4OTcsMjc3MTE0MzE0NDU2LDExMDg0NTcyNTc4NjIsMjc3MTE0MzE0NDUwLDU1NDIyODYyODkxOSwyNzcxMTQzMTQ0NjAsMjc3MTE0MzE0NDUxXSxmYWxzZV0iXSwgWzEwNywgIlsyNTk4LDE5NDgsMjU5OCwxOTQ4LDI0LDI0LGZhbHNlLDAsMSwxMjk2LDgwOCx0cnVlLHRydWUsdHJ1ZSxmYWxzZV0iXSwgWzMwMiwgIjEyODE4NjAzODI5NTYyOTc2NDQ3Il0sIFsxNDAxLCAiXCJFdXJvcGUvUGFyaXNcIiJdLCBbMTQwMiwgIltcIkV1cm9wZS9QYXJpc1wiLC02MCwtNjAsLTMyMDM2NDc3NjEwMDAsXCJoZXVyZSBkXHUyMDE5XHUwMGU5dFx1MDBlOSBkXHUyMDE5RXVyb3BlIGNlbnRyYWxlXCIsXCJmci1GUlwiXSJdLCBbMTQwMywgIltcIktNbEtsQWhKblk9NEVaaGh4ZVVaXCIsXCI5XCIsXCJhXCIsXCJYQ09DVlVRWFRYUEFLXCJdIl0sIFszNTA0LCAiMTY5NjE0MTM5Njc5MS43Il0sIFszNTAxLCAiW1tcIm5hdmlnYXRpb246bmV3YXNzZXRzLmhjYXB0Y2hhLmNvbVwiLDE0LjA5OTk5OTk5OTYyNzQ3MSwyOC41XSxbXCJzY3JpcHQ6bmV3YXNzZXRzLmhjYXB0Y2hhLmNvbVwiLDE0LjQ1MDAwMDAwMDE4NjI2NSwzMC42MDAwMDAwMDA1NTg3OTRdLFtcInhtbGh0dHByZXF1ZXN0OmhjYXB0Y2hhLmNvbVwiLDAsMzIuMjAwMDAwMDAwMTg2MjY1XV0iXSwgWzM1MDMsICIxNi4zOTk5OTk5OTg1MDk4ODQiXSwgWzM1MDIsICIyMi40NTAwMDAwMDI5ODAyMzIiXSwgWzM1MDUsICJbMC4wOTk5OTk5OTQwMzk1MzU1MiwyN10iXSwgWzQwMSwgIjE1ODkyNDUxMzQ1NjA2OTg4NDUiXSwgWzQwMiwgIjEwNjciXSwgWzQwNywgIltbXCJsb2FkVGltZXNcIixcImNzaVwiLFwiYXBwXCJdLDM1LDM0LG51bGwsZmFsc2UsZmFsc2UsdHJ1ZSwzNyx0cnVlLHRydWUsdHJ1ZSx0cnVlLHRydWUsW1wiUmF2ZW5cIixcIl9zaGFyZWRMaWJzXCIsXCJoc3dcIixcIl9fd2RhdGFcIl0sW1tcImdldEVsZW1lbnRzQnlDbGFzc05hbWVcIixbXV0sW1wiZ2V0RWxlbWVudEJ5SWRcIixbXV0sW1wicXVlcnlTZWxlY3RvclwiLFtdXSxbXCJxdWVyeVNlbGVjdG9yQWxsXCIsW11dXSxbXSx0cnVlXSJdLCBbNDEyLCAiMTU1ODQ2NjA0MzMwOTM4NjIwMzIiXSwgWzI0MDIsICJbXCJHb29nbGUgSW5jLiAoTlZJRElBKVwiLFwiQU5HTEUgKE5WSURJQSwgTlZJRElBIEdlRm9yY2UgUlRYIDMwNjAgRGlyZWN0M0QxMSB2c181XzAgcHNfNV8wLCBEM0QxMSlcIl0iXSwgWzI0MjAsICJbW1wiSlJVc2JMQ215VXNzdW5NbHdpVEpIOTJCTnhXem80a1ZcIixcIjFhXCIsXCI0XCIsXCJGSVNHR0lOSUdNTEJaXCJdLFtcImhtQVdJVEpUZmtUSjVrUldJVEpvTXZRT2xrVGdOa01sYWpNbHkwVU1mbHNKTlRzWEVUS1dJVEoxaDN4MThmTWRKVEpXSVRKaGgzeDE4Zk1XSVRKSjUyRHFod2V6a1VNWGFqTWxNZE0yYWRNWVVZdlpORU1ZVUNUcXRFRDNcIixcIjVcIixcIjUxXCIsXCJGUFhBU1lHRFBQQVdWXCJdXSJdLCBbMjQwMywgIltcIkdvb2dsZSBJbmMuIChOVklESUEpXCIsXCJBTkdMRSAoTlZJRElBLCBOVklESUEgR2VGb3JjZSBSVFggMzA2MCBEaXJlY3QzRDExIHZzXzVfMCBwc181XzAsIEQzRDExKVwiXSJdLCBbMjQwMSwgIjM5ODIwMzYwMjQ4MTM4NDc2ODAiXSwgWzI0MDgsICJ0cnVlIl0sIFsyNDA3LCAiMTMxNzc2MDcxOTExOTI2NTI2ODUiXSwgWzI0MDksICJbMjE0NzQ4MzY0NywyMTQ3NDgzNjQ3LDQyOTQ5NjcyOTRdIl0sIFsyNDEwLCAiWzE2LDEwMjQsNDA5Niw3LDEyLDEyMCxbMjMsMTI3LDEyN11dIl0sIFsyNDExLCAiWzMyNzY3LDMyNzY3LDE2Mzg0LDgsOCw4XSJdLCBbMjQxMiwgIlsxLDEwMjQsMSwxLDRdIl0sIFsyNDEzLCAiWzIxNDc0ODM2NDcsMjE0NzQ4MzY0NywyMTQ3NDgzNjQ3LDIxNDc0ODM2NDddIl0sIFsyNDE0LCAiWzE2Mzg0LDMyLDE2Mzg0LDIwNDgsMiwyMDQ4XSJdLCBbMjQxNSwgIls0LDEyMCw0XSJdLCBbMjQxNiwgIlsyNCwyNCw2NTUzNiwyMTI5ODgsMjAwNzA0XSJdLCBbMjQxNywgIlsxNiw0MDk1LDMwLDE2LDE2MzgwLDEyMCwxMiwxMjAsWzIzLDEyNywxMjddXSJdLCBbMzgwMCwgIlwiRXJyb3I6IENTUFwiIl0sIFsxMzAyLCAiWzAsMSwyLDMsNF0iXSwgWzE5MDQsICJbMCwxMTQwOSwxMTQwOV0iXSwgWzkwMSwgIjEzNTg2OTA1NTg3NjY3ODUzOCJdLCBbOTA1LCAiW1t0cnVlLFwiZW4tVVNcIix0cnVlLFwiTWljcm9zb2Z0IERhdmlkIC0gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcIixcIk1pY3Jvc29mdCBEYXZpZCAtIEVuZ2xpc2ggKFVuaXRlZCBTdGF0ZXMpXCJdLFtmYWxzZSxcImVuLVVTXCIsdHJ1ZSxcIk1pY3Jvc29mdCBNYXJrIC0gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcIixcIk1pY3Jvc29mdCBNYXJrIC0gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcIl0sW2ZhbHNlLFwiZW4tVVNcIix0cnVlLFwiTWljcm9zb2Z0IFppcmEgLSBFbmdsaXNoIChVbml0ZWQgU3RhdGVzKVwiLFwiTWljcm9zb2Z0IFppcmEgLSBFbmdsaXNoIChVbml0ZWQgU3RhdGVzKVwiXV0iXSwgWzMyMTAsICJbMTgwODAwNzAyNiwxODA4MDA3MDI2LG51bGwsbnVsbCw0Mjk0NzA1MTUyLHRydWUsdHJ1ZSx0cnVlLG51bGxdIl0sIFszMjExLCAiW1wiQXpuV0lqbj09UU00QWRPV1wiLFwiMVwiLFwiOVwiLFwiV0VHR0hERkVQQlhOTFwiXSJdLCAiW1wiV2luZG93c1wiLFwiMTAuMC4wXCIsbnVsbCxcIjY0XCIsXCJ4ODZcIixcIjExNi4wLjAuMFwiXSIsIFsyMDAxLCAiNjIxNDAzODMyMjQ4Njk1OTA0NyJdLCBbMjAwMiwgIltcImRlZmF1bHRcIixcInByb21wdFwiXSJdLCBbMCwgIjIxNyJdXSwgImZpbmdlcnByaW50X3N1c3BpY2lvdXNfZXZlbnRzIjogW10sICJwZXJmIjogW1sxLCAyMF0sIFsyLCAyMzBdLCBbMywgMF1dfQ==");
        const endTime = performance.now();
        const duration = endTime - startTime;

        durations.push(duration);

        console.log(`(took ${(duration).toFixed(2)} ms, chars: ${result.length})`);
    }

    const totalDuration = durations.reduce((acc, curr) => acc + curr, 0);
    const averageDuration = totalDuration / durations.length;

    console.log(`Average duration: ${(averageDuration).toFixed(2)} ms`);
})();*/

(async () => {
    const startTime = performance.now();
    let result = await window.hsw("IiI =.eyJzIjowLCJmIjowLCJjIjowfQ ==.", "eyJjb21wb25lbnRzIjogeyJ2ZXJzaW9uIjogIjEuMzkuMC9iZjYwMGJkIiwgIm5hdmlnYXRvciI6IHsidXNlcl9hZ2VudCI6ICJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuMC4wIFNhZmFyaS81MzcuMzYiLCAibGFuZ3VhZ2UiOiAiZnItRlIiLCAibGFuZ3VhZ2VzIjogWyJmci1GUiIsICJmciIsICJlbi1VUyIsICJlbiJdLCAicGxhdGZvcm0iOiAiV2luMzIiLCAibWF4X3RvdWNoX3BvaW50cyI6IDAsICJ3ZWJkcml2ZXIiOiBmYWxzZSwgIm5vdGlmaWNhdGlvbl9xdWVyeV9wZXJtaXNzaW9uIjogbnVsbCwgInBsdWdpbnNfdW5kZWZpbmVkIjogZmFsc2V9LCAic2NyZWVuIjogeyJjb2xvcl9kZXB0aCI6IDI0LCAicGl4ZWxfZGVwdGgiOiAyNCwgIndpZHRoIjogMjU5OCwgImhlaWdodCI6IDE5NDgsICJhdmFpbF93aWR0aCI6IDI1OTgsICJhdmFpbF9oZWlnaHQiOiAxOTQ4fSwgImRldmljZV9waXhlbF9yYXRpbyI6IDEsICJoYXNfc2Vzc2lvbl9zdG9yYWdlIjogdHJ1ZSwgImhhc19sb2NhbF9zdG9yYWdlIjogdHJ1ZSwgImhhc19pbmRleGVkX2RiIjogdHJ1ZSwgIndlYl9nbF9oYXNoIjogIi0xIiwgImNhbnZhc19oYXNoIjogIjMxNzQ4OTAyMzg5NTA5NzUyNjEiLCAiaGFzX3RvdWNoIjogZmFsc2UsICJub3RpZmljYXRpb25fYXBpX3Blcm1pc3Npb24iOiAiRGVmYXVsdCIsICJjaHJvbWUiOiB0cnVlLCAidG9fc3RyaW5nX2xlbmd0aCI6IDMzLCAiZXJyX2ZpcmVmb3giOiBudWxsLCAicl9ib3Rfc2NvcmUiOiAwLCAicl9ib3Rfc2NvcmVfc3VzcGljaW91c19rZXlzIjogW10sICJyX2JvdF9zY29yZV8yIjogMCwgImF1ZGlvX2hhc2giOiAiLTEiLCAiZXh0ZW5zaW9ucyI6IFtmYWxzZV0sICJwYXJlbnRfd2luX2hhc2giOiAiMTc0Mjc0OTIyNzg3MDc4Nzg3OTMiLCAid2VicnRjX2hhc2giOiAiLTEiLCAicGVyZm9ybWFuY2VfaGFzaCI6ICIxMTQ1NDg0MTc3NDM4NTgwMzI0NSIsICJ1bmlxdWVfa2V5cyI6ICJfLHJlZ2VuZXJhdG9yUnVudGltZSxfX3NlbnRyeV9pbnN0cnVtZW50YXRpb25faGFuZGxlcnNfXywxLEdMT0JBTF9FTlYsX19CSUxMSU5HX1NUQU5EQUxPTkVfXyx3ZWJwYWNrQ2h1bmtkaXNjb3JkX2FwcCxfX2xvY2FsZURhdGFfXyxoY2FwdGNoYSwwLF9fT1ZFUkxBWV9fLERpc2NvcmRFcnJvcnMsY2xlYXJJbW1lZGlhdGUsZ3JlY2FwdGNoYSxEaXNjb3JkU2VudHJ5LF9fdGltaW5nRnVuY3Rpb24saGNhcHRjaGFPbkxvYWQsSW50bFBvbHlmaWxsLF9fU0VOVFJZX18sX19ESVNDT1JEX1dJTkRPV19JRCxzZXRJbW1lZGlhdGUsX19TRUNSRVRfRU1PVElPTl9fLHBsYXRmb3JtIiwgImludl91bmlxdWVfa2V5cyI6ICJsb2NhbFN0b3JhZ2UsX3NoYXJlZExpYnMsaHN3LF9fd2RhdGEsc2Vzc2lvblN0b3JhZ2UiLCAiZmVhdHVyZXMiOiB7InBlcmZvcm1hbmNlX2VudHJpZXMiOiB0cnVlLCAid2ViX2F1ZGlvIjogdHJ1ZSwgIndlYl9ydGMiOiB0cnVlLCAiY2FudmFzXzJkIjogdHJ1ZSwgImZldGNoIjogdHJ1ZX19LCAiZmluZ2VycHJpbnRfZXZlbnRzIjogW1szLCAiMjI5LjI5OTk5OTk5NzAxOTc3Il0sIFsxOTAyLCAiNTciXSwgWzE5MDEsICIxNTMwNzM0NTc5MDEyNTAwMzU3NiJdLCBbMTEwMSwgIjE1MDA0NDQ4OTkzOTgyODQyNDgyIl0sIFsxMTAzLCAiNDkzMjM4MzIxMTQ5NzM2MDUwNyJdLCBbMTEwNSwgIjE3MTU3NDc2MjQxMDIxNjk0MzQ2Il0sIFsxMTA3LCAiW1sxMjQsWzEyNCwxMjQsMTI0LDI1NSwxMjQsMTI0LDEyNCwyNTUsMTI0LDEyNCwxMjQsMjU1LDEyNCwxMjQsMTI0LDI1NV1dLFtbMTEsMCwwLDk1Ljk2ODc1LDE1LDQsOTYuNzY1NjI1XSxbWzEyLDAsLTEsMTEzLjEyNSwxNyw0LDExM10sWzExLDAsMCwxMTEsMTIsNCwxMTFdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMiwwLDAsMTA5LjY0MDYyNSwxNCwzLDExMC4xOTUzMTI1XV1dXSJdLCBbMjAxLCAiMTMxMjI0MjI4Nzg5MTgxMTMwMzQiXSwgWzM0MDEsICIxMDEwMzExNjQ4NjY0MDI2ODQ4NiJdLCBbMzQwMywgIltbW1wiaHR0cHM6Ly9uZXdhc3NldHMuaGNhcHRjaGEuY29tL2NhcHRjaGEvdjEvMGM4NDRmMy9oY2FwdGNoYS5qc1wiLDAsNV1dLFtbXCIqXCIsODQsOV1dXSJdLCBbODAzLCAiWzEsNCw1LDcsOSwxMiwyMCwyMSwyNCwyNSwyOV0iXSwgWzYwNCwgIltcIjUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuMC4wIFNhZmFyaS81MzcuMzZcIixcIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC4wLjAgU2FmYXJpLzUzNy4zNlwiLDgsMTYsXCJmci1CRVwiLFtcImZyLUJFXCIsXCJmclwiLFwiZW4tVVNcIixcImVuXCJdLFwiV2luMzJcIixudWxsLFtcIkdvb2dsZSBDaHJvbWUgMTE2XCIsXCJOb3Q7QT1CcmFuZCA4XCIsXCJDaHJvbWl1bSAxMTZcIl0sZmFsc2UsXCJXaW5kb3dzXCIsMiw1LHRydWUsZmFsc2UsMTAwLGZhbHNlLGZhbHNlLHRydWUsXCJbb2JqZWN0IEtleWJvYXJkXVwiLGZhbHNlLGZhbHNlXSJdLCBbMjgwMSwgIjQ2MzEyMjkwODgwNzI1ODQyMTciXSwgWzI4MDUsICJbWzI3NzExNDMxNDQ1MywyNzcxMTQzMTQ0NjAsMjc3MTE0MzE0NDUxLDM1NzExNDMxNDQ1NiwyNzcxMTQzMTQ0NTIsNTU0MjI4NjI4ODk4LDU3MTE0MzE0NDQzLDcxNzExNDMxNDM3MTM5MSw1NTQyMjg2Mjg4OTcsMjc3MTE0MzE0NDU2LDExMDg0NTcyNTc4NjIsMjc3MTE0MzE0NDUwLDU1NDIyODYyODkxOSwyNzcxMTQzMTQ0NjAsMjc3MTE0MzE0NDUxXSxmYWxzZV0iXSwgWzEwNywgIlsyNTk4LDE5NDgsMjU5OCwxOTQ4LDI0LDI0LGZhbHNlLDAsMSwxMjk2LDgwOCx0cnVlLHRydWUsdHJ1ZSxmYWxzZV0iXSwgWzMwMiwgIjEyODE4NjAzODI5NTYyOTc2NDQ3Il0sIFsxNDAxLCAiXCJFdXJvcGUvUGFyaXNcIiJdLCBbMTQwMiwgIltcIkV1cm9wZS9QYXJpc1wiLC02MCwtNjAsLTMyMDM2NDc3NjEwMDAsXCJoZXVyZSBkXHUyMDE5XHUwMGU5dFx1MDBlOSBkXHUyMDE5RXVyb3BlIGNlbnRyYWxlXCIsXCJmci1GUlwiXSJdLCBbMTQwMywgIltcIktNbEtsQWhKblk9NEVaaGh4ZVVaXCIsXCI5XCIsXCJhXCIsXCJYQ09DVlVRWFRYUEFLXCJdIl0sIFszNTA0LCAiMTY5NjE0MTM5Njc5MS43Il0sIFszNTAxLCAiW1tcIm5hdmlnYXRpb246bmV3YXNzZXRzLmhjYXB0Y2hhLmNvbVwiLDE0LjA5OTk5OTk5OTYyNzQ3MSwyOC41XSxbXCJzY3JpcHQ6bmV3YXNzZXRzLmhjYXB0Y2hhLmNvbVwiLDE0LjQ1MDAwMDAwMDE4NjI2NSwzMC42MDAwMDAwMDA1NTg3OTRdLFtcInhtbGh0dHByZXF1ZXN0OmhjYXB0Y2hhLmNvbVwiLDAsMzIuMjAwMDAwMDAwMTg2MjY1XV0iXSwgWzM1MDMsICIxNi4zOTk5OTk5OTg1MDk4ODQiXSwgWzM1MDIsICIyMi40NTAwMDAwMDI5ODAyMzIiXSwgWzM1MDUsICJbMC4wOTk5OTk5OTQwMzk1MzU1MiwyN10iXSwgWzQwMSwgIjE1ODkyNDUxMzQ1NjA2OTg4NDUiXSwgWzQwMiwgIjEwNjciXSwgWzQwNywgIltbXCJsb2FkVGltZXNcIixcImNzaVwiLFwiYXBwXCJdLDM1LDM0LG51bGwsZmFsc2UsZmFsc2UsdHJ1ZSwzNyx0cnVlLHRydWUsdHJ1ZSx0cnVlLHRydWUsW1wiUmF2ZW5cIixcIl9zaGFyZWRMaWJzXCIsXCJoc3dcIixcIl9fd2RhdGFcIl0sW1tcImdldEVsZW1lbnRzQnlDbGFzc05hbWVcIixbXV0sW1wiZ2V0RWxlbWVudEJ5SWRcIixbXV0sW1wicXVlcnlTZWxlY3RvclwiLFtdXSxbXCJxdWVyeVNlbGVjdG9yQWxsXCIsW11dXSxbXSx0cnVlXSJdLCBbNDEyLCAiMTU1ODQ2NjA0MzMwOTM4NjIwMzIiXSwgWzI0MDIsICJbXCJHb29nbGUgSW5jLiAoTlZJRElBKVwiLFwiQU5HTEUgKE5WSURJQSwgTlZJRElBIEdlRm9yY2UgUlRYIDMwNjAgRGlyZWN0M0QxMSB2c181XzAgcHNfNV8wLCBEM0QxMSlcIl0iXSwgWzI0MjAsICJbW1wiSlJVc2JMQ215VXNzdW5NbHdpVEpIOTJCTnhXem80a1ZcIixcIjFhXCIsXCI0XCIsXCJGSVNHR0lOSUdNTEJaXCJdLFtcImhtQVdJVEpUZmtUSjVrUldJVEpvTXZRT2xrVGdOa01sYWpNbHkwVU1mbHNKTlRzWEVUS1dJVEoxaDN4MThmTWRKVEpXSVRKaGgzeDE4Zk1XSVRKSjUyRHFod2V6a1VNWGFqTWxNZE0yYWRNWVVZdlpORU1ZVUNUcXRFRDNcIixcIjVcIixcIjUxXCIsXCJGUFhBU1lHRFBQQVdWXCJdXSJdLCBbMjQwMywgIltcIkdvb2dsZSBJbmMuIChOVklESUEpXCIsXCJBTkdMRSAoTlZJRElBLCBOVklESUEgR2VGb3JjZSBSVFggMzA2MCBEaXJlY3QzRDExIHZzXzVfMCBwc181XzAsIEQzRDExKVwiXSJdLCBbMjQwMSwgIjM5ODIwMzYwMjQ4MTM4NDc2ODAiXSwgWzI0MDgsICJ0cnVlIl0sIFsyNDA3LCAiMTMxNzc2MDcxOTExOTI2NTI2ODUiXSwgWzI0MDksICJbMjE0NzQ4MzY0NywyMTQ3NDgzNjQ3LDQyOTQ5NjcyOTRdIl0sIFsyNDEwLCAiWzE2LDEwMjQsNDA5Niw3LDEyLDEyMCxbMjMsMTI3LDEyN11dIl0sIFsyNDExLCAiWzMyNzY3LDMyNzY3LDE2Mzg0LDgsOCw4XSJdLCBbMjQxMiwgIlsxLDEwMjQsMSwxLDRdIl0sIFsyNDEzLCAiWzIxNDc0ODM2NDcsMjE0NzQ4MzY0NywyMTQ3NDgzNjQ3LDIxNDc0ODM2NDddIl0sIFsyNDE0LCAiWzE2Mzg0LDMyLDE2Mzg0LDIwNDgsMiwyMDQ4XSJdLCBbMjQxNSwgIls0LDEyMCw0XSJdLCBbMjQxNiwgIlsyNCwyNCw2NTUzNiwyMTI5ODgsMjAwNzA0XSJdLCBbMjQxNywgIlsxNiw0MDk1LDMwLDE2LDE2MzgwLDEyMCwxMiwxMjAsWzIzLDEyNywxMjddXSJdLCBbMzgwMCwgIlwiRXJyb3I6IENTUFwiIl0sIFsxMzAyLCAiWzAsMSwyLDMsNF0iXSwgWzE5MDQsICJbMCwxMTQwOSwxMTQwOV0iXSwgWzkwMSwgIjEzNTg2OTA1NTg3NjY3ODUzOCJdLCBbOTA1LCAiW1t0cnVlLFwiZW4tVVNcIix0cnVlLFwiTWljcm9zb2Z0IERhdmlkIC0gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcIixcIk1pY3Jvc29mdCBEYXZpZCAtIEVuZ2xpc2ggKFVuaXRlZCBTdGF0ZXMpXCJdLFtmYWxzZSxcImVuLVVTXCIsdHJ1ZSxcIk1pY3Jvc29mdCBNYXJrIC0gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcIixcIk1pY3Jvc29mdCBNYXJrIC0gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcIl0sW2ZhbHNlLFwiZW4tVVNcIix0cnVlLFwiTWljcm9zb2Z0IFppcmEgLSBFbmdsaXNoIChVbml0ZWQgU3RhdGVzKVwiLFwiTWljcm9zb2Z0IFppcmEgLSBFbmdsaXNoIChVbml0ZWQgU3RhdGVzKVwiXV0iXSwgWzMyMTAsICJbMTgwODAwNzAyNiwxODA4MDA3MDI2LG51bGwsbnVsbCw0Mjk0NzA1MTUyLHRydWUsdHJ1ZSx0cnVlLG51bGxdIl0sIFszMjExLCAiW1wiQXpuV0lqbj09UU00QWRPV1wiLFwiMVwiLFwiOVwiLFwiV0VHR0hERkVQQlhOTFwiXSJdLCAiW1wiV2luZG93c1wiLFwiMTAuMC4wXCIsbnVsbCxcIjY0XCIsXCJ4ODZcIixcIjExNi4wLjAuMFwiXSIsIFsyMDAxLCAiNjIxNDAzODMyMjQ4Njk1OTA0NyJdLCBbMjAwMiwgIltcImRlZmF1bHRcIixcInByb21wdFwiXSJdLCBbMCwgIjIxNyJdXSwgImZpbmdlcnByaW50X3N1c3BpY2lvdXNfZXZlbnRzIjogW10sICJwZXJmIjogW1sxLCAyMF0sIFsyLCAyMzBdLCBbMywgMF1dfQ==");
    const endTime = performance.now();
    const duration = endTime - startTime;
    console.log(`[INIT] (took ${(duration).toFixed(2)} ms, chars: ${result.length})`);

    const numIterations = 300;
    const durations = [];

    const promises = Array.from({ length: numIterations }, async (_, index) => {
        const startTime = performance.now();
        const result = await window.hsw("eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJmIjowLCJzIjoyLCJ0IjoidyIsImQiOiJndjlVdDFSdFVFNHV6QXhmQ2cyWFh3NG5VbnpJU1Zrck5iUmFYbVVjYXJGNk9BZnMvY1JFdW9VcnlTMzVZTHVZSEltWXRScldGcUJOSXFtd3hrRklWT09nTlBkQk8xSWF0WXUxdEkyRU9QQmhLZzYwSzhpRmJWcWY4L0M4RU4ySmx2eEhWeUdnRTltQStaVDFzdVRRU3FzZ1ordG9oaDVsSFJINVJRN3BHWVlWRnlJK3lOczN1SWFaYWc9PTIrUUVjYy9YaUdCaDRqODAiLCJsIjoiaHR0cHM6Ly9uZXdhc3NldHMuaGNhcHRjaGEuY29tL2MvYmY2MDBiZCIsImkiOiJzaGEyNTYtTmxDelZxSlVqYnFaWUxoYXRJKzZUVStDVzBOb3BUbVh6bGdmL21oMjk1Zz0iLCJlIjoxNjk2MTg2MTQzLCJuIjoiaHN3IiwiYyI6MTAwMH0.i80vHmX_YpeKWXPgO5DIHV9OoRDPlbu5pVHI6cLH45aH6_Op3prmNiZy0M2zVd359YhUugc_jgV4COR6Q50BM76YH26fgHmw-pCvyhuDYPSy8iH1Ku8yIutleM9pu0oujjZD7jHWuSrH9CwiraBEkvPx3uD-FShX7P4iPbwoLmM", "eyJjb21wb25lbnRzIjogeyJ2ZXJzaW9uIjogIjEuMzkuMC9iZjYwMGJkIiwgIm5hdmlnYXRvciI6IHsidXNlcl9hZ2VudCI6ICJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuMC4wIFNhZmFyaS81MzcuMzYiLCAibGFuZ3VhZ2UiOiAiZnItRlIiLCAibGFuZ3VhZ2VzIjogWyJmci1GUiIsICJmciIsICJlbi1VUyIsICJlbiJdLCAicGxhdGZvcm0iOiAiV2luMzIiLCAibWF4X3RvdWNoX3BvaW50cyI6IDAsICJ3ZWJkcml2ZXIiOiBmYWxzZSwgIm5vdGlmaWNhdGlvbl9xdWVyeV9wZXJtaXNzaW9uIjogbnVsbCwgInBsdWdpbnNfdW5kZWZpbmVkIjogZmFsc2V9LCAic2NyZWVuIjogeyJjb2xvcl9kZXB0aCI6IDI0LCAicGl4ZWxfZGVwdGgiOiAyNCwgIndpZHRoIjogMjU5OCwgImhlaWdodCI6IDE5NDgsICJhdmFpbF93aWR0aCI6IDI1OTgsICJhdmFpbF9oZWlnaHQiOiAxOTQ4fSwgImRldmljZV9waXhlbF9yYXRpbyI6IDEsICJoYXNfc2Vzc2lvbl9zdG9yYWdlIjogdHJ1ZSwgImhhc19sb2NhbF9zdG9yYWdlIjogdHJ1ZSwgImhhc19pbmRleGVkX2RiIjogdHJ1ZSwgIndlYl9nbF9oYXNoIjogIi0xIiwgImNhbnZhc19oYXNoIjogIjMxNzQ4OTAyMzg5NTA5NzUyNjEiLCAiaGFzX3RvdWNoIjogZmFsc2UsICJub3RpZmljYXRpb25fYXBpX3Blcm1pc3Npb24iOiAiRGVmYXVsdCIsICJjaHJvbWUiOiB0cnVlLCAidG9fc3RyaW5nX2xlbmd0aCI6IDMzLCAiZXJyX2ZpcmVmb3giOiBudWxsLCAicl9ib3Rfc2NvcmUiOiAwLCAicl9ib3Rfc2NvcmVfc3VzcGljaW91c19rZXlzIjogW10sICJyX2JvdF9zY29yZV8yIjogMCwgImF1ZGlvX2hhc2giOiAiLTEiLCAiZXh0ZW5zaW9ucyI6IFtmYWxzZV0sICJwYXJlbnRfd2luX2hhc2giOiAiMTc0Mjc0OTIyNzg3MDc4Nzg3OTMiLCAid2VicnRjX2hhc2giOiAiLTEiLCAicGVyZm9ybWFuY2VfaGFzaCI6ICIxMTQ1NDg0MTc3NDM4NTgwMzI0NSIsICJ1bmlxdWVfa2V5cyI6ICJfLHJlZ2VuZXJhdG9yUnVudGltZSxfX3NlbnRyeV9pbnN0cnVtZW50YXRpb25faGFuZGxlcnNfXywxLEdMT0JBTF9FTlYsX19CSUxMSU5HX1NUQU5EQUxPTkVfXyx3ZWJwYWNrQ2h1bmtkaXNjb3JkX2FwcCxfX2xvY2FsZURhdGFfXyxoY2FwdGNoYSwwLF9fT1ZFUkxBWV9fLERpc2NvcmRFcnJvcnMsY2xlYXJJbW1lZGlhdGUsZ3JlY2FwdGNoYSxEaXNjb3JkU2VudHJ5LF9fdGltaW5nRnVuY3Rpb24saGNhcHRjaGFPbkxvYWQsSW50bFBvbHlmaWxsLF9fU0VOVFJZX18sX19ESVNDT1JEX1dJTkRPV19JRCxzZXRJbW1lZGlhdGUsX19TRUNSRVRfRU1PVElPTl9fLHBsYXRmb3JtIiwgImludl91bmlxdWVfa2V5cyI6ICJsb2NhbFN0b3JhZ2UsX3NoYXJlZExpYnMsaHN3LF9fd2RhdGEsc2Vzc2lvblN0b3JhZ2UiLCAiZmVhdHVyZXMiOiB7InBlcmZvcm1hbmNlX2VudHJpZXMiOiB0cnVlLCAid2ViX2F1ZGlvIjogdHJ1ZSwgIndlYl9ydGMiOiB0cnVlLCAiY2FudmFzXzJkIjogdHJ1ZSwgImZldGNoIjogdHJ1ZX19LCAiZmluZ2VycHJpbnRfZXZlbnRzIjogW1szLCAiMjI5LjI5OTk5OTk5NzAxOTc3Il0sIFsxOTAyLCAiNTciXSwgWzE5MDEsICIxNTMwNzM0NTc5MDEyNTAwMzU3NiJdLCBbMTEwMSwgIjE1MDA0NDQ4OTkzOTgyODQyNDgyIl0sIFsxMTAzLCAiNDkzMjM4MzIxMTQ5NzM2MDUwNyJdLCBbMTEwNSwgIjE3MTU3NDc2MjQxMDIxNjk0MzQ2Il0sIFsxMTA3LCAiW1sxMjQsWzEyNCwxMjQsMTI0LDI1NSwxMjQsMTI0LDEyNCwyNTUsMTI0LDEyNCwxMjQsMjU1LDEyNCwxMjQsMTI0LDI1NV1dLFtbMTEsMCwwLDk1Ljk2ODc1LDE1LDQsOTYuNzY1NjI1XSxbWzEyLDAsLTEsMTEzLjEyNSwxNyw0LDExM10sWzExLDAsMCwxMTEsMTIsNCwxMTFdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMSwwLDAsOTUuOTY4NzUsMTUsNCw5Ni43NjU2MjVdLFsxMiwwLDAsMTA5LjY0MDYyNSwxNCwzLDExMC4xOTUzMTI1XV1dXSJdLCBbMjAxLCAiMTMxMjI0MjI4Nzg5MTgxMTMwMzQiXSwgWzM0MDEsICIxMDEwMzExNjQ4NjY0MDI2ODQ4NiJdLCBbMzQwMywgIltbW1wiaHR0cHM6Ly9uZXdhc3NldHMuaGNhcHRjaGEuY29tL2NhcHRjaGEvdjEvMGM4NDRmMy9oY2FwdGNoYS5qc1wiLDAsNV1dLFtbXCIqXCIsODQsOV1dXSJdLCBbODAzLCAiWzEsNCw1LDcsOSwxMiwyMCwyMSwyNCwyNSwyOV0iXSwgWzYwNCwgIltcIjUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuMC4wIFNhZmFyaS81MzcuMzZcIixcIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC4wLjAgU2FmYXJpLzUzNy4zNlwiLDgsMTYsXCJmci1CRVwiLFtcImZyLUJFXCIsXCJmclwiLFwiZW4tVVNcIixcImVuXCJdLFwiV2luMzJcIixudWxsLFtcIkdvb2dsZSBDaHJvbWUgMTE2XCIsXCJOb3Q7QT1CcmFuZCA4XCIsXCJDaHJvbWl1bSAxMTZcIl0sZmFsc2UsXCJXaW5kb3dzXCIsMiw1LHRydWUsZmFsc2UsMTAwLGZhbHNlLGZhbHNlLHRydWUsXCJbb2JqZWN0IEtleWJvYXJkXVwiLGZhbHNlLGZhbHNlXSJdLCBbMjgwMSwgIjQ2MzEyMjkwODgwNzI1ODQyMTciXSwgWzI4MDUsICJbWzI3NzExNDMxNDQ1MywyNzcxMTQzMTQ0NjAsMjc3MTE0MzE0NDUxLDM1NzExNDMxNDQ1NiwyNzcxMTQzMTQ0NTIsNTU0MjI4NjI4ODk4LDU3MTE0MzE0NDQzLDcxNzExNDMxNDM3MTM5MSw1NTQyMjg2Mjg4OTcsMjc3MTE0MzE0NDU2LDExMDg0NTcyNTc4NjIsMjc3MTE0MzE0NDUwLDU1NDIyODYyODkxOSwyNzcxMTQzMTQ0NjAsMjc3MTE0MzE0NDUxXSxmYWxzZV0iXSwgWzEwNywgIlsyNTk4LDE5NDgsMjU5OCwxOTQ4LDI0LDI0LGZhbHNlLDAsMSwxMjk2LDgwOCx0cnVlLHRydWUsdHJ1ZSxmYWxzZV0iXSwgWzMwMiwgIjEyODE4NjAzODI5NTYyOTc2NDQ3Il0sIFsxNDAxLCAiXCJFdXJvcGUvUGFyaXNcIiJdLCBbMTQwMiwgIltcIkV1cm9wZS9QYXJpc1wiLC02MCwtNjAsLTMyMDM2NDc3NjEwMDAsXCJoZXVyZSBkXHUyMDE5XHUwMGU5dFx1MDBlOSBkXHUyMDE5RXVyb3BlIGNlbnRyYWxlXCIsXCJmci1GUlwiXSJdLCBbMTQwMywgIltcIktNbEtsQWhKblk9NEVaaGh4ZVVaXCIsXCI5XCIsXCJhXCIsXCJYQ09DVlVRWFRYUEFLXCJdIl0sIFszNTA0LCAiMTY5NjE0MTM5Njc5MS43Il0sIFszNTAxLCAiW1tcIm5hdmlnYXRpb246bmV3YXNzZXRzLmhjYXB0Y2hhLmNvbVwiLDE0LjA5OTk5OTk5OTYyNzQ3MSwyOC41XSxbXCJzY3JpcHQ6bmV3YXNzZXRzLmhjYXB0Y2hhLmNvbVwiLDE0LjQ1MDAwMDAwMDE4NjI2NSwzMC42MDAwMDAwMDA1NTg3OTRdLFtcInhtbGh0dHByZXF1ZXN0OmhjYXB0Y2hhLmNvbVwiLDAsMzIuMjAwMDAwMDAwMTg2MjY1XV0iXSwgWzM1MDMsICIxNi4zOTk5OTk5OTg1MDk4ODQiXSwgWzM1MDIsICIyMi40NTAwMDAwMDI5ODAyMzIiXSwgWzM1MDUsICJbMC4wOTk5OTk5OTQwMzk1MzU1MiwyN10iXSwgWzQwMSwgIjE1ODkyNDUxMzQ1NjA2OTg4NDUiXSwgWzQwMiwgIjEwNjciXSwgWzQwNywgIltbXCJsb2FkVGltZXNcIixcImNzaVwiLFwiYXBwXCJdLDM1LDM0LG51bGwsZmFsc2UsZmFsc2UsdHJ1ZSwzNyx0cnVlLHRydWUsdHJ1ZSx0cnVlLHRydWUsW1wiUmF2ZW5cIixcIl9zaGFyZWRMaWJzXCIsXCJoc3dcIixcIl9fd2RhdGFcIl0sW1tcImdldEVsZW1lbnRzQnlDbGFzc05hbWVcIixbXV0sW1wiZ2V0RWxlbWVudEJ5SWRcIixbXV0sW1wicXVlcnlTZWxlY3RvclwiLFtdXSxbXCJxdWVyeVNlbGVjdG9yQWxsXCIsW11dXSxbXSx0cnVlXSJdLCBbNDEyLCAiMTU1ODQ2NjA0MzMwOTM4NjIwMzIiXSwgWzI0MDIsICJbXCJHb29nbGUgSW5jLiAoTlZJRElBKVwiLFwiQU5HTEUgKE5WSURJQSwgTlZJRElBIEdlRm9yY2UgUlRYIDMwNjAgRGlyZWN0M0QxMSB2c181XzAgcHNfNV8wLCBEM0QxMSlcIl0iXSwgWzI0MjAsICJbW1wiSlJVc2JMQ215VXNzdW5NbHdpVEpIOTJCTnhXem80a1ZcIixcIjFhXCIsXCI0XCIsXCJGSVNHR0lOSUdNTEJaXCJdLFtcImhtQVdJVEpUZmtUSjVrUldJVEpvTXZRT2xrVGdOa01sYWpNbHkwVU1mbHNKTlRzWEVUS1dJVEoxaDN4MThmTWRKVEpXSVRKaGgzeDE4Zk1XSVRKSjUyRHFod2V6a1VNWGFqTWxNZE0yYWRNWVVZdlpORU1ZVUNUcXRFRDNcIixcIjVcIixcIjUxXCIsXCJGUFhBU1lHRFBQQVdWXCJdXSJdLCBbMjQwMywgIltcIkdvb2dsZSBJbmMuIChOVklESUEpXCIsXCJBTkdMRSAoTlZJRElBLCBOVklESUEgR2VGb3JjZSBSVFggMzA2MCBEaXJlY3QzRDExIHZzXzVfMCBwc181XzAsIEQzRDExKVwiXSJdLCBbMjQwMSwgIjM5ODIwMzYwMjQ4MTM4NDc2ODAiXSwgWzI0MDgsICJ0cnVlIl0sIFsyNDA3LCAiMTMxNzc2MDcxOTExOTI2NTI2ODUiXSwgWzI0MDksICJbMjE0NzQ4MzY0NywyMTQ3NDgzNjQ3LDQyOTQ5NjcyOTRdIl0sIFsyNDEwLCAiWzE2LDEwMjQsNDA5Niw3LDEyLDEyMCxbMjMsMTI3LDEyN11dIl0sIFsyNDExLCAiWzMyNzY3LDMyNzY3LDE2Mzg0LDgsOCw4XSJdLCBbMjQxMiwgIlsxLDEwMjQsMSwxLDRdIl0sIFsyNDEzLCAiWzIxNDc0ODM2NDcsMjE0NzQ4MzY0NywyMTQ3NDgzNjQ3LDIxNDc0ODM2NDddIl0sIFsyNDE0LCAiWzE2Mzg0LDMyLDE2Mzg0LDIwNDgsMiwyMDQ4XSJdLCBbMjQxNSwgIls0LDEyMCw0XSJdLCBbMjQxNiwgIlsyNCwyNCw2NTUzNiwyMTI5ODgsMjAwNzA0XSJdLCBbMjQxNywgIlsxNiw0MDk1LDMwLDE2LDE2MzgwLDEyMCwxMiwxMjAsWzIzLDEyNywxMjddXSJdLCBbMzgwMCwgIlwiRXJyb3I6IENTUFwiIl0sIFsxMzAyLCAiWzAsMSwyLDMsNF0iXSwgWzE5MDQsICJbMCwxMTQwOSwxMTQwOV0iXSwgWzkwMSwgIjEzNTg2OTA1NTg3NjY3ODUzOCJdLCBbOTA1LCAiW1t0cnVlLFwiZW4tVVNcIix0cnVlLFwiTWljcm9zb2Z0IERhdmlkIC0gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcIixcIk1pY3Jvc29mdCBEYXZpZCAtIEVuZ2xpc2ggKFVuaXRlZCBTdGF0ZXMpXCJdLFtmYWxzZSxcImVuLVVTXCIsdHJ1ZSxcIk1pY3Jvc29mdCBNYXJrIC0gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcIixcIk1pY3Jvc29mdCBNYXJrIC0gRW5nbGlzaCAoVW5pdGVkIFN0YXRlcylcIl0sW2ZhbHNlLFwiZW4tVVNcIix0cnVlLFwiTWljcm9zb2Z0IFppcmEgLSBFbmdsaXNoIChVbml0ZWQgU3RhdGVzKVwiLFwiTWljcm9zb2Z0IFppcmEgLSBFbmdsaXNoIChVbml0ZWQgU3RhdGVzKVwiXV0iXSwgWzMyMTAsICJbMTgwODAwNzAyNiwxODA4MDA3MDI2LG51bGwsbnVsbCw0Mjk0NzA1MTUyLHRydWUsdHJ1ZSx0cnVlLG51bGxdIl0sIFszMjExLCAiW1wiQXpuV0lqbj09UU00QWRPV1wiLFwiMVwiLFwiOVwiLFwiV0VHR0hERkVQQlhOTFwiXSJdLCAiW1wiV2luZG93c1wiLFwiMTAuMC4wXCIsbnVsbCxcIjY0XCIsXCJ4ODZcIixcIjExNi4wLjAuMFwiXSIsIFsyMDAxLCAiNjIxNDAzODMyMjQ4Njk1OTA0NyJdLCBbMjAwMiwgIltcImRlZmF1bHRcIixcInByb21wdFwiXSJdLCBbMCwgIjIxNyJdXSwgImZpbmdlcnByaW50X3N1c3BpY2lvdXNfZXZlbnRzIjogW10sICJwZXJmIjogW1sxLCAyMF0sIFsyLCAyMzBdLCBbMywgMF1dfQ==");

        const endTime = performance.now();
        const duration = endTime - startTime;

        durations.push(duration);
        console.log(`Iteration ${index + 1}: (took ${(duration).toFixed(2)} ms, chars: ${result.length})`);
    });

    await Promise.all(promises);

    // Calculate the average duration
    const totalDuration = durations.reduce((acc, curr) => acc + curr, 0);
    const averageDuration = totalDuration / numIterations;

    console.log(`Average duration: ${(averageDuration).toFixed(2)} ms`);
})();