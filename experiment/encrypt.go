package main

import (
	"crypto/aes"
	"crypto/cipher"
	"crypto/rand"
	"encoding/base64"
	"fmt"
	"io"
)

func encrypt(data []byte, key []byte) ([]byte, error) {
	block, err := aes.NewCipher(key)
	if err != nil {
		return nil, err
	}

	cipherText := make([]byte, aes.BlockSize+len(data))
	iv := cipherText[:aes.BlockSize]
	if _, err := io.ReadFull(rand.Reader, iv); err != nil {
		return nil, err
	}

	stream := cipher.NewCFBEncrypter(block, iv)
	stream.XORKeyStream(cipherText[aes.BlockSize:], data)

	return cipherText, nil
}

func decrypt(cipherText []byte, key []byte) ([]byte, error) {
	block, err := aes.NewCipher(key)
	if err != nil {
		return nil, err
	}

	if len(cipherText) < aes.BlockSize {
		return nil, fmt.Errorf("ciphertext is too short")
	}
	iv := cipherText[:aes.BlockSize]
	cipherText = cipherText[aes.BlockSize:]

	stream := cipher.NewCFBDecrypter(block, iv)
	stream.XORKeyStream(cipherText, cipherText)

	return cipherText, nil
}

func reverseBytes(bytes []byte) []byte {
	for i, j := 0, len(bytes)-1; i < j; i, j = i+1, j-1 {
		bytes[i], bytes[j] = bytes[j], bytes[i]
	}

	return bytes
}

func main() {
	key := []byte{164, 146, 207, 33, 239, 59, 234, 17, 231, 238, 8, 244, 210, 225, 113, 33, 98, 39, 119, 29, 238, 160, 116, 177, 117, 76, 70, 195, 175, 96, 114, 98}

	data, err := base64.StdEncoding.DecodeString("")
	if err != nil {
		panic(err)
	}

	d2 := []byte("")

	for _, d := range [][]byte{d2, data} {
		decrypted, err := decrypt(d, key)
		if err != nil {
			fmt.Println("Decryption error:", err)
			return
		}

		fmt.Println("Decrypted:", string(decrypted)[:50])
	}
}
